#define IF_NOT_RDEV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RDEV)
		(__VA_ARGS__...) if def(CONFIG_RDEV)


#define __USE_XOPEN2KXSI if False 
	expansions 



#define IF_NOT_SETKEYCODES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETKEYCODES)
		(__VA_ARGS__...) if def(CONFIG_SETKEYCODES)


#define run_parts_trivial_usage if True 
	expansions 
		 => "[-t] "IF_FEATURE_RUN_PARTS_FANCY("[-l] ")"[-a ARG] [-u MASK] DIRECTORY" if True


#define IF_HUSH_MODE_X if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_MODE_X)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_MODE_X)


#define makedevs_example_usage if (def(CONFIG_FEATURE_MAKEDEVS_LEAF)|def(CONFIG_FEATURE_MAKEDEVS_TABLE)) 
	expansions 
		 => "For example:\n" "<name>    <type> <mode><uid><gid><major><minor><start><inc><count>\n" "/dev         d   755    0    0    -      -      -      -    -\n" "/dev/console c   666    0    0    5      1      -      -    -\n" "/dev/null    c   666    0    0    1      3      0      0    -\n" "/dev/zero    c   666    0    0    1      5      0      0    -\n" "/dev/hda     b   640    0    0    3      0      0      0    -\n" "/dev/hda     b   640    0    0    3      1      1      1    15\n\n" "Will Produce:\n" "/dev\n" "/dev/console\n" "/dev/null\n" "/dev/zero\n" "/dev/hda\n" "/dev/hda[0-15]\n" if def(CONFIG_FEATURE_MAKEDEVS_TABLE)
		 => "# makedevs /dev/ttyS c 4 66 2 63\n" "[creates ttyS2-ttyS63]\n" "# makedevs /dev/hda b 3 0 0 8 s\n" "[creates hda,hda1-hda8]\n" if (def(CONFIG_FEATURE_MAKEDEVS_LEAF)&!def(CONFIG_FEATURE_MAKEDEVS_TABLE))


#define usleep_trivial_usage if True 
	expansions 
		 => "N" if True


#define IF_NOT_TTYSIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TTYSIZE)
		(__VA_ARGS__...) if def(CONFIG_TTYSIZE)


#define IF_NOT_SLATTACH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SLATTACH)
		(__VA_ARGS__...) if def(CONFIG_SLATTACH)


#define __OFF64_T_TYPE if True 
	expansions 
		 => __SQUAD_TYPE if True


#define IF_FEATURE_XARGS_SUPPORT_CONFIRMATION if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)


#define ENABLE_TRACEROUTE6 if True 
	expansions 
		 => 0 if !def(CONFIG_TRACEROUTE6)
		 => 1 if def(CONFIG_TRACEROUTE6)


#define __DEC128_EPSILON__ if True 
	expansions 
		 => 1E-33DL if True


#define flashcp_trivial_usage if True 
	expansions 
		 => "-v FILE MTD_DEVICE" if True


#define rmmod_trivial_usage if True 
	expansions 
		 => "[-wfa] [MODULE]..." if True


#define IF_NOT_FEATURE_HDPARM_HDIO_DRIVE_RESET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)


#define ftpd_trivial_usage if True 
	expansions 
		 => "[-wvS] [-t N] [-T N] [DIR]" if True


#define yes_trivial_usage if True 
	expansions 
		 => "[STRING]" if True


#define sh_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define _G_HAVE_LONG_DOUBLE_IO if True 
	expansions 
		 => 1 if True


#define IF_MICROCOM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MICROCOM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MICROCOM)


#define ENABLE_FEATURE_INETD_SUPPORT_BUILTIN_TIME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
		 => 1 if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)


#define IF_TRACEROUTE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TRACEROUTE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TRACEROUTE)


#define ENABLE_MAN if True 
	expansions 
		 => 0 if !def(CONFIG_MAN)
		 => 1 if def(CONFIG_MAN)


#define rfkill_trivial_usage if True 
	expansions 
		 => "COMMAND [INDEX|TYPE]" if True


#define IF_FEATURE_TOP_DECIMALS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TOP_DECIMALS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TOP_DECIMALS)


#define IF_FEATURE_FANCY_ECHO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FANCY_ECHO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FANCY_ECHO)


#define ENABLE_TIMEOUT if True 
	expansions 
		 => 0 if !def(CONFIG_TIMEOUT)
		 => 1 if def(CONFIG_TIMEOUT)


#define IF_SED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SED)


#define IF_FEATURE_SHADOWPASSWDS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SHADOWPASSWDS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SHADOWPASSWDS)


#define __x86_64__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_CKSUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CKSUM)
		(__VA_ARGS__...) if def(CONFIG_CKSUM)


#define IF_NOT_UMOUNT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UMOUNT)
		(__VA_ARGS__...) if def(CONFIG_UMOUNT)


#define IF_NOT_FEATURE_TAR_NOPRESERVE_TIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)


#define uptime_example_usage if True 
	expansions 
		 => "$ uptime\n" "  1:55pm  up  2:30, load average: 0.09, 0.04, 0.00\n" if True


#define IF_NOT_UNZIP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNZIP)
		(__VA_ARGS__...) if def(CONFIG_UNZIP)


#define _G_HAVE_ATEXIT if True 
	expansions 
		 => 1 if True


#define IF_NOT_SENDMAIL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SENDMAIL)
		(__VA_ARGS__...) if def(CONFIG_SENDMAIL)


#define ENABLE_MKFS_VFAT if True 
	expansions 
		 => 0 if !def(CONFIG_MKFS_VFAT)
		 => 1 if def(CONFIG_MKFS_VFAT)


#define IF_NOT_FEATURE_XARGS_SUPPORT_TERMOPT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)


#define _ATFILE_SOURCE if True 
	expansions 
		 => 1 if True


#define __SSIZE_T_TYPE if True 
	expansions 
		 => __SWORD_TYPE if True


#define __clock_t_defined if True 
	expansions 
		 => 1 if True


#define IF_HUSH_LOOPS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_LOOPS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_LOOPS)


#define _IO_NO_WRITES if True 
	expansions 
		 => 8 if True


#define IF_NOT_LOGGER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOGGER)
		(__VA_ARGS__...) if def(CONFIG_LOGGER)


#define cal_trivial_usage if True 
	expansions 
		 => "[-jy] [[MONTH] YEAR]" if True


#define xargs_example_usage if True 
	expansions 
		 => "$ ls | xargs gzip\n" "$ find . -name '*.c' -print | xargs rm\n" if True


#define IF_TFTP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TFTP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TFTP)


#define ENABLE_RUNLEVEL if True 
	expansions 
		 => 0 if !def(CONFIG_RUNLEVEL)
		 => 1 if def(CONFIG_RUNLEVEL)


#define gzip_trivial_usage if True 
	expansions 
		 => "[-cfd] [FILE]..." if True


#define ENABLE_FEATURE_MOUNT_LOOP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_LOOP)
		 => 1 if def(CONFIG_FEATURE_MOUNT_LOOP)


#define IF_SETCONSOLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETCONSOLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETCONSOLE)


#define _IO_va_list if True 
	expansions 
		 => __gnuc_va_list if True


#define __gnu_linux__ if True 
	expansions 
		 => 1 if True


#define chrt_trivial_usage if True 
	expansions 
		 => "[-prfom] [PRIO] [PID | PROG ARGS]" if True


#define IF_NOT_VCONFIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_VCONFIG)
		(__VA_ARGS__...) if def(CONFIG_VCONFIG)


#define ENABLE_IFENSLAVE if True 
	expansions 
		 => 0 if !def(CONFIG_IFENSLAVE)
		 => 1 if def(CONFIG_IFENSLAVE)


#define IF_NOT_ENV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ENV)
		(__VA_ARGS__...) if def(CONFIG_ENV)


#define getc if True 
	expansions 
		(_fp) => _IO_getc (_fp) if True


#define __USE_ATFILE if True 
	expansions 
		 => 1 if True


#define ENABLE_PS if True 
	expansions 
		 => 0 if !def(CONFIG_PS)
		 => 1 if def(CONFIG_PS)


#define IF_NOT_USE_BB_CRYPT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_USE_BB_CRYPT)
		(__VA_ARGS__...) if def(CONFIG_USE_BB_CRYPT)


#define more_full_usage if True 
	expansions 
		 => "\n\n" "View FILE (or stdin) one screenful at a time" if True


#define readprofile_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-m mapfile	(Default: /boot/System.map)" "\n	-p profile	(Default: /proc/profile)" "\n	-M NUM		Set the profiling multiplier to NUM" "\n	-i		Print only info about the sampling step" "\n	-v		Verbose" "\n	-a		Print all symbols, even if count is 0" "\n	-b		Print individual histogram-bin counts" "\n	-s		Print individual counters within functions" "\n	-r		Reset all the counters (root only)" "\n	-n		Disable byte order auto-detection" if True


#define IF_NOT_SMEMCAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SMEMCAP)
		(__VA_ARGS__...) if def(CONFIG_SMEMCAP)


#define __TIMER_T_TYPE if True 
	expansions 
		 => void * if True


#define IF_FEATURE_INSMOD_LOAD_MAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSMOD_LOAD_MAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSMOD_LOAD_MAP)


#define ENABLE_FEATURE_TAR_NOPRESERVE_TIME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
		 => 1 if def(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)


#define ENABLE_FIRST_SYSTEM_ID if True 
	expansions 
		 => 0 if !def(CONFIG_FIRST_SYSTEM_ID)
		 => 1 if def(CONFIG_FIRST_SYSTEM_ID)


#define IF_IFCONFIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IFCONFIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IFCONFIG)


#define IF_DOS2UNIX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DOS2UNIX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DOS2UNIX)


#define IF_NOT_FEATURE_BUFFERS_GO_ON_STACK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)


#define __LONG_MAX__ if True 
	expansions 
		 => 9223372036854775807L if True


#define _BSD_SOURCE if True 
	expansions 
		 => 1 if True


#define telnetd_trivial_usage if True 
	expansions 
		 => "[OPTIONS]" if True


#define hexdump_full_usage if True 
	expansions 
		 => "\n\n" "Display FILEs (or stdin) in a user specified format\n" "\nOptions:" "\n	-b		One-byte octal display" "\n	-c		One-byte character display" "\n	-C		Canonical hex+ASCII, 16 bytes per line" "\n	-d		Two-byte decimal display" "\n	-e FORMAT STRING" "\n	-f FORMAT FILE" "\n	-n LENGTH	Interpret only LENGTH bytes of input" "\n	-o		Two-byte octal display" "\n	-s OFFSET	Skip OFFSET bytes" "\n	-v		Display all input data" "\n	-x		Two-byte hexadecimal display" IF_FEATURE_HEXDUMP_REVERSE( "\n	-R		Reverse of 'hexdump -Cv'") if True


#define mkfifo_full_usage if True 
	expansions 
		 => "\n\n" "Create named pipe\n" "\nOptions:" "\n	-m MODE	Mode (default a=rw)" IF_SELINUX( "\n	-Z	Set security context" ) if True


#define printenv_trivial_usage if True 
	expansions 
		 => "[VARIABLE]..." if True


#define findfs_example_usage if True 
	expansions 
		 => "$ findfs LABEL=MyDevice" if True


#define __RLIM64_T_TYPE if True 
	expansions 
		 => __UQUAD_TYPE if True


#define rtcwake_full_usage if True 
	expansions 
		 => "\n\n" "Enter a system sleep state until specified wakeup time\n" IF_LONG_OPTS( "\n	-a,--auto	Read clock mode from adjtime" "\n	-l,--local	Clock is set to local time" "\n	-u,--utc	Clock is set to UTC time" "\n	-d,--device=DEV	Specify the RTC device" "\n	-m,--mode=MODE	Set the sleep state (default: standby)" "\n	-s,--seconds=SEC Set the timeout in SEC seconds from now" "\n	-t,--time=TIME	Set the timeout to TIME seconds from epoch" ) IF_NOT_LONG_OPTS( "\n	-a	Read clock mode from adjtime" "\n	-l	Clock is set to local time" "\n	-u	Clock is set to UTC time" "\n	-d DEV	Specify the RTC device" "\n	-m MODE	Set the sleep state (default: standby)" "\n	-s SEC	Set the timeout in SEC seconds from now" "\n	-t TIME	Set the timeout to TIME seconds from epoch" ) if True


#define __S32_TYPE if True 
	expansions 
		 => int if True


#define ENABLE_FEATURE_ADDUSER_TO_GROUP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ADDUSER_TO_GROUP)
		 => 1 if def(CONFIG_FEATURE_ADDUSER_TO_GROUP)


#define iptunnel_full_usage if True 
	expansions 
		 => "\n\n" "iptunnel { add | change | del | show } [NAME]\n" "	[mode { ipip | gre | sit }] [remote ADDR] [local ADDR]\n" "	[[i|o]seq] [[i|o]key KEY] [[i|o]csum]\n" "	[ttl TTL] [tos TOS] [[no]pmtudisc] [dev PHYS_DEV]" if True


#define IF_REFORMIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_REFORMIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_REFORMIME)


#define _G_HAVE_IO_GETLINE_INFO if True 
	expansions 
		 => 1 if True


#define ENABLE_CHGRP if True 
	expansions 
		 => 0 if !def(CONFIG_CHGRP)
		 => 1 if def(CONFIG_CHGRP)


#define __DECIMAL_DIG__ if True 
	expansions 
		 => 21 if True


#define showkey_trivial_usage if True 
	expansions 
		 => "[-a | -k | -s]" if True


#define echo_trivial_usage if True 
	expansions 
		 => IF_FEATURE_FANCY_ECHO("[-neE] ") "[ARG]..." if True


#define fgrep_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_PLATFORM_LINUX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PLATFORM_LINUX)
		(__VA_ARGS__...) if def(CONFIG_PLATFORM_LINUX)


#define __off_t_defined if True 
	expansions 
		 if True


#define lsmod_full_usage if True 
	expansions 
		 => "\n\n" "List the currently loaded kernel modules" if True


#define ENABLE_INSTALL_SH_APPLET_SCRIPT_WRAPPER if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
		 => 1 if def(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)


#define linux64_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define nameif_example_usage if True 
	expansions 
		 => "$ nameif -s dmz0 00:A0:C9:8C:F6:3F\n" " or\n" "$ nameif -c /etc/my_mactab_file\n" if True


#define IF_NOT_FEATURE_IFUPDOWN_IPV4 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_IPV4)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_IPV4)


#define IF_FEATURE_EDITING_HISTORY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING_HISTORY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING_HISTORY)


#define iproute_trivial_usage if True 
	expansions 
		 => "{ list | flush | { add | del | change | append |\n" "		replace | monitor } ROUTE }" if True


#define ENABLE_FEATURE_MODUTILS_ALIAS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MODUTILS_ALIAS)
		 => 1 if def(CONFIG_FEATURE_MODUTILS_ALIAS)


#define udhcpc_full_usage if True 
	expansions 
		 => "\n" IF_LONG_OPTS( "\n	-i,--interface IFACE	Interface to use (default eth0)" "\n	-p,--pidfile FILE	Create pidfile" "\n	-s,--script PROG	Run PROG at DHCP events (default "CONFIG_UDHCPC_DEFAULT_SCRIPT")" "\n	-t,--retries N		Send up to N discover packets" "\n	-T,--timeout N		Pause between packets (default 3 seconds)" "\n	-A,--tryagain N		Wait N seconds after failure (default 20)" "\n	-f,--foreground		Run in foreground" USE_FOR_MMU( "\n	-b,--background		Background if lease is not obtained" ) "\n	-n,--now		Exit if lease is not obtained" "\n	-q,--quit		Exit after obtaining lease" "\n	-R,--release		Release IP on exit" "\n	-S,--syslog		Log to syslog too" IF_FEATURE_UDHCP_PORT( "\n	-P,--client-port N	Use port N (default 68)" ) IF_FEATURE_UDHCPC_ARPING( "\n	-a,--arping		Use arping to validate offered address" ) "\n	-O,--request-option OPT	Request option OPT from server (cumulative)" "\n	-o,--no-default-options	Don't request any options (unless -O is given)" "\n	-r,--request IP		Request this IP address" "\n	-x OPT:VAL		Include option OPT in sent packets (cumulative)" "\n				Examples of string, numeric, and hex byte opts:" "\n				-x hostname:bbox - option 12" "\n				-x lease:3600 - option 51 (lease time)" "\n				-x 0x3d:0100BEEFC0FFEE - option 61 (client id)" "\n	-F,--fqdn NAME		Ask server to update DNS mapping for NAME" "\n	-H,-h,--hostname NAME	Send NAME as client hostname (default none)" "\n	-V,--vendorclass VENDOR	Vendor identifier (default 'udhcp VERSION')" "\n	-C,--clientid-none	Don't send MAC as client identifier" IF_UDHCP_VERBOSE( "\n	-v			Verbose" ) ) IF_NOT_LONG_OPTS( "\n	-i IFACE	Interface to use (default eth0)" "\n	-p FILE		Create pidfile" "\n	-s PROG		Run PROG at DHCP events (default "CONFIG_UDHCPC_DEFAULT_SCRIPT")" "\n	-t N		Send up to N discover packets" "\n	-T N		Pause between packets (default 3 seconds)" "\n	-A N		Wait N seconds (default 20) after failure" "\n	-f		Run in foreground" USE_FOR_MMU( "\n	-b		Background if lease is not obtained" ) "\n	-n		Exit if lease is not obtained" "\n	-q		Exit after obtaining lease" "\n	-R		Release IP on exit" "\n	-S		Log to syslog too" IF_FEATURE_UDHCP_PORT( "\n	-P N		Use port N (default 68)" ) IF_FEATURE_UDHCPC_ARPING( "\n	-a		Use arping to validate offered address" ) "\n	-O OPT		Request option OPT from server (cumulative)" "\n	-o		Don't request any options (unless -O is given)" "\n	-r IP		Request this IP address" "\n	-x OPT:VAL	Include option OPT in sent packets (cumulative)" "\n			Examples of string, numeric, and hex byte opts:" "\n			-x hostname:bbox - option 12" "\n			-x lease:3600 - option 51 (lease time)" "\n			-x 0x3d:0100BEEFC0FFEE - option 61 (client id)" "\n	-F NAME		Ask server to update DNS mapping for NAME" "\n	-H,-h NAME	Send NAME as client hostname (default none)" "\n	-V VENDOR	Vendor identifier (default 'udhcp VERSION')" "\n	-C		Don't send MAC as client identifier" IF_UDHCP_VERBOSE( "\n	-v		Verbose" ) ) if True


#define IF_UNXZ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNXZ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNXZ)


#define ENABLE_FEATURE_START_STOP_DAEMON_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
		 => 1 if def(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)


#define ENABLE_IOCTL_HEX2STR_ERROR if True 
	expansions 
		 => 0 if !def(CONFIG_IOCTL_HEX2STR_ERROR)
		 => 1 if def(CONFIG_IOCTL_HEX2STR_ERROR)


#define __WCHAR_TYPE__ if True 
	expansions 
		 => int if True


#define IF_NOT_FEATURE_KLOGD_KLOGCTL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_KLOGD_KLOGCTL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_KLOGD_KLOGCTL)


#define IF_NOT_FEATURE_MDEV_CONF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MDEV_CONF)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MDEV_CONF)


#define __USE_POSIX199506 if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_LAST_SMALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LAST_SMALL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LAST_SMALL)


#define IF_LOGGER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOGGER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOGGER)


#define IF_NOT_EJECT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EJECT)
		(__VA_ARGS__...) if def(CONFIG_EJECT)


#define lpq_trivial_usage if True 
	expansions 
		 => "[-P queue[@host[:port]]] [-U USERNAME] [-d JOBID]... [-fs]" if True


#define IF_GETOPT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GETOPT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GETOPT)


#define IF_NOT_CONSPY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CONSPY)
		(__VA_ARGS__...) if def(CONFIG_CONSPY)


#define IF_AR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_AR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_AR)


#define IF_NOT_FEATURE_HAVE_RPC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HAVE_RPC)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HAVE_RPC)


#define IF_FEATURE_FIND_MAXDEPTH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_MAXDEPTH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_MAXDEPTH)


#define ENABLE_INSTALL_NO_USR if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_NO_USR)
		 => 1 if def(CONFIG_INSTALL_NO_USR)


#define reset_full_usage if True 
	expansions 
		 => "\n\n" "Reset the screen" if True


#define IF_SETSEBOOL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETSEBOOL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETSEBOOL)


#define expr_trivial_usage if True 
	expansions 
		 => "EXPRESSION" if True


#define ENABLE_FEATURE_SEAMLESS_LZMA if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SEAMLESS_LZMA)
		 => 1 if def(CONFIG_FEATURE_SEAMLESS_LZMA)


#define IF_DEVFSD_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEVFSD_VERBOSE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEVFSD_VERBOSE)


#define logread_full_usage if True 
	expansions 
		 => "\n\n" "Show messages in syslogd's circular buffer\n" "\nOptions:" "\n	-f	Output data as log grows" if True


#define ENABLE_NC_SERVER if True 
	expansions 
		 => 0 if !def(CONFIG_NC_SERVER)
		 => 1 if def(CONFIG_NC_SERVER)


#define IF_FEATURE_EXTRA_QUIET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EXTRA_QUIET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EXTRA_QUIET)


#define _IO_SHOWBASE if True 
	expansions 
		 => 0200 if True


#define ENABLE_OPENVT if True 
	expansions 
		 => 0 if !def(CONFIG_OPENVT)
		 => 1 if def(CONFIG_OPENVT)


#define IF_FEATURE_IPC_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IPC_SYSLOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IPC_SYSLOG)


#define IF_NOT_EFENCE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EFENCE)
		(__VA_ARGS__...) if def(CONFIG_EFENCE)


#define sv_full_usage if True 
	expansions 
		 => "\n\n" "Control services monitored by runsv supervisor.\n" "Commands (only first character is enough):\n" "\n" "status: query service status\n" "up: if service isn't running, start it. If service stops, restart it\n" "once: like 'up', but if service stops, don't restart it\n" "down: send TERM and CONT signals. If ./run exits, start ./finish\n" "	if it exists. After it stops, don't restart service\n" "exit: send TERM and CONT signals to service and log service. If they exit,\n" "	runsv exits too\n" "pause, cont, hup, alarm, interrupt, quit, 1, 2, term, kill: send\n" "STOP, CONT, HUP, ALRM, INT, QUIT, USR1, USR2, TERM, KILL signal to service" if True


#define IF_NOT_FLOCK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FLOCK)
		(__VA_ARGS__...) if def(CONFIG_FLOCK)


#define IF_FEATURE_IP_RARE_PROTOCOLS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_RARE_PROTOCOLS)


#define sum_trivial_usage if True 
	expansions 
		 => "[-rs] [FILE]..." if True


#define lzma_full_usage if True 
	expansions 
		 => "\n\n" "Decompress FILE (or stdin)\n" "\nOptions:" "\n	-d	Decompress" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define runlevel_trivial_usage if True 
	expansions 
		 => "[FILE]" if True


#define IF_NOT_IPLINK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPLINK)
		(__VA_ARGS__...) if def(CONFIG_IPLINK)


#define ENABLE_BUSYBOX_EXEC_PATH if True 
	expansions 
		 => 0 if !def(CONFIG_BUSYBOX_EXEC_PATH)
		 => 1 if def(CONFIG_BUSYBOX_EXEC_PATH)


#define ENABLE_NC_EXTRA if True 
	expansions 
		 => 0 if !def(CONFIG_NC_EXTRA)
		 => 1 if def(CONFIG_NC_EXTRA)


#define ENABLE_NBDCLIENT if True 
	expansions 
		 => 0 if !def(CONFIG_NBDCLIENT)
		 => 1 if def(CONFIG_NBDCLIENT)


#define _IO_stdin if True 
	expansions 
		 => ((_IO_FILE*)(&_IO_2_1_stdin_)) if True


#define IF_FEATURE_UMOUNT_ALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UMOUNT_ALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UMOUNT_ALL)


#define ENABLE_SUM if True 
	expansions 
		 => 0 if !def(CONFIG_SUM)
		 => 1 if def(CONFIG_SUM)


#define IF_FEATURE_CPIO_P if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CPIO_P)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CPIO_P)


#define ENABLE_FEATURE_SUN_LABEL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SUN_LABEL)
		 => 1 if def(CONFIG_FEATURE_SUN_LABEL)


#define freeramdisk_trivial_usage if True 
	expansions 
		 => "DEVICE" if True


#define IF_NOT_PASSWD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PASSWD)
		(__VA_ARGS__...) if def(CONFIG_PASSWD)


#define IF_NOT_FEATURE_DATE_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DATE_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DATE_COMPAT)


#define ENABLE_INIT_TERMINAL_TYPE if True 
	expansions 
		 => 0 if !def(CONFIG_INIT_TERMINAL_TYPE)
		 => 1 if def(CONFIG_INIT_TERMINAL_TYPE)


#define mktemp_trivial_usage if True 
	expansions 
		 => "[-dt] [-p DIR] [TEMPLATE]" if True


#define __THROW if True 
	expansions 
		 => __attribute__ ((__nothrow__)) if True


#define IF_NOT_ASH_OPTIMIZE_FOR_SIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
		(__VA_ARGS__...) if def(CONFIG_ASH_OPTIMIZE_FOR_SIZE)


#define __va_arg_pack if True 
	expansions 
		() => __builtin_va_arg_pack () if True


#define ENABLE_WATCH if True 
	expansions 
		 => 0 if !def(CONFIG_WATCH)
		 => 1 if def(CONFIG_WATCH)


#define IF_SWITCH_ROOT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SWITCH_ROOT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SWITCH_ROOT)


#define IF_ENVDIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ENVDIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ENVDIR)


#define IF_NOT_FEATURE_VOLUMEID_HFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_HFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_HFS)


#define IF_GETENFORCE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GETENFORCE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GETENFORCE)


#define IF_FEATURE_HUMAN_READABLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HUMAN_READABLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HUMAN_READABLE)


#define WUNTRACED if True 
	expansions 
		 => 2 if True


#define ENABLE_FEATURE_VOLUMEID_BTRFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_BTRFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_BTRFS)


#define __BLKCNT_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define _IO_UNIFIED_JUMPTABLES if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
		 => 1 if def(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)


#define ENABLE_HUSH_SAVEHISTORY if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_SAVEHISTORY)
		 => 1 if def(CONFIG_HUSH_SAVEHISTORY)


#define __USE_UNIX98 if False 
	expansions 



#define IF_FEATURE_HTTPD_CGI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_CGI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_CGI)


#define ENABLE_PATCH if True 
	expansions 
		 => 0 if !def(CONFIG_PATCH)
		 => 1 if def(CONFIG_PATCH)


#define ENABLE_HD if True 
	expansions 
		 => 0 if !def(CONFIG_HD)
		 => 1 if def(CONFIG_HD)


#define ENABLE_FEATURE_INSMOD_LOADINKMEM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSMOD_LOADINKMEM)
		 => 1 if def(CONFIG_FEATURE_INSMOD_LOADINKMEM)


#define IF_DU if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DU)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DU)


#define IF_PAM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PAM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PAM)


#define ENABLE_FEATURE_MTAB_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MTAB_SUPPORT)
		 => 1 if def(CONFIG_FEATURE_MTAB_SUPPORT)


#define IF_FEATURE_PREFER_APPLETS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PREFER_APPLETS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PREFER_APPLETS)


#define __need___va_list if False 
	expansions 
		 if False


#define IF_FEATURE_MOUNT_FSTAB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_FSTAB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_FSTAB)


#define xzcat_full_usage if True 
	expansions 
		 => "\n\n" "Decompress to stdout" if True


#define _IO_CURRENTLY_PUTTING if True 
	expansions 
		 => 0x800 if True


#define ENABLE_FEATURE_SEAMLESS_Z if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SEAMLESS_Z)
		 => 1 if def(CONFIG_FEATURE_SEAMLESS_Z)


#define umount_example_usage if True 
	expansions 
		 => "$ umount /dev/hdc1\n" if True


#define _G_VTABLE_LABEL_PREFIX if True 
	expansions 
		 => "__vt_" if True


#define IF_NOT_DMALLOC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DMALLOC)
		(__VA_ARGS__...) if def(CONFIG_DMALLOC)


#define uuencode_trivial_usage if True 
	expansions 
		 => "[-m] [INFILE] STORED_FILENAME" if True


#define IF_NOT_FEATURE_INETD_SUPPORT_BUILTIN_TIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)


#define __LP64__ if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_DEVPTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DEVPTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DEVPTS)


#define __USE_GNU if False 
	expansions 



#define rpm2cpio_trivial_usage if True 
	expansions 
		 => "package.rpm" if True


#define __WIFSIGNALED if True 
	expansions 
		(status) => (((signed char) (((status) & 0x7f) + 1) >> 1) > 0) if True


#define IF_NOT_FEATURE_HTTPD_ENCODE_URL_STR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)


#define ENABLE_FEATURE_WGET_LONG_OPTIONS if True 
	expansions 
		 => 0 if True


#define IF_NOT_BOOTCHARTD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BOOTCHARTD)
		(__VA_ARGS__...) if def(CONFIG_BOOTCHARTD)


#define __FLT_HAS_INFINITY__ if True 
	expansions 
		 => 1 if True


#define ENABLE_NICE if True 
	expansions 
		 => 0 if !def(CONFIG_NICE)
		 => 1 if def(CONFIG_NICE)


#define ENABLE_FEATURE_CHAT_VAR_ABORT_LEN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
		 => 1 if def(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)


#define ENABLE_CHVT if True 
	expansions 
		 => 0 if !def(CONFIG_CHVT)
		 => 1 if def(CONFIG_CHVT)


#define ENABLE_FEATURE_FANCY_PING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FANCY_PING)
		 => 1 if def(CONFIG_FEATURE_FANCY_PING)


#define IF_HEXDUMP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HEXDUMP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HEXDUMP)


#define IF_NOT_FEATURE_TRACEROUTE_SOURCE_ROUTE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)


#define FD_SETSIZE if True 
	expansions 
		 => __FD_SETSIZE if True


#define lzcat_trivial_usage if True 
	expansions 
		 => "FILE" if True


#define ENABLE_HUSH_IF if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_IF)
		 => 1 if def(CONFIG_HUSH_IF)


#define IF_NOT_VOLUMEID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_VOLUMEID)
		(__VA_ARGS__...) if def(CONFIG_VOLUMEID)


#define sleep_full_usage if True 
	expansions 
		 => "\n\n" IF_NOT_FEATURE_FANCY_SLEEP("Pause for N seconds") IF_FEATURE_FANCY_SLEEP( "Pause for a time equal to the total of the args given, where each arg can\n" "have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays") if True


#define ENABLE_FEATURE_INETD_RPC if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INETD_RPC)
		 => 1 if def(CONFIG_FEATURE_INETD_RPC)


#define IF_SU if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SU)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SU)


#define IF_FEATURE_ROTATE_LOGFILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ROTATE_LOGFILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ROTATE_LOGFILE)


#define adduser_full_usage if True 
	expansions 
		 => "\n\n" "Add a user\n" "\nOptions:" "\n	-h DIR		Home directory" "\n	-g GECOS	GECOS field" "\n	-s SHELL	Login shell" "\n	-G GRP		Add user to existing group" "\n	-S		Create a system user" "\n	-D		Don't assign a password" "\n	-H		Don't create home directory" "\n	-u UID		User id" if True


#define sed_trivial_usage if True 
	expansions 
		 => "[-efinr] SED_CMD [FILE]..." if True


#define ENABLE_HUSH_FUNCTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_FUNCTIONS)
		 => 1 if def(CONFIG_HUSH_FUNCTIONS)


#define ENABLE_FEATURE_LS_COLOR_IS_DEFAULT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
		 => 1 if def(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)


#define IF_FEATURE_USE_TERMIOS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_USE_TERMIOS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_USE_TERMIOS)


#define unlzma_trivial_usage if True 
	expansions 
		 => "[-cf] [FILE]..." if True


#define __FLT_MAX_EXP__ if True 
	expansions 
		 => 128 if True


#define mkpasswd_full_usage if True 
	expansions 
		 => "\n\n" "Crypt the PASSWORD using crypt(3)\n" "\nOptions:" IF_LONG_OPTS( "\n	-P,--password-fd=N	Read password from fd N" "\n	-m,--method=TYPE	Encryption method TYPE" "\n	-S,--salt=SALT" ) IF_NOT_LONG_OPTS( "\n	-P N	Read password from fd N" "\n	-m TYPE	Encryption method TYPE" "\n	-S SALT" ) if True


#define ENABLE_NMETER if True 
	expansions 
		 => 0 if !def(CONFIG_NMETER)
		 => 1 if def(CONFIG_NMETER)


#define ENABLE_DEBUG if True 
	expansions 
		 => 0 if !def(CONFIG_DEBUG)
		 => 1 if def(CONFIG_DEBUG)


#define _IO_cleanup_region_start if True 
	expansions 
		(_fct, _fp) if True


#define IF_UDHCPC_SLACK_FOR_BUGGY_SERVERS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)


#define __SIZE_T__ if True 
	expansions 
		 if True


#define IF_CHGRP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHGRP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHGRP)


#define IF_NOT_FEATURE_VI_USE_SIGNALS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_USE_SIGNALS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_USE_SIGNALS)


#define __DBL_MANT_DIG__ if True 
	expansions 
		 => 53 if True


#define ENABLE_COMM if True 
	expansions 
		 => 0 if !def(CONFIG_COMM)
		 => 1 if def(CONFIG_COMM)


#define rx_full_usage if True 
	expansions 
		 => "\n\n" "Receive a file using the xmodem protocol" if True


#define ENABLE_FSCK if True 
	expansions 
		 => 0 if !def(CONFIG_FSCK)
		 => 1 if def(CONFIG_FSCK)


#define __unbounded if True 
	expansions 
		 if True


#define ENABLE_FEATURE_CHAT_IMPLICIT_CR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
		 => 1 if def(CONFIG_FEATURE_CHAT_IMPLICIT_CR)


#define ENABLE_FINDFS if True 
	expansions 
		 => 0 if !def(CONFIG_FINDFS)
		 => 1 if def(CONFIG_FINDFS)


#define IF_FEATURE_ENV_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ENV_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ENV_LONG_OPTIONS)


#define ENABLE_CHROOT if True 
	expansions 
		 => 0 if !def(CONFIG_CHROOT)
		 => 1 if def(CONFIG_CHROOT)


#define modinfo_trivial_usage if True 
	expansions 
		 => "[-adlp0] [-F keyword] MODULE" if True


#define __STDC_VERSION__ if True 
	expansions 
		 => 199901L if True


#define IF_UNICODE_COMBINING_WCHARS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_COMBINING_WCHARS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_COMBINING_WCHARS)


#define ENABLE_WHICH if True 
	expansions 
		 => 0 if !def(CONFIG_WHICH)
		 => 1 if def(CONFIG_WHICH)


#define __CHAR_BIT__ if True 
	expansions 
		 => 8 if True


#define ENABLE_PASSWORD_MINLEN if True 
	expansions 
		 => 0 if !def(CONFIG_PASSWORD_MINLEN)
		 => 1 if def(CONFIG_PASSWORD_MINLEN)


#define IF_TTY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TTY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TTY)


#define ENABLE_FEATURE_DIFF_DIR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DIFF_DIR)
		 => 1 if def(CONFIG_FEATURE_DIFF_DIR)


#define IF_NOT_FEATURE_BOOTCHARTD_CONFIG_FILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)


#define IF_NOT_FEATURE_MDEV_RENAME_REGEXP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MDEV_RENAME_REGEXP)


#define _STRUCT_TIMEVAL if True 
	expansions 
		 => 1 if True


#define __NTH if True 
	expansions 
		(fct) => __attribute__ ((__nothrow__)) fct if True


#define be16toh if True 
	expansions 
		(x) => __bswap_16 (x) if True


#define udhcpd_trivial_usage if True 
	expansions 
		 => "[-fS]" IF_FEATURE_UDHCP_PORT(" [-P N]") " [CONFFILE]" if True


#define ENABLE_FEATURE_VI_DOT_CMD if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_DOT_CMD)
		 => 1 if def(CONFIG_FEATURE_VI_DOT_CMD)


#define ENABLE_FEATURE_FIND_GROUP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_GROUP)
		 => 1 if def(CONFIG_FEATURE_FIND_GROUP)


#define ENABLE_FEATURE_DU_DEFAULT_BLOCKSIZE_1K if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
		 => 1 if def(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)


#define _G_HAVE_ST_BLKSIZE if True 
	expansions 
		 => defined (_STATBUF_ST_BLKSIZE) if True


#define IF_NOT_UNICODE_USING_LOCALE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_USING_LOCALE)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_USING_LOCALE)


#define ENABLE_FEATURE_AUTOWIDTH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_AUTOWIDTH)
		 => 1 if def(CONFIG_FEATURE_AUTOWIDTH)


#define IF_NOT_HOSTNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HOSTNAME)
		(__VA_ARGS__...) if def(CONFIG_HOSTNAME)


#define ENABLE_LAST_SUPPORTED_WCHAR if True 
	expansions 
		 => 0 if !def(CONFIG_LAST_SUPPORTED_WCHAR)
		 => 1 if def(CONFIG_LAST_SUPPORTED_WCHAR)


#define ENABLE_TCPSVD if True 
	expansions 
		 => 0 if !def(CONFIG_TCPSVD)
		 => 1 if def(CONFIG_TCPSVD)


#define sort_full_usage if True 
	expansions 
		 => "\n\n" "Sort lines of text\n" "\nOptions:" IF_FEATURE_SORT_BIG( "\n	-b	Ignore leading blanks" "\n	-c	Check whether input is sorted" "\n	-d	Dictionary order (blank or alphanumeric only)" "\n	-f	Ignore case" "\n	-g	General numerical sort" "\n	-i	Ignore unprintable characters" "\n	-k	Sort key" "\n	-M	Sort month" ) "\n	-n	Sort numbers" IF_FEATURE_SORT_BIG( "\n	-o	Output to file" "\n	-k	Sort by key" "\n	-t CHAR	Key separator" ) "\n	-r	Reverse sort order" IF_FEATURE_SORT_BIG( "\n	-s	Stable (don't sort ties alphabetically)" ) "\n	-u	Suppress duplicate lines" IF_FEATURE_SORT_BIG( "\n	-z	Lines are terminated by NUL, not newline" "\n	-mST	Ignored for GNU compatibility") if True


#define _IO_LINKED if True 
	expansions 
		 => 0x80 if True


#define IF_NOT_FOLD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FOLD)
		(__VA_ARGS__...) if def(CONFIG_FOLD)


#define __DBL_MIN__ if True 
	expansions 
		 => 2.2250738585072014e-308 if True


#define arp_full_usage if True 
	expansions 
		 => "\n\n" "Manipulate ARP cache\n" "\nOptions:" "\n	-a		Display (all) hosts" "\n	-s		Set new ARP entry" "\n	-d		Delete a specified entry" "\n	-v		Verbose" "\n	-n		Don't resolve names" "\n	-i IF		Network interface" "\n	-D		Read <hwaddr> from given device" "\n	-A,-p AF	Protocol family" "\n	-H HWTYPE	Hardware address type" if True


#define IF_NOT_UNXZ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNXZ)
		(__VA_ARGS__...) if def(CONFIG_UNXZ)


#define __LDBL_MAX_10_EXP__ if True 
	expansions 
		 => 4932 if True


#define IF_RMDIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RMDIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RMDIR)


#define IF_SENDMAIL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SENDMAIL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SENDMAIL)


#define IF_FEATURE_SH_IS_ASH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SH_IS_ASH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SH_IS_ASH)


#define sum_full_usage if True 
	expansions 
		 => "\n\n" "Checksum and count the blocks in a file\n" "\nOptions:" "\n	-r	Use BSD sum algorithm (1K blocks)" "\n	-s	Use System V sum algorithm (512byte blocks)" if True


#define _IO_HEX if True 
	expansions 
		 => 0100 if True


#define mt_full_usage if True 
	expansions 
		 => "\n\n" "Control magnetic tape drive operation\n" "\n" "Available Opcodes:\n" "\n" "bsf bsfm bsr bss datacompression drvbuffer eof eom erase\n" "fsf fsfm fsr fss load lock mkpart nop offline ras1 ras2\n" "ras3 reset retension rewind rewoffline seek setblk setdensity\n" "setpart tell unload unlock weof wset" if True


#define IF_FEATURE_LS_USERNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_USERNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_USERNAME)


#define __ptr_t if True 
	expansions 
		 => void * if True


#define __LDBL_MAX__ if True 
	expansions 
		 => 1.18973149535723176502e+4932L if True


#define ENABLE_FEATURE_INSMOD_TRY_MMAP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSMOD_TRY_MMAP)
		 => 1 if def(CONFIG_FEATURE_INSMOD_TRY_MMAP)


#define IF_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)


#define __KERNEL_STRICT_NAMES if True 
	expansions 
		 if True


#define ash_full_usage if True 
	expansions 
		 => "" if True


#define ENABLE_ZCIP if True 
	expansions 
		 => 0 if !def(CONFIG_ZCIP)
		 => 1 if def(CONFIG_ZCIP)


#define IF_NOT_BLOCKDEV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BLOCKDEV)
		(__VA_ARGS__...) if def(CONFIG_BLOCKDEV)


#define IF_SUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SUM)


#define htole64 if True 
	expansions 
		(x) => (x) if True


#define ENABLE_FEATURE_FIND_INUM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_INUM)
		 => 1 if def(CONFIG_FEATURE_FIND_INUM)


#define ___int_size_t_h if True 
	expansions 
		 if True


#define __USE_XOPEN_EXTENDED if False 
	expansions 



#define IF_NOT_FREERAMDISK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FREERAMDISK)
		(__VA_ARGS__...) if def(CONFIG_FREERAMDISK)


#define poweroff_trivial_usage if True 
	expansions 
		 => "[-d DELAY] [-n] [-f]" if True


#define __DATE__ if True 
	expansions 
		 if True


#define IF_NOT_SPLIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SPLIT)
		(__VA_ARGS__...) if def(CONFIG_SPLIT)


#define killall5_trivial_usage if True 
	expansions 
		 => "[-l] [-SIG] [-o PID]..." if True


#define __FD_ZERO_STOS if True 
	expansions 
		 => "stosq" if True


#define lspci_trivial_usage if True 
	expansions 
		 => "[-mk]" if True


#define ENABLE_DEVFSD_VERBOSE if True 
	expansions 
		 => 0 if !def(CONFIG_DEVFSD_VERBOSE)
		 => 1 if def(CONFIG_DEVFSD_VERBOSE)


#define ENABLE_PIDOF if True 
	expansions 
		 => 0 if !def(CONFIG_PIDOF)
		 => 1 if def(CONFIG_PIDOF)


#define ENABLE_MAKEMIME if True 
	expansions 
		 => 0 if !def(CONFIG_MAKEMIME)
		 => 1 if def(CONFIG_MAKEMIME)


#define ENABLE_FEATURE_MOUNT_HELPERS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_HELPERS)
		 => 1 if def(CONFIG_FEATURE_MOUNT_HELPERS)


#define IF_ASH_EXPAND_PRMT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_EXPAND_PRMT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_EXPAND_PRMT)


#define IF_NOT_DD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DD)
		(__VA_ARGS__...) if def(CONFIG_DD)


#define __LONG_LONG_MAX__ if True 
	expansions 
		 => 9223372036854775807LL if True


#define __LITTLE_ENDIAN if True 
	expansions 
		 => 1234 if True


#define uudecode_example_usage if True 
	expansions 
		 => "$ uudecode -o busybox busybox.uu\n" "$ ls -l busybox\n" "-rwxr-xr-x   1 ams      ams        245264 Jun  7 21:35 busybox\n" if True


#define ENABLE_TIME if True 
	expansions 
		 => 0 if !def(CONFIG_TIME)
		 => 1 if def(CONFIG_TIME)


#define fold_trivial_usage if True 
	expansions 
		 => "[-bs] [-w WIDTH] [FILE]..." if True


#define IF_CHOWN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHOWN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHOWN)


#define IF_NOT_SEQ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SEQ)
		(__VA_ARGS__...) if def(CONFIG_SEQ)


#define readprofile_trivial_usage if True 
	expansions 
		 => "[OPTIONS]" if True


#define __U16_TYPE if True 
	expansions 
		 => unsigned short int if True


#define setarch_full_usage if True 
	expansions 
		 => "\n\n" "Personality may be:\n" "	linux32		Set 32bit uname emulation\n" "	linux64		Set 64bit uname emulation" if True


#define __HAVE_COLUMN if True 
	expansions 
		 if True


#define __need_FILE if False 
	expansions 
		 if False


#define tune2fs_trivial_usage if True 
	expansions 
		 => "[-c MOUNT_CNT] " "[-i DAYS] " "[-L LABEL] " "BLOCKDEV" if True


#define tty_full_usage if True 
	expansions 
		 => "\n\n" "Print file name of stdin's terminal" IF_INCLUDE_SUSv2( "\n" "\nOptions:" "\n	-s	Print nothing, only return exit status" ) if True


#define IF_FEATURE_IP_LINK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_LINK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_LINK)


#define __SIZEOF_PTHREAD_BARRIERATTR_T if True 
	expansions 
		 => 4 if True


#define ENABLE_FEATURE_FIND_PERM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_PERM)
		 => 1 if def(CONFIG_FEATURE_FIND_PERM)


#define ENABLE_DELUSER if True 
	expansions 
		 => 0 if !def(CONFIG_DELUSER)
		 => 1 if def(CONFIG_DELUSER)


#define _IO_ERR_SEEN if True 
	expansions 
		 => 0x20 if True


#define ENABLE_TEST if True 
	expansions 
		 => 0 if !def(CONFIG_TEST)
		 => 1 if def(CONFIG_TEST)


#define who_full_usage if True 
	expansions 
		 => "\n\n" "Show who is logged on\n" "\nOptions:" "\n	-a	Show all" if True


#define IF_FEATURE_PS_ADDITIONAL_COLUMNS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)


#define IF_FEATURE_TRACEROUTE_USE_ICMP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)


#define __REGISTER_PREFIX__ if True 
	expansions 
		 if True


#define ENABLE_SMEMCAP if True 
	expansions 
		 => 0 if !def(CONFIG_SMEMCAP)
		 => 1 if def(CONFIG_SMEMCAP)


#define IF_NOT_UNICODE_PRESERVE_BROKEN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_PRESERVE_BROKEN)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_PRESERVE_BROKEN)


#define ENABLE_FEATURE_DATE_NANO if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DATE_NANO)
		 => 1 if def(CONFIG_FEATURE_DATE_NANO)


#define IF_FEATURE_FTPGETPUT_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)


#define telnetd_full_usage if True 
	expansions 
		 => "\n\n" "Handle incoming telnet connections" IF_NOT_FEATURE_TELNETD_STANDALONE(" via inetd") "\n" "\nOptions:" "\n	-l LOGIN	Exec LOGIN on connect" "\n	-f ISSUE_FILE	Display ISSUE_FILE instead of /etc/issue" "\n	-K		Close connection as soon as login exits" "\n			(normally wait until all programs close slave pty)" IF_FEATURE_TELNETD_STANDALONE( "\n	-p PORT		Port to listen on" "\n	-b ADDR[:PORT]	Address to bind to" "\n	-F		Run in foreground" "\n	-i		Inetd mode" IF_FEATURE_TELNETD_INETD_WAIT( "\n	-w SEC		Inetd 'wait' mode, linger time SEC" "\n	-S		Log to syslog (implied by -i or without -F and -w)" ) ) if True


#define IF_DD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DD)


#define bash_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define ENABLE_LPQ if True 
	expansions 
		 => 0 if !def(CONFIG_LPQ)
		 => 1 if def(CONFIG_LPQ)


#define rdev_full_usage if True 
	expansions 
		 => "\n\n" "Print the device node associated with the filesystem mounted at '/'" if True


#define _IO_BOOLALPHA if True 
	expansions 
		 => 0200000 if True


#define uname_full_usage if True 
	expansions 
		 => "\n\n" "Print system information\n" "\nOptions:" "\n	-a	Print all" "\n	-m	The machine (hardware) type" "\n	-n	Hostname" "\n	-r	OS release" "\n	-s	OS name (default)" "\n	-p	Processor type" "\n	-v	OS version" if True


#define IF_NOT_LAST_SYSTEM_ID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LAST_SYSTEM_ID)
		(__VA_ARGS__...) if def(CONFIG_LAST_SYSTEM_ID)


#define IF_FEATURE_GREP_FGREP_ALIAS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_GREP_FGREP_ALIAS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_GREP_FGREP_ALIAS)


#define IF_NOT_NC_110_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NC_110_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_NC_110_COMPAT)


#define IF_NOT_PIPE_PROGRESS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PIPE_PROGRESS)
		(__VA_ARGS__...) if def(CONFIG_PIPE_PROGRESS)


#define halt_trivial_usage if True 
	expansions 
		 => "[-d DELAY] [-n] [-f]" IF_FEATURE_WTMP(" [-w]") if True


#define IF_NOT_FEATURE_BASH_IS_ASH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BASH_IS_ASH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BASH_IS_ASH)


#define IF_LOGREAD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOGREAD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOGREAD)


#define IF_HUSH_BASH_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_BASH_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_BASH_COMPAT)


#define ENABLE_TUNE2FS if True 
	expansions 
		 => 0 if !def(CONFIG_TUNE2FS)
		 => 1 if def(CONFIG_TUNE2FS)


#define ENABLE_FEATURE_DEVFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DEVFS)
		 => 1 if def(CONFIG_FEATURE_DEVFS)


#define md5sum_trivial_usage if True 
	expansions 
		 => "[FILE]..." IF_FEATURE_MD5_SHA1_SUM_CHECK("\n   or: md5sum -c [-sw] [FILE]") if True


#define IF_NOT_FEATURE_READLINK_FOLLOW if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_READLINK_FOLLOW)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_READLINK_FOLLOW)


#define IF_NOT_UNEXPAND if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNEXPAND)
		(__VA_ARGS__...) if def(CONFIG_UNEXPAND)


#define IF_HUSH_TICK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_TICK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_TICK)


#define ENABLE_DEVFSD_FG_NP if True 
	expansions 
		 => 0 if !def(CONFIG_DEVFSD_FG_NP)
		 => 1 if def(CONFIG_DEVFSD_FG_NP)


#define IF_NOT_DHCPRELAY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DHCPRELAY)
		(__VA_ARGS__...) if def(CONFIG_DHCPRELAY)


#define __GNUC__ if True 
	expansions 
		 => 4 if True


#define IF_FUSER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FUSER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FUSER)


#define IF_FEATURE_DMESG_PRETTY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DMESG_PRETTY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DMESG_PRETTY)


#define IF_FEATURE_LESS_DASHCMD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_DASHCMD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_DASHCMD)


#define ENABLE_LZOP if True 
	expansions 
		 => 0 if !def(CONFIG_LZOP)
		 => 1 if def(CONFIG_LZOP)


#define IF_RUN_PARTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RUN_PARTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RUN_PARTS)


#define IF_NOT_FEATURE_DIFF_DIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DIFF_DIR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DIFF_DIR)


#define _G_NAMES_HAVE_UNDERSCORE if True 
	expansions 
		 => 0 if True


#define IF_NOT_FEATURE_PRESERVE_HARDLINKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PRESERVE_HARDLINKS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PRESERVE_HARDLINKS)


#define od_full_usage if True 
	expansions 
		 => "\n\n" "Write an unambiguous representation, octal bytes by default, of FILE\n" "(or stdin) to stdout" if True


#define IF_NOT_ASH_RANDOM_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_RANDOM_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_ASH_RANDOM_SUPPORT)


#define mktemp_full_usage if True 
	expansions 
		 => "\n\n" "Create a temporary file with name based on TEMPLATE and print its name.\n" "TEMPLATE must end with XXXXXX (e.g. [/dir/]nameXXXXXX).\n" "\nOptions:" "\n	-d	Make a directory instead of a file" "\n	-t	Generate a path rooted in temporary directory" "\n	-p DIR	Use DIR as a temporary directory (implies -t)" "\n" "\nFor -t or -p, directory is chosen as follows:" "\n$TMPDIR if set, else -p DIR, else /tmp" if True


#define dpkg_deb_full_usage if True 
	expansions 
		 => "\n\n" "Perform actions on Debian packages (.debs)\n" "\nOptions:" "\n	-c	List contents of filesystem tree" "\n	-e	Extract control files to [argument] directory" "\n	-f	Display control field name starting with [argument]" "\n	-x	Extract packages filesystem tree to directory" "\n	-X	Verbose extract" if True


#define _STDLIB_H if True 
	expansions 
		 => 1 if True


#define __SIZEOF_INT__ if True 
	expansions 
		 => 4 if True


#define IF_IOSTAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IOSTAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IOSTAT)


#define getty_trivial_usage if True 
	expansions 
		 => "[OPTIONS] BAUD_RATE TTY [TERMTYPE]" if True


#define IF_NOT_DELUSER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DELUSER)
		(__VA_ARGS__...) if def(CONFIG_DELUSER)


#define IF_SV_DEFAULT_SERVICE_DIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SV_DEFAULT_SERVICE_DIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SV_DEFAULT_SERVICE_DIR)


#define ENABLE_DEFAULT_MODULES_DIR if True 
	expansions 
		 => 0 if !def(CONFIG_DEFAULT_MODULES_DIR)
		 => 1 if def(CONFIG_DEFAULT_MODULES_DIR)


#define ENABLE_FEATURE_IFUPDOWN_IP_BUILTIN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)


#define ENABLE_FEATURE_ADDGROUP_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)


#define IF_NOT_FEATURE_LS_FOLLOWLINKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_FOLLOWLINKS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_FOLLOWLINKS)


#define IF_FEATURE_HAVE_RPC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HAVE_RPC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HAVE_RPC)


#define ENABLE_FEATURE_TEE_USE_BLOCK_IO if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
		 => 1 if def(CONFIG_FEATURE_TEE_USE_BLOCK_IO)


#define IF_NOT_FEATURE_LS_COLOR_IS_DEFAULT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)


#define cat_full_usage if True 
	expansions 
		 => "\n\n" "Concatenate FILEs and print them to stdout" if True


#define IF_NOT_FEATURE_LS_TIMESTAMPS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_TIMESTAMPS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_TIMESTAMPS)


#define ENABLE_FEATURE_LSMOD_PRETTY_2_6_OUTPUT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
		 => 1 if def(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)


#define IF_SETKEYCODES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETKEYCODES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETKEYCODES)


#define su_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [-] [USERNAME]" if True


#define IF_NOT_CHGRP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHGRP)
		(__VA_ARGS__...) if def(CONFIG_CHGRP)


#define IF_NOT_FEATURE_LZMA_FAST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LZMA_FAST)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LZMA_FAST)


#define IF_FEATURE_INSTALLER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSTALLER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSTALLER)


#define IF_NOT_FEATURE_SEAMLESS_LZMA if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SEAMLESS_LZMA)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SEAMLESS_LZMA)


#define ENABLE_LOGIN_SCRIPTS if True 
	expansions 
		 => 0 if !def(CONFIG_LOGIN_SCRIPTS)
		 => 1 if def(CONFIG_LOGIN_SCRIPTS)


#define ENABLE_IFUPDOWN_UDHCPC_CMD_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
		 => 1 if def(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)


#define runsvdir_trivial_usage if True 
	expansions 
		 => "[-P] [-s SCRIPT] DIR" if True


#define IF_IPCRM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPCRM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPCRM)


#define __need_clockid_t if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_HDPARM_HDIO_GETSET_DMA if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)


#define IF_LPR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LPR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LPR)


#define IF_NOT_TTY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TTY)
		(__VA_ARGS__...) if def(CONFIG_TTY)


#define ENABLE_FEATURE_UMOUNT_ALL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UMOUNT_ALL)
		 => 1 if def(CONFIG_FEATURE_UMOUNT_ALL)


#define IF_ASH_MAIL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_MAIL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_MAIL)


#define ENABLE_FEATURE_INSTALL_LONG_OPTIONS if True 
	expansions 
		 => 0 if True


#define _STDIO_H if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_VOLUMEID_OCFS2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_OCFS2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_OCFS2)


#define chroot_example_usage if True 
	expansions 
		 => "$ ls -l /bin/ls\n" "lrwxrwxrwx    1 root     root          12 Apr 13 00:46 /bin/ls -> /BusyBox\n" "# mount /dev/hdc1 /mnt -t minix\n" "# chroot /mnt\n" "# ls -l /bin/ls\n" "-rwxr-xr-x    1 root     root        40816 Feb  5 07:45 /bin/ls*\n" if True


#define catv_full_usage if True 
	expansions 
		 => "\n\n" "Display nonprinting characters as ^x or M-x\n" "\nOptions:" "\n	-e	End each line with $" "\n	-t	Show tabs as ^I" "\n	-v	Don't use ^x or M-x escapes" if True


#define ENABLE_STAT if True 
	expansions 
		 => 0 if !def(CONFIG_STAT)
		 => 1 if def(CONFIG_STAT)


#define ENABLE_FEATURE_VOLUMEID_UDF if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_UDF)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_UDF)


#define ENABLE_SOFTLIMIT if True 
	expansions 
		 => 0 if !def(CONFIG_SOFTLIMIT)
		 => 1 if def(CONFIG_SOFTLIMIT)


#define IF_NOT_INSMOD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSMOD)
		(__VA_ARGS__...) if def(CONFIG_INSMOD)


#define IF_NOT_DHCPD_LEASES_FILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DHCPD_LEASES_FILE)
		(__VA_ARGS__...) if def(CONFIG_DHCPD_LEASES_FILE)


#define ENABLE_TAC if True 
	expansions 
		 => 0 if !def(CONFIG_TAC)
		 => 1 if def(CONFIG_TAC)


#define syslogd_trivial_usage if True 
	expansions 
		 => "[OPTIONS]" if True


#define last_trivial_usage if True 
	expansions 
		 => ""IF_FEATURE_LAST_FANCY("[-HW] [-f FILE]") if True


#define IF_MT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MT)


#define IF_NOT_INIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INIT)
		(__VA_ARGS__...) if def(CONFIG_INIT)


#define _SIZE_T_DECLARED if True 
	expansions 
		 if True


#define IF_FEATURE_TAR_AUTODETECT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_AUTODETECT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_AUTODETECT)


#define flash_eraseall_full_usage if True 
	expansions 
		 => "\n\n" "Erase an MTD device\n" "\nOptions:" "\n	-j	Format the device for jffs2" "\n	-q	Don't display progress messages" if True


#define _IO_MAGIC_MASK if True 
	expansions 
		 => 0xFFFF0000 if True


#define free_trivial_usage if True 
	expansions 
		 => "" IF_DESKTOP("[-b/k/m/g]") if True


#define IF_NOT_SETUIDGID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETUIDGID)
		(__VA_ARGS__...) if def(CONFIG_SETUIDGID)


#define rdate_full_usage if True 
	expansions 
		 => "\n\n" "Get and possibly set the system date and time from a remote HOST\n" "\nOptions:" "\n	-s	Set the system date and time (default)" "\n	-p	Print the date and time" if True


#define ENABLE_GETENFORCE if True 
	expansions 
		 => 0 if !def(CONFIG_GETENFORCE)
		 => 1 if def(CONFIG_GETENFORCE)


#define IF_FINDFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FINDFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FINDFS)


#define __DEC32_SUBNORMAL_MIN__ if True 
	expansions 
		 => 0.000001E-95DF if True


#define ifplugd_trivial_usage if True 
	expansions 
		 => "[OPTIONS]" if True


#define acpid_trivial_usage if True 
	expansions 
		 => "[-d] [-c CONFDIR] [-l LOGFILE] [-a ACTIONFILE] [-M MAPFILE] [-e PROC_EVENT_FILE] [-p PIDFILE]" if True


#define IF_NOT_ASH_BUILTIN_PRINTF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_BUILTIN_PRINTF)
		(__VA_ARGS__...) if def(CONFIG_ASH_BUILTIN_PRINTF)


#define IF_TTYSIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TTYSIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TTYSIZE)


#define ENABLE_USLEEP if True 
	expansions 
		 => 0 if !def(CONFIG_USLEEP)
		 => 1 if def(CONFIG_USLEEP)


#define IF_GUNZIP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GUNZIP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GUNZIP)


#define IF_NOT_FSYNC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FSYNC)
		(__VA_ARGS__...) if def(CONFIG_FSYNC)


#define ENABLE_FEATURE_DATE_ISOFMT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DATE_ISOFMT)
		 => 1 if def(CONFIG_FEATURE_DATE_ISOFMT)


#define IF_NOT_FINDFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FINDFS)
		(__VA_ARGS__...) if def(CONFIG_FINDFS)


#define umount_trivial_usage if True 
	expansions 
		 => "[OPTIONS] FILESYSTEM|DIRECTORY" if True


#define IF_FEATURE_INIT_SCTTY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INIT_SCTTY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INIT_SCTTY)


#define ENABLE_FEATURE_WGET_AUTHENTICATION if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_WGET_AUTHENTICATION)
		 => 1 if def(CONFIG_FEATURE_WGET_AUTHENTICATION)


#define IF_FEATURE_SETFILES_CHECK_OPTION if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SETFILES_CHECK_OPTION)


#define IF_FEATURE_CHAT_IMPLICIT_CR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_IMPLICIT_CR)


#define ENABLE_MKDIR if True 
	expansions 
		 => 0 if !def(CONFIG_MKDIR)
		 => 1 if def(CONFIG_MKDIR)


#define IF_SELINUXENABLED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SELINUXENABLED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SELINUXENABLED)


#define IF_NOT_FEATURE_WGET_STATUSBAR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_WGET_STATUSBAR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_WGET_STATUSBAR)


#define IF_SH_MATH_SUPPORT_64 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SH_MATH_SUPPORT_64)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SH_MATH_SUPPORT_64)


#define __DBL_MAX_10_EXP__ if True 
	expansions 
		 => 308 if True


#define msh_full_usage if True 
	expansions 
		 => "" if True


#define IF_FEATURE_PASSWD_WEAK_CHECK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PASSWD_WEAK_CHECK)


#define IF_NOT_FEATURE_UNEXPAND_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)


#define IF_NOT_FEATURE_VOLUMEID_LINUXSWAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)


#define __unix__ if True 
	expansions 
		 => 1 if True


#define sleep_trivial_usage if True 
	expansions 
		 => IF_FEATURE_FANCY_SLEEP("[") "N" IF_FEATURE_FANCY_SLEEP("]...") if True


#define ENABLE_IONICE if True 
	expansions 
		 => 0 if !def(CONFIG_IONICE)
		 => 1 if def(CONFIG_IONICE)


#define IF_EXPR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EXPR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EXPR)


#define IF_ED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ED)


#define IF_CHRT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHRT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHRT)


#define IF_FEATURE_SHARED_BUSYBOX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SHARED_BUSYBOX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SHARED_BUSYBOX)


#define IF_NOT_FEATURE_SETCONSOLE_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)


#define _VA_LIST_DEFINED if True 
	expansions 
		 if True


#define __bounded if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_DU_DEFAULT_BLOCKSIZE_1K if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)


#define __USE_SVID if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_SH_NOFORK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SH_NOFORK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SH_NOFORK)


#define IF_NOT_RESTORECON if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RESTORECON)
		(__VA_ARGS__...) if def(CONFIG_RESTORECON)


#define IF_ASH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH)


#define IF_FEATURE_UTMP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UTMP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UTMP)


#define base64_full_usage if True 
	expansions 
		 => "\n\n" "Base64 encode or decode FILE to standard output" "\nOptions:" "\n	-d	Decode data" if True


#define IF_GREP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GREP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GREP)


#define EXIT_SUCCESS if True 
	expansions 
		 => 0 if True


#define __FLT_EVAL_METHOD__ if True 
	expansions 
		 => 0 if True


#define IF_MOUNT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MOUNT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MOUNT)


#define IF_FEATURE_GETOPT_LONG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_GETOPT_LONG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_GETOPT_LONG)


#define nc_notes_usage if !def(CONFIG_NC_110_COMPAT) 
	expansions 
		 => "" IF_NC_EXTRA( "To use netcat as a terminal emulator on a serial port:\n\n" "$ stty 115200 -F /dev/ttyS0\n" "$ stty raw -echo -ctlecho && nc -f /dev/ttyS0\n" ) if !def(CONFIG_NC_110_COMPAT)


#define pmap_trivial_usage if True 
	expansions 
		 => "[-x][-q] PID" if True


#define IF_NOT_FEATURE_UMOUNT_ALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UMOUNT_ALL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UMOUNT_ALL)


#define IF_FEATURE_INSMOD_LOADINKMEM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSMOD_LOADINKMEM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSMOD_LOADINKMEM)


#define reformime_full_usage if True 
	expansions 
		 => "\n\n" "Parse MIME-encoded message\n" "\nOptions:" "\n	-x PREFIX	Extract content of MIME sections to files" "\n	-X PROG ARGS	Filter content of MIME sections through PROG" "\n			Must be the last option" "\n" "\nOther options are silently ignored" if True


#define IF_NOT_FEATURE_SH_EXTRA_QUIET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SH_EXTRA_QUIET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SH_EXTRA_QUIET)


#define IF_MODINFO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MODINFO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MODINFO)


#define ___int_wchar_t_h if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_SPLIT_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SPLIT_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SPLIT_FANCY)


#define __WIFSTOPPED if True 
	expansions 
		(status) => (((status) & 0xff) == 0x7f) if True


#define IF_FEATURE_SYSLOGD_DUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SYSLOGD_DUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SYSLOGD_DUP)


#define ENABLE_FEATURE_DF_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DF_FANCY)
		 => 1 if def(CONFIG_FEATURE_DF_FANCY)


#define IF_NOT_FEATURE_RMDIR_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)


#define IF_REV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_REV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_REV)


#define _FEATURES_H if True 
	expansions 
		 => 1 if True


#define ENABLE_INSTALL_APPLET_HARDLINKS if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_APPLET_HARDLINKS)
		 => 1 if def(CONFIG_INSTALL_APPLET_HARDLINKS)


#define ifenslave_trivial_usage if True 
	expansions 
		 => "[-cdf] MASTER_IFACE SLAVE_IFACE..." if True


#define IF_NO_DEBUG_LIB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NO_DEBUG_LIB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NO_DEBUG_LIB)


#define showkey_full_usage if True 
	expansions 
		 => "\n\n" "Show keys pressed\n" "\nOptions:" "\n	-a	Display decimal/octal/hex values of the keys" "\n	-k	Display interpreted keycodes (default)" "\n	-s	Display raw scan-codes" if True


#define IF_PASSWORD_MINLEN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PASSWORD_MINLEN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PASSWORD_MINLEN)


#define IF_SPLIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SPLIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SPLIT)


#define ENABLE_FEATURE_GETOPT_LONG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_GETOPT_LONG)
		 => 1 if def(CONFIG_FEATURE_GETOPT_LONG)


#define IF_NOT_FEATURE_IFCONFIG_SLIP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFCONFIG_SLIP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFCONFIG_SLIP)


#define hostname_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [HOSTNAME | -F FILE]" if True


#define cryptpw_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [PASSWORD] [SALT]" if True


#define ENABLE_LSPCI if True 
	expansions 
		 => 0 if !def(CONFIG_LSPCI)
		 => 1 if def(CONFIG_LSPCI)


#define ENABLE_FEATURE_SETCONSOLE_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)


#define IF_LS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LS)


#define IF_NOT_RX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RX)
		(__VA_ARGS__...) if def(CONFIG_RX)


#define ether_wake_full_usage if True 
	expansions 
		 => "\n\n" "Send a magic packet to wake up sleeping machines.\n" "MAC must be a station address (00:11:22:33:44:55) or\n" "a hostname with a known 'ethers' entry.\n" "\nOptions:" "\n	-b		Send wake-up packet to the broadcast address" "\n	-i iface	Interface to use (default eth0)" "\n	-p pass		Append four or six byte password PW to the packet" if True


#define ENABLE_REV if True 
	expansions 
		 => 0 if !def(CONFIG_REV)
		 => 1 if def(CONFIG_REV)


#define du_example_usage if True 
	expansions 
		 => "$ du\n" "16      ./CVS\n" "12      ./kernel-patches/CVS\n" "80      ./kernel-patches\n" "12      ./tests/CVS\n" "36      ./tests\n" "12      ./scripts/CVS\n" "16      ./scripts\n" "12      ./docs/CVS\n" "104     ./docs\n" "2417    .\n" if True


#define HAVE_LIBDMALLOC if False 
	expansions 



#define IF_FEATURE_LS_FOLLOWLINKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_FOLLOWLINKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_FOLLOWLINKS)


#define IF_NOT_INCLUDE_SUSv2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INCLUDE_SUSv2)
		(__VA_ARGS__...) if def(CONFIG_INCLUDE_SUSv2)


#define ENABLE_FEATURE_HTTPD_RANGES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_RANGES)
		 => 1 if def(CONFIG_FEATURE_HTTPD_RANGES)


#define reboot_full_usage if True 
	expansions 
		 => "\n\n" "Reboot the system\n" "\nOptions:" "\n	-d SEC	Delay interval" "\n	-n	Do not sync" "\n	-f	Force (don't go through init)" if True


#define IF_NOT_FEATURE_FBSET_READMODE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FBSET_READMODE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FBSET_READMODE)


#define _IO_flockfile if True 
	expansions 
		(_fp) if True


#define IF_NOT_NICE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NICE)
		(__VA_ARGS__...) if def(CONFIG_NICE)


#define IF_FEATURE_ACPID_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ACPID_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ACPID_COMPAT)


#define IF_FEATURE_IP_TUNNEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_TUNNEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_TUNNEL)


#define clear_full_usage if True 
	expansions 
		 => "\n\n" "Clear screen" if True


#define _SYS_SIZE_T_H if True 
	expansions 
		 if True


#define ENABLE_MKSWAP if True 
	expansions 
		 => 0 if !def(CONFIG_MKSWAP)
		 => 1 if def(CONFIG_MKSWAP)


#define mdev_trivial_usage if True 
	expansions 
		 => "[-s]" if True


#define ENABLE_MD5_SIZE_VS_SPEED if True 
	expansions 
		 => 0 if !def(CONFIG_MD5_SIZE_VS_SPEED)
		 => 1 if def(CONFIG_MD5_SIZE_VS_SPEED)


#define __ULONGWORD_TYPE if True 
	expansions 
		 => unsigned long int if True


#define __ssize_t_defined if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_GETOPT_LONG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_GETOPT_LONG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_GETOPT_LONG)


#define IF_FEATURE_FDISK_WRITABLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FDISK_WRITABLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FDISK_WRITABLE)


#define __DEC64_SUBNORMAL_MIN__ if True 
	expansions 
		 => 0.000000000000001E-383DD if True


#define IF_NOT_FEATURE_GZIP_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)


#define crontab_full_usage if True 
	expansions 
		 => "\n\n" "	-c	Crontab directory" "\n	-u	User" "\n	-l	List crontab" "\n	-e	Edit crontab" "\n	-r	Delete crontab" "\n	FILE	Replace crontab by FILE ('-': stdin)" if True


#define IF_NOT_TAC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TAC)
		(__VA_ARGS__...) if def(CONFIG_TAC)


#define mesg_full_usage if True 
	expansions 
		 => "\n\n" "Control write access to your terminal\n" "	y	Allow write access to your terminal\n" "	n	Disallow write access to your terminal" if True


#define IF_NOT_FEATURE_CROND_CALL_SENDMAIL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CROND_CALL_SENDMAIL)


#define IF_NOT_FEATURE_FIND_NOT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_NOT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_NOT)


#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 if True 
	expansions 
		 => 1 if True


#define __SUSECONDS_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define IF_FEATURE_AIX_LABEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_AIX_LABEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_AIX_LABEL)


#define IF_NOT_FEATURE_TAR_TO_COMMAND if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_TO_COMMAND)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_TO_COMMAND)


#define IF_NOT_FEATURE_TRACEROUTE_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TRACEROUTE_VERBOSE)


#define grep_trivial_usage if True 
	expansions 
		 => "[-HhnlLoqvsriw" "F" IF_FEATURE_GREP_EGREP_ALIAS("E") IF_EXTRA_COMPAT("z") "] [-m N] " IF_FEATURE_GREP_CONTEXT("[-A/B/C N] ") "PATTERN/-e PATTERN.../-f FILE [FILE]..." if True


#define IF_TAR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TAR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TAR)


#define IF_NOT_FEATURE_CHAT_CLR_ABORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_CLR_ABORT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_CLR_ABORT)


#define IF_FEATURE_LESS_LINENUMS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_LINENUMS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_LINENUMS)


#define ENABLE_FEATURE_EDITING_MAX_LEN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING_MAX_LEN)
		 => 1 if def(CONFIG_FEATURE_EDITING_MAX_LEN)


#define IF_MKNOD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKNOD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKNOD)


#define ENABLE_FEATURE_NETSTAT_WIDE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_NETSTAT_WIDE)
		 => 1 if def(CONFIG_FEATURE_NETSTAT_WIDE)


#define IF_ENV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ENV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ENV)


#define IF_FEATURE_BOOTCHARTD_CONFIG_FILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)


#define watch_trivial_usage if True 
	expansions 
		 => "[-n SEC] [-t] PROG ARGS" if True


#define rm_example_usage if True 
	expansions 
		 => "$ rm -rf /tmp/foo\n" if True


#define ENABLE_LOGIN if True 
	expansions 
		 => 0 if !def(CONFIG_LOGIN)
		 => 1 if def(CONFIG_LOGIN)


#define __OFF_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define pidof_full_usage if True 
	expansions 
		 => "\n\n" "List PIDs of all processes with names that match NAMEs" USAGE_PIDOF IF_FEATURE_PIDOF_SINGLE( "\n	-s	Show only one PID" ) IF_FEATURE_PIDOF_OMIT( "\n	-o PID	Omit given pid" "\n		Use %PPID to omit pid of pidof's parent" ) if True


#define __SHRT_MAX__ if True 
	expansions 
		 => 32767 if True


#define IF_FEATURE_MOUNT_LABEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_LABEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_LABEL)


#define IF_MONOTONIC_SYSCALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MONOTONIC_SYSCALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MONOTONIC_SYSCALL)


#define FD_ISSET if True 
	expansions 
		(fd, fdsetp) => __FD_ISSET (fd, fdsetp) if True


#define ENABLE_ASH_GETOPTS if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_GETOPTS)
		 => 1 if def(CONFIG_ASH_GETOPTS)


#define IF_FEATURE_MOUNT_LOOP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_LOOP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_LOOP)


#define ENABLE_LSATTR if True 
	expansions 
		 => 0 if !def(CONFIG_LSATTR)
		 => 1 if def(CONFIG_LSATTR)


#define IF_HUSH_CASE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_CASE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_CASE)


#define IF_NOT_MKFS_VFAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKFS_VFAT)
		(__VA_ARGS__...) if def(CONFIG_MKFS_VFAT)


#define IF_SETUIDGID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETUIDGID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETUIDGID)


#define ENABLE_IPADDR if True 
	expansions 
		 => 0 if !def(CONFIG_IPADDR)
		 => 1 if def(CONFIG_IPADDR)


#define chgrp_trivial_usage if True 
	expansions 
		 => "[-RhLHP"IF_DESKTOP("cvf")"]... GROUP FILE..." if True


#define crond_full_usage if True 
	expansions 
		 => "\n\n" "	-f	Foreground" "\n	-b	Background (default)" "\n	-S	Log to syslog (default)" "\n	-l	Set log level. 0 is the most verbose, default 8" IF_FEATURE_CROND_D( "\n	-d	Set log level, log to stderr" ) "\n	-L	Log to file" "\n	-c	Working dir" if True


#define IF_FEATURE_IPCALC_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IPCALC_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IPCALC_FANCY)


#define fbsplash_trivial_usage if True 
	expansions 
		 => "-s IMGFILE [-c] [-d DEV] [-i INIFILE] [-f CMD]" if True


#define __INTMAX_TYPE__ if True 
	expansions 
		 => long int if True


#define IF_NOT_FEATURE_WGET_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if True


#define ipcalc_trivial_usage if True 
	expansions 
		 => "[OPTIONS] ADDRESS[[/]NETMASK] [NETMASK]" if True


#define IF_NOT_ARPING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ARPING)
		(__VA_ARGS__...) if def(CONFIG_ARPING)


#define IF_NOT_FEATURE_CLEAN_UP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CLEAN_UP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CLEAN_UP)


#define IF_FEATURE_FIND_MTIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_MTIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_MTIME)


#define IF_NOT_FEATURE_AIX_LABEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_AIX_LABEL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_AIX_LABEL)


#define IF_NOT_DEVFSD_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEVFSD_VERBOSE)
		(__VA_ARGS__...) if def(CONFIG_DEVFSD_VERBOSE)


#define __NLINK_T_TYPE if True 
	expansions 
		 => __UWORD_TYPE if True


#define __GNUC_VA_LIST if True 
	expansions 
		 if True


#define IF_CHROOT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHROOT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHROOT)


#define ENABLE_SPLIT if True 
	expansions 
		 => 0 if !def(CONFIG_SPLIT)
		 => 1 if def(CONFIG_SPLIT)


#define IF_NOT_FEATURE_VOLUMEID_EXT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_EXT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_EXT)


#define IF_FDFORMAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FDFORMAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FDFORMAT)


#define IF_NOT_FEATURE_BEEP_LENGTH_MS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BEEP_LENGTH_MS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BEEP_LENGTH_MS)


#define IF_NOT_DPKG_DEB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DPKG_DEB)
		(__VA_ARGS__...) if def(CONFIG_DPKG_DEB)


#define IF_NOT_FEATURE_COPYBUF_KB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_COPYBUF_KB)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_COPYBUF_KB)


#define lspci_full_usage if True 
	expansions 
		 => "\n\n" "List all PCI devices" "\n" "\n	-m	Parseable output" "\n	-k	Show driver" if True


#define IF_NOT_FEATURE_NETSTAT_PRG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_NETSTAT_PRG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_NETSTAT_PRG)


#define getenforce_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define ENABLE_IFUPDOWN if True 
	expansions 
		 => 0 if !def(CONFIG_IFUPDOWN)
		 => 1 if def(CONFIG_IFUPDOWN)


#define IF_IFUPDOWN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IFUPDOWN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IFUPDOWN)


#define __ULONG32_TYPE if True 
	expansions 
		 => unsigned int if True


#define ENABLE_FEATURE_LESS_BRACKETS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_BRACKETS)
		 => 1 if def(CONFIG_FEATURE_LESS_BRACKETS)


#define IF_FEATURE_TAB_COMPLETION if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAB_COMPLETION)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAB_COMPLETION)


#define IF_NOT_UBIATTACH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UBIATTACH)
		(__VA_ARGS__...) if def(CONFIG_UBIATTACH)


#define dpkg_trivial_usage if True 
	expansions 
		 => "[-ilCPru] [-F OPT] PACKAGE" if True


#define _IO_iconv_t if True 
	expansions 
		 => _G_iconv_t if True


#define IF_NOT_FEATURE_DIFF_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)


#define _G_HAVE_IO_FILE_OPEN if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_FDISK_ADVANCED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FDISK_ADVANCED)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FDISK_ADVANCED)


#define IF_LESS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LESS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LESS)


#define ENABLE_FEATURE_LESS_FLAGS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_FLAGS)
		 => 1 if def(CONFIG_FEATURE_LESS_FLAGS)


#define IF_FEATURE_MODUTILS_ALIAS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MODUTILS_ALIAS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MODUTILS_ALIAS)


#define IF_FEATURE_DF_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DF_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DF_FANCY)


#define __ASMNAME2 if True 
	expansions 
		(prefix, cname) => __STRING (prefix) cname if True


#define beep_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-f	Frequency in Hz" "\n	-l	Length in ms" "\n	-d	Delay in ms" "\n	-r	Repetitions" "\n	-n	Start new tone" if True


#define IF_NOT_FEATURE_ADDUSER_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)


#define IF_FEATURE_SH_IS_HUSH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SH_IS_HUSH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SH_IS_HUSH)


#define logger_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [MESSAGE]" if True


#define IF_NOT_FDISK_SUPPORT_LARGE_DISKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
		(__VA_ARGS__...) if def(CONFIG_FDISK_SUPPORT_LARGE_DISKS)


#define __bos if True 
	expansions 
		(ptr) => __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1) if True


#define ln_example_usage if True 
	expansions 
		 => "$ ln -s BusyBox /tmp/ls\n" "$ ls -l /tmp/ls\n" "lrwxrwxrwx    1 root     root            7 Apr 12 18:39 ls -> BusyBox*\n" if True


#define ENABLE_MKFS_MINIX if True 
	expansions 
		 => 0 if !def(CONFIG_MKFS_MINIX)
		 => 1 if def(CONFIG_MKFS_MINIX)


#define __SSE_MATH__ if True 
	expansions 
		 => 1 if True


#define ENABLE_CHCON if True 
	expansions 
		 => 0 if !def(CONFIG_CHCON)
		 => 1 if def(CONFIG_CHCON)


#define chattr_full_usage if True 
	expansions 
		 => "\n\n" "Change file attributes on an ext2 fs\n" "\nModifiers:" "\n	-	Remove attributes" "\n	+	Add attributes" "\n	=	Set attributes" "\nAttributes:" "\n	A	Don't track atime" "\n	a	Append mode only" "\n	c	Enable compress" "\n	D	Write dir contents synchronously" "\n	d	Don't backup with dump" "\n	i	Cannot be modified (immutable)" "\n	j	Write all data to journal first" "\n	s	Zero disk storage when deleted" "\n	S	Write file contents synchronously" "\n	t	Disable tail-merging of partial blocks with other files" "\n	u	Allow file to be undeleted" "\nOptions:" "\n	-R	Recurse" "\n	-v	Set the file's version/generation number" if True


#define __SIZEOF_PTHREAD_BARRIER_T if True 
	expansions 
		 => 32 if True


#define pivot_root_full_usage if True 
	expansions 
		 => "\n\n" "Move the current root file system to PUT_OLD and make NEW_ROOT\n" "the new root file system" if True


#define IF_NOT_FEATURE_COMPRESS_USAGE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_COMPRESS_USAGE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_COMPRESS_USAGE)


#define __bswap_16 if True 
	expansions 
		(x) => (__extension__ ({ register unsigned short int __v, __x = (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_16 (__x); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) if True


#define fbset_example_usage if True 
	expansions 
		 => "$ fbset\n" "mode \"1024x768-76\"\n" "	# D: 78.653 MHz, H: 59.949 kHz, V: 75.694 Hz\n" "	geometry 1024 768 1024 768 16\n" "	timings 12714 128 32 16 4 128 4\n" "	accel false\n" "	rgba 5/11,6/5,5/0,0/0\n" "endmode\n" if True


#define ENABLE_FEATURE_ADDUSER_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)


#define IF_FEATURE_DIFF_DIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DIFF_DIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DIFF_DIR)


#define IF_NOT_UNICODE_NEUTRAL_TABLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_NEUTRAL_TABLE)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_NEUTRAL_TABLE)


#define IF_FEATURE_XARGS_SUPPORT_QUOTES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)


#define IF_FEATURE_DATE_NANO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DATE_NANO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DATE_NANO)


#define sha256sum_full_usage if True 
	expansions 
		 => "\n\n" "Print" IF_FEATURE_MD5_SHA1_SUM_CHECK(" or check") " SHA256 checksums" IF_FEATURE_MD5_SHA1_SUM_CHECK( "\n" "\nOptions:" "\n	-c	Check sums against given list" "\n	-s	Don't output anything, status code shows success" "\n	-w	Warn about improperly formatted checksum lines" ) if True


#define deluser_full_usage if True 
	expansions 
		 => "\n\n" "Delete USER from the system" if True


#define IF_NOT_FEATURE_FANCY_PING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FANCY_PING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FANCY_PING)


#define IF_PGREP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PGREP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PGREP)


#define IF_FEATURE_VOLUMEID_BTRFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_BTRFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_BTRFS)


#define IF_NOT_ARP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ARP)
		(__VA_ARGS__...) if def(CONFIG_ARP)


#define IF_NOT_FEATURE_EDITING_ASK_TERMINAL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING_ASK_TERMINAL)


#define IF_PATCH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PATCH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PATCH)


#define IF_NOT_CHPASSWD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHPASSWD)
		(__VA_ARGS__...) if def(CONFIG_CHPASSWD)


#define IF_BOOTCHARTD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BOOTCHARTD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BOOTCHARTD)


#define ENABLE_HUSH_LOOPS if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_LOOPS)
		 => 1 if def(CONFIG_HUSH_LOOPS)


#define ENABLE_FEATURE_2_4_MODULES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_2_4_MODULES)
		 => 1 if def(CONFIG_FEATURE_2_4_MODULES)


#define ENABLE_SELINUX if True 
	expansions 
		 => 0 if !def(CONFIG_SELINUX)
		 => 1 if def(CONFIG_SELINUX)


#define IF_NOT_FEATURE_RUN_PARTS_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_RUN_PARTS_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_RUN_PARTS_FANCY)


#define _IO_DONT_CLOSE if True 
	expansions 
		 => 0100000 if True


#define IF_NOT_FEATURE_WTMP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_WTMP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_WTMP)


#define ENABLE_FEATURE_COMPRESS_USAGE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_COMPRESS_USAGE)
		 => 1 if def(CONFIG_FEATURE_COMPRESS_USAGE)


#define IF_FEATURE_DIFF_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)


#define IF_RFKILL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RFKILL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RFKILL)


#define ENABLE_WGET if True 
	expansions 
		 => 0 if !def(CONFIG_WGET)
		 => 1 if def(CONFIG_WGET)


#define IF_NOT_DOS2UNIX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DOS2UNIX)
		(__VA_ARGS__...) if def(CONFIG_DOS2UNIX)


#define ENABLE_FEATURE_HTTPD_ENCODE_URL_STR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
		 => 1 if def(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)


#define __GXX_ABI_VERSION if True 
	expansions 
		 => 1002 if True


#define powertop_trivial_usage if True 
	expansions 
		 => "" if True


#define ENABLE_FEATURE_TUNCTL_UG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TUNCTL_UG)
		 => 1 if def(CONFIG_FEATURE_TUNCTL_UG)


#define IF_FEATURE_VI_MAX_LEN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_MAX_LEN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_MAX_LEN)


#define selinuxenabled_full_usage if True 
	expansions 
		 => "" if True


#define delgroup_full_usage if True 
	expansions 
		 => "\n\n" "Delete group GROUP from the system" IF_FEATURE_DEL_USER_FROM_GROUP(" or user USER from group GROUP") if True


#define ENABLE_FLASH_UNLOCK if True 
	expansions 
		 => 0 if !def(CONFIG_FLASH_UNLOCK)
		 => 1 if def(CONFIG_FLASH_UNLOCK)


#define ENABLE_RUNSV if True 
	expansions 
		 => 0 if !def(CONFIG_RUNSV)
		 => 1 if def(CONFIG_RUNSV)


#define IF_FEATURE_VOLUMEID_ISO9660 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_ISO9660)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_ISO9660)


#define IF_FEATURE_VERBOSE_USAGE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VERBOSE_USAGE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VERBOSE_USAGE)


#define __S64_TYPE if True 
	expansions 
		 => long int if True


#define __INT_MAX__ if True 
	expansions 
		 => 2147483647 if True


#define IF_FEATURE_FIND_NOT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_NOT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_NOT)


#define powertop_full_usage if True 
	expansions 
		 => "\n\n" "Analyze power consumption on Intel-based laptops\n" if True


#define ENABLE_NO_DEBUG_LIB if True 
	expansions 
		 => 0 if !def(CONFIG_NO_DEBUG_LIB)
		 => 1 if def(CONFIG_NO_DEBUG_LIB)


#define __u_char_defined if True 
	expansions 
		 if True


#define IF_PWD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PWD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PWD)


#define __SIZE_TYPE__ if True 
	expansions 
		 => long unsigned int if True


#define _SYS_SYSMACROS_H if True 
	expansions 
		 => 1 if True


#define __stub_fdetach if True 
	expansions 
		 if True


#define IF_FEATURE_MKDIR_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)


#define wget_full_usage if True 
	expansions 
		 => "\n\n" "Retrieve files via HTTP or FTP\n" "\nOptions:" "\n	-s	Spider mode - only check file existence" "\n	-c	Continue retrieval of aborted transfer" "\n	-q	Quiet" "\n	-P DIR	Save to DIR (default .)" IF_FEATURE_WGET_TIMEOUT( "\n	-T SEC	Network read timeout is SEC seconds" ) "\n	-O FILE	Save to FILE ('-' for stdout)" "\n	-U STR	Use STR for User-Agent header" "\n	-Y	Use proxy ('on' or 'off')" if True


#define IF_MKFS_EXT2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKFS_EXT2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKFS_EXT2)


#define IF_NOT_WERROR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WERROR)
		(__VA_ARGS__...) if def(CONFIG_WERROR)


#define ENABLE_FEATURE_MODUTILS_SYMBOLS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MODUTILS_SYMBOLS)
		 => 1 if def(CONFIG_FEATURE_MODUTILS_SYMBOLS)


#define _SYS_SELECT_H if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)


#define __SIZEOF_LONG__ if True 
	expansions 
		 => 8 if True


#define IF_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)


#define IF_INSTALL_APPLET_DONT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_APPLET_DONT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_APPLET_DONT)


#define IF_NOT_INSTALL_APPLET_DONT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_APPLET_DONT)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_APPLET_DONT)


#define IF_DEVFSD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEVFSD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEVFSD)


#define __ino_t_defined if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_LOADFONT_RAW if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LOADFONT_RAW)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LOADFONT_RAW)


#define __PTHREAD_MUTEX_HAVE_PREV if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_INSMOD_LOAD_MAP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSMOD_LOAD_MAP)
		 => 1 if def(CONFIG_FEATURE_INSMOD_LOAD_MAP)


#define modinfo_example_usage if True 
	expansions 
		 => "$ modinfo -F vermagic loop\n" if True


#define IF_NOT_FEATURE_VOLUMEID_LINUXRAID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_LINUXRAID)


#define IF_NOT_NSLOOKUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NSLOOKUP)
		(__VA_ARGS__...) if def(CONFIG_NSLOOKUP)


#define IF_NOT_FEATURE_DC_LIBM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DC_LIBM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DC_LIBM)


#define IF_NOT_FEATURE_VOLUMEID_NTFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_NTFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_NTFS)


#define IF_FEATURE_WGET_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if True


#define mkfs_minix_full_usage if True 
	expansions 
		 => "\n\n" "Make a MINIX filesystem\n" "\nOptions:" "\n	-c		Check device for bad blocks" "\n	-n [14|30]	Maximum length of filenames" "\n	-i INODES	Number of inodes for the filesystem" "\n	-l FILE		Read bad blocks list from FILE" "\n	-v		Make version 2 filesystem" if True


#define IF_FEATURE_VERBOSE_CP_MESSAGE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)


#define _IO_uid_t if True 
	expansions 
		 => _G_uid_t if True


#define ENABLE_FEATURE_HEXDUMP_REVERSE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HEXDUMP_REVERSE)
		 => 1 if def(CONFIG_FEATURE_HEXDUMP_REVERSE)


#define ENABLE_FEATURE_DPKG_DEB_EXTRACT_ONLY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
		 => 1 if def(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)


#define uncompress_full_usage if True 
	expansions 
		 => "\n\n" "Decompress .Z file[s]\n" "\nOptions:" "\n	-c	Write to stdout" "\n	-f	Overwrite" if True


#define IF_NOT_SESTATUS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SESTATUS)
		(__VA_ARGS__...) if def(CONFIG_SESTATUS)


#define IF_FEATURE_PIDFILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PIDFILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PIDFILE)


#define IF_NOT_FEATURE_LESS_MARKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_MARKS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_MARKS)


#define ENABLE_FEATURE_EXTRA_QUIET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EXTRA_QUIET)
		 => 1 if def(CONFIG_FEATURE_EXTRA_QUIET)


#define printenv_full_usage if True 
	expansions 
		 => "\n\n" "Print environment VARIABLEs.\n" "If no VARIABLE specified, print all." if True


#define IF_FEATURE_HDPARM_HDIO_TRISTATE_HWIF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)


#define __INT_WCHAR_T_H if True 
	expansions 
		 if True


#define adduser_trivial_usage if True 
	expansions 
		 => "[OPTIONS] USER" if True


#define ENABLE_FEATURE_TOP_SMP_CPU if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TOP_SMP_CPU)
		 => 1 if def(CONFIG_FEATURE_TOP_SMP_CPU)


#define ENABLE_MKTEMP if True 
	expansions 
		 => 0 if !def(CONFIG_MKTEMP)
		 => 1 if def(CONFIG_MKTEMP)


#define IF_NOT_FEATURE_IFCONFIG_HW if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFCONFIG_HW)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFCONFIG_HW)


#define IF_NOT_TUNCTL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TUNCTL)
		(__VA_ARGS__...) if def(CONFIG_TUNCTL)


#define IF_IPCS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPCS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPCS)


#define IF_NOT_FEATURE_FIND_MTIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_MTIME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_MTIME)


#define IF_NOT_FEATURE_INSMOD_VERSION_CHECKING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)


#define yes_full_usage if True 
	expansions 
		 => "\n\n" "Repeatedly output a line with STRING, or 'y'" if True


#define __GLIBC_MINOR__ if True 
	expansions 
		 => 12 if True


#define IF_NOT_FEATURE_USE_INITTAB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_USE_INITTAB)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_USE_INITTAB)


#define IF_NOT_EXPR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EXPR)
		(__VA_ARGS__...) if def(CONFIG_EXPR)


#define IF_BBCONFIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BBCONFIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BBCONFIG)


#define mountpoint_trivial_usage if True 
	expansions 
		 => "[-q] <[-dn] DIR | -x DEVICE>" if True


#define chat_trivial_usage if True 
	expansions 
		 => "EXPECT [SEND [EXPECT [SEND...]]]" if True


#define ENABLE_PREFIX if True 
	expansions 
		 => 0 if !def(CONFIG_PREFIX)
		 => 1 if def(CONFIG_PREFIX)


#define unix2dos_full_usage if True 
	expansions 
		 => "\n\n" "Convert FILE in-place from Unix to DOS format.\n" "When no file is given, use stdin/stdout.\n" "\nOptions:" "\n	-u	dos2unix" "\n	-d	unix2dos" if True


#define _BSD_SIZE_T_DEFINED_ if True 
	expansions 
		 if True


#define IF_RESTORECON if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RESTORECON)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RESTORECON)


#define ln_full_usage if True 
	expansions 
		 => "\n\n" "Create a link LINK or DIR/TARGET to the specified TARGET(s)\n" "\nOptions:" "\n	-s	Make symlinks instead of hardlinks" "\n	-f	Remove existing destinations" "\n	-n	Don't dereference symlinks - treat like normal file" "\n	-b	Make a backup of the target (if exists) before link operation" "\n	-S suf	Use suffix instead of ~ when making backup files" if True


#define WNOHANG if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_XARGS_SUPPORT_CONFIRMATION if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)


#define IF_NOT_UBIDETACH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UBIDETACH)
		(__VA_ARGS__...) if def(CONFIG_UBIDETACH)


#define IF_FEATURE_SYSLOGD_READ_BUFFER_SIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)


#define IF_WHO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WHO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WHO)


#define IF_HD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HD)


#define IF_FEATURE_CHAT_NOFAIL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_NOFAIL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_NOFAIL)


#define ENABLE_PKILL if True 
	expansions 
		 => 0 if !def(CONFIG_PKILL)
		 => 1 if def(CONFIG_PKILL)


#define ENABLE_SVLOGD if True 
	expansions 
		 => 0 if !def(CONFIG_SVLOGD)
		 => 1 if def(CONFIG_SVLOGD)


#define IF_IP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IP)


#define IF_NOT_FEATURE_FIND_CONTEXT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_CONTEXT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_CONTEXT)


#define ENABLE_ASH_BUILTIN_PRINTF if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_BUILTIN_PRINTF)
		 => 1 if def(CONFIG_ASH_BUILTIN_PRINTF)


#define IF_NOT_FEATURE_IP_SHORT_FORMS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_SHORT_FORMS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_SHORT_FORMS)


#define sysctl_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [VALUE]..." if True


#define time_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG, display resource usage when it exits\n" "\nOptions:" "\n	-v	Verbose" if True


#define ENABLE_RPM2CPIO if True 
	expansions 
		 => 0 if !def(CONFIG_RPM2CPIO)
		 => 1 if def(CONFIG_RPM2CPIO)


#define IF_LAST_SYSTEM_ID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LAST_SYSTEM_ID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LAST_SYSTEM_ID)


#define IF_FEATURE_SEAMLESS_XZ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SEAMLESS_XZ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SEAMLESS_XZ)


#define ENABLE_DF if True 
	expansions 
		 => 0 if !def(CONFIG_DF)
		 => 1 if def(CONFIG_DF)


#define WSTOPPED if True 
	expansions 
		 => 2 if True


#define IF_NOT_FEATURE_NTPD_SERVER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_NTPD_SERVER)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_NTPD_SERVER)


#define IF_FEATURE_EDITING_SAVEHISTORY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING_SAVEHISTORY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING_SAVEHISTORY)


#define diff_full_usage if True 
	expansions 
		 => "\n\n" "Compare files line by line and output the differences between them.\n" "This implementation supports unified diffs only.\n" "\nOptions:" "\n	-a	Treat all files as text" "\n	-b	Ignore changes in the amount of whitespace" "\n	-B	Ignore changes whose lines are all blank" "\n	-d	Try hard to find a smaller set of changes" "\n	-i	Ignore case differences" "\n	-L	Use LABEL instead of the filename in the unified header" "\n	-N	Treat absent files as empty" "\n	-q	Output only whether files differ" "\n	-r	Recurse" "\n	-S	Start with FILE when comparing directories" "\n	-T	Make tabs line up by prefixing a tab when necessary" "\n	-s	Report when two files are the same" "\n	-t	Expand tabs to spaces in output" "\n	-U	Output LINES lines of context" "\n	-w	Ignore all whitespace" if True


#define ENABLE_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
		 => 1 if def(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)


#define IF_FEATURE_FIND_MMIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_MMIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_MMIN)


#define __x86_64 if True 
	expansions 
		 => 1 if True


#define __FAVOR_BSD if False 
	expansions 



#define IF_FEATURE_IFUPDOWN_IP_BUILTIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)


#define IF_NOT_HUSH_RANDOM_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_RANDOM_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_HUSH_RANDOM_SUPPORT)


#define pgrep_full_usage if True 
	expansions 
		 => "\n\n" "Display process(es) selected by regex PATTERN\n" "\nOptions:" "\n	-l	Show command name too" "\n	-f	Match against entire command line" "\n	-n	Show the newest process only" "\n	-o	Show the oldest process only" "\n	-v	Negate the match" "\n	-x	Match whole name (not substring)" "\n	-s	Match session ID (0 for current)" "\n	-P	Match parent process ID" if True


#define ENABLE_FEATURE_VOLUMEID_HFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_HFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_HFS)


#define scriptreplay_full_usage if True 
	expansions 
		 => "\n\n" "Play back typescripts, using timing information" if True


#define _IOS_NOREPLACE if True 
	expansions 
		 => 64 if True


#define IF_NOT_FEATURE_MTAB_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MTAB_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MTAB_SUPPORT)


#define IF_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)


#define WIFSTOPPED if True 
	expansions 
		(status) => __WIFSTOPPED (__WAIT_INT (status)) if True


#define strings_full_usage if True 
	expansions 
		 => "\n\n" "Display printable strings in a binary file\n" "\nOptions:" "\n	-a	Scan whole file (default)" "\n	-f	Precede strings with filenames" "\n	-n LEN	At least LEN characters form a string (default 4)" "\n	-o	Precede strings with decimal offsets" if True


#define ENABLE_SORT if True 
	expansions 
		 => 0 if !def(CONFIG_SORT)
		 => 1 if def(CONFIG_SORT)


#define IF_NOT_INSTALL_SH_APPLET_SYMLINK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_SH_APPLET_SYMLINK)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_SH_APPLET_SYMLINK)


#define ENABLE_CROND if True 
	expansions 
		 => 0 if !def(CONFIG_CROND)
		 => 1 if def(CONFIG_CROND)


#define udhcpc_trivial_usage if True 
	expansions 
		 => "[-fbnq"IF_UDHCP_VERBOSE("v")"oCR] [-i IFACE] [-r IP] [-s PROG] [-p PIDFILE]\n" "	[-H HOSTNAME] [-V VENDOR] [-x OPT:VAL]... [-O OPT]..." IF_FEATURE_UDHCP_PORT(" [-P N]") if True


#define iproute_full_usage if True 
	expansions 
		 => "\n\n" "iproute { list | flush } SELECTOR\n" "iproute get ADDRESS [from ADDRESS iif STRING]\n" "			[oif STRING]  [tos TOS]\n" "iproute { add | del | change | append | replace | monitor } ROUTE\n" "			SELECTOR := [root PREFIX] [match PREFIX] [proto RTPROTO]\n" "			ROUTE := [TYPE] PREFIX [tos TOS] [proto RTPROTO]\n" "				[metric METRIC]" if True


#define IF_NOT_TFTPD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TFTPD)
		(__VA_ARGS__...) if def(CONFIG_TFTPD)


#define IF_FLASHCP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FLASHCP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FLASHCP)


#define IF_TFTP_DEBUG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TFTP_DEBUG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TFTP_DEBUG)


#define IF_NOMMU if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NOMMU)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NOMMU)


#define IF_NOT_FEATURE_PS_WIDE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PS_WIDE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PS_WIDE)


#define IF_NOT_IFUPDOWN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IFUPDOWN)
		(__VA_ARGS__...) if def(CONFIG_IFUPDOWN)


#define IF_FEATURE_IPCALC_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)


#define IF_NOT_FEATURE_VI_MAX_LEN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_MAX_LEN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_MAX_LEN)


#define IF_TIMEOUT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TIMEOUT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TIMEOUT)


#define ENABLE_IPROUTE if True 
	expansions 
		 => 0 if !def(CONFIG_IPROUTE)
		 => 1 if def(CONFIG_IPROUTE)


#define nmeter_trivial_usage if True 
	expansions 
		 => "format_string" if True


#define dumpkmap_trivial_usage if True 
	expansions 
		 => "> keymap" if True


#define IF_LOAD_POLICY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOAD_POLICY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOAD_POLICY)


#define IF_NOT_DEVFSD_MODLOAD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEVFSD_MODLOAD)
		(__VA_ARGS__...) if def(CONFIG_DEVFSD_MODLOAD)


#define sysctl_example_usage if True 
	expansions 
		 => "sysctl [-n] [-e] variable...\n" "sysctl [-n] [-e] -w variable=value...\n" "sysctl [-n] [-e] -a\n" "sysctl [-n] [-e] -p file	(default /etc/sysctl.conf)\n" "sysctl [-n] [-e] -A\n" if True


#define setfont_trivial_usage if True 
	expansions 
		 => "FONT [-m MAPFILE] [-C TTY]" if True


#define _WCHAR_T_DECLARED if True 
	expansions 
		 if True


#define IF_FEATURE_MODPROBE_BLACKLIST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MODPROBE_BLACKLIST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MODPROBE_BLACKLIST)


#define ENABLE_FEATURE_VI_COLON if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_COLON)
		 => 1 if def(CONFIG_FEATURE_VI_COLON)


#define IF_NOT_SYNC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SYNC)
		(__VA_ARGS__...) if def(CONFIG_SYNC)


#define IF_NOT_MT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MT)
		(__VA_ARGS__...) if def(CONFIG_MT)


#define readahead_trivial_usage if True 
	expansions 
		 => "[FILE]..." if True


#define blkid_full_usage if True 
	expansions 
		 => "\n\n" "Print UUIDs of all filesystems" if True


#define IF_NETSTAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NETSTAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NETSTAT)


#define IF_NOT_CMP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CMP)
		(__VA_ARGS__...) if def(CONFIG_CMP)


#define mktemp_example_usage if True 
	expansions 
		 => "$ mktemp /tmp/temp.XXXXXX\n" "/tmp/temp.mWiLjM\n" "$ ls -la /tmp/temp.mWiLjM\n" "-rw-------    1 andersen andersen        0 Apr 25 17:10 /tmp/temp.mWiLjM\n" if True


#define ttysize_trivial_usage if True 
	expansions 
		 => "[w] [h]" if True


#define __FLT_MAX_10_EXP__ if True 
	expansions 
		 => 38 if True


#define nc_trivial_usage if True 
	expansions 
		 => IF_NC_EXTRA("[-iN] [-wN] ")IF_NC_SERVER("[-l] [-p PORT] ") "["IF_NC_EXTRA("-f FILE|")"IPADDR PORT]"IF_NC_EXTRA(" [-e PROG]") if !def(CONFIG_NC_110_COMPAT)
		 => "[OPTIONS] HOST PORT  - connect" IF_NC_SERVER("\n" "nc [OPTIONS] -l -p PORT [HOST] [PORT]  - listen" ) if def(CONFIG_NC_110_COMPAT)


#define ENABLE_USE_BB_PWD_GRP if True 
	expansions 
		 => 0 if !def(CONFIG_USE_BB_PWD_GRP)
		 => 1 if def(CONFIG_USE_BB_PWD_GRP)


#define xzcat_trivial_usage if True 
	expansions 
		 => "FILE" if True


#define udpsvd_full_usage if True 
	expansions 
		 => "\n\n" "Create UDP socket, bind to IP:PORT and wait\n" "for incoming packets. Run PROG for each packet,\n" "redirecting all further packets with same peer ip:port to it.\n" "\n	IP		IP to listen on. '0' = all" "\n	PORT		Port to listen on" "\n	PROG ARGS	Program to run" "\n	-l NAME		Local hostname (else looks up local hostname in DNS)" "\n	-u USER[:GRP]	Change to user/group after bind" "\n	-c N		Handle up to N connections simultaneously" "\n	-h		Look up peer's hostname" "\n	-E		Don't set up environment variables" "\n	-v		Verbose" if True


#define __DBL_DENORM_MIN__ if True 
	expansions 
		 => 4.9406564584124654e-324 if True


#define ENABLE_TEE if True 
	expansions 
		 => 0 if !def(CONFIG_TEE)
		 => 1 if def(CONFIG_TEE)


#define IF_FEATURE_DEL_USER_FROM_GROUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DEL_USER_FROM_GROUP)


#define IF_INCLUDE_SUSv2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INCLUDE_SUSv2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INCLUDE_SUSv2)


#define ENABLE_FEATURE_VOLUMEID_CRAMFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_CRAMFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_CRAMFS)


#define ENABLE_FEATURE_FIND_CONTEXT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_CONTEXT)
		 => 1 if def(CONFIG_FEATURE_FIND_CONTEXT)


#define _SYS_CDEFS_H if True 
	expansions 
		 => 1 if True


#define ENABLE_RDATE if True 
	expansions 
		 => 0 if !def(CONFIG_RDATE)
		 => 1 if def(CONFIG_RDATE)


#define fdflush_full_usage if True 
	expansions 
		 => "\n\n" "Force floppy disk drive to detect disk change" if True


#define IF_MV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MV)


#define IF_FEATURE_MODUTILS_SYMBOLS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MODUTILS_SYMBOLS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MODUTILS_SYMBOLS)


#define IF_NOT_ECHO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ECHO)
		(__VA_ARGS__...) if def(CONFIG_ECHO)


#define ENABLE_KLOGD if True 
	expansions 
		 => 0 if !def(CONFIG_KLOGD)
		 => 1 if def(CONFIG_KLOGD)


#define ftpget_trivial_usage if True 
	expansions 
		 => "[OPTIONS] HOST [LOCAL_FILE] REMOTE_FILE" if True


#define ENABLE_FEATURE_CHECK_NAMES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHECK_NAMES)
		 => 1 if def(CONFIG_FEATURE_CHECK_NAMES)


#define IF_NOT_WHOAMI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WHOAMI)
		(__VA_ARGS__...) if def(CONFIG_WHOAMI)


#define ENABLE_FEATURE_VOLUMEID_NTFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_NTFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_NTFS)


#define IF_NOT_FEATURE_MOUNT_FLAGS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_FLAGS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_FLAGS)


#define IF_NMETER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NMETER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NMETER)


#define ENABLE_FEATURE_RMDIR_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)


#define ENABLE_FEATURE_EXPAND_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)


#define ENABLE_BRCTL if True 
	expansions 
		 => 0 if !def(CONFIG_BRCTL)
		 => 1 if def(CONFIG_BRCTL)


#define IF_NOT_HEXDUMP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HEXDUMP)
		(__VA_ARGS__...) if def(CONFIG_HEXDUMP)


#define IF_FEATURE_BEEP_FREQ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BEEP_FREQ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BEEP_FREQ)


#define IF_USE_BB_SHADOW if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_USE_BB_SHADOW)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_USE_BB_SHADOW)


#define ENABLE_LAST_SYSTEM_ID if True 
	expansions 
		 => 0 if !def(CONFIG_LAST_SYSTEM_ID)
		 => 1 if def(CONFIG_LAST_SYSTEM_ID)


#define IF_VERBOSE_RESOLUTION_ERRORS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_VERBOSE_RESOLUTION_ERRORS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_VERBOSE_RESOLUTION_ERRORS)


#define IF_NOT_FEATURE_TOP_SMP_CPU if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TOP_SMP_CPU)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TOP_SMP_CPU)


#define IF_NBDCLIENT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NBDCLIENT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NBDCLIENT)


#define IF_STAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_STAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_STAT)


#define ENABLE_RUNCON if True 
	expansions 
		 => 0 if !def(CONFIG_RUNCON)
		 => 1 if def(CONFIG_RUNCON)


#define head_full_usage if True 
	expansions 
		 => "\n\n" "Print first 10 lines of each FILE (or stdin) to stdout.\n" "With more than one FILE, precede each with a filename header.\n" "\nOptions:" "\n	-n N[kbm]	Print first N lines" IF_FEATURE_FANCY_HEAD( "\n	-c N[kbm]	Print first N bytes" "\n	-q		Never print headers" "\n	-v		Always print headers" ) "\n" "\nN may be suffixed by k (x1024), b (x512), or m (x1024^2)." if True


#define ENABLE_FEATURE_SH_IS_ASH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SH_IS_ASH)
		 => 1 if def(CONFIG_FEATURE_SH_IS_ASH)


#define ENABLE_MD5SUM if True 
	expansions 
		 => 0 if !def(CONFIG_MD5SUM)
		 => 1 if def(CONFIG_MD5SUM)


#define envuidgid_trivial_usage if True 
	expansions 
		 => "USER PROG ARGS" if True


#define IF_FEATURE_REMOTE_LOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_REMOTE_LOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_REMOTE_LOG)


#define ENABLE_FEATURE_FBSET_READMODE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FBSET_READMODE)
		 => 1 if def(CONFIG_FEATURE_FBSET_READMODE)


#define IF_HUSH_INTERACTIVE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_INTERACTIVE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_INTERACTIVE)


#define IF_LSMOD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LSMOD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LSMOD)


#define IF_NOT_UDHCPD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UDHCPD)
		(__VA_ARGS__...) if def(CONFIG_UDHCPD)


#define _IO_putc_unlocked if True 
	expansions 
		(_ch, _fp) => (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch))) if True


#define passwd_full_usage if True 
	expansions 
		 => "\n\n" "Change USER's password. If no USER is specified,\n" "changes the password for the current user.\n" "\nOptions:" "\n	-a ALG	Algorithm to use for password (des, md5)" "\n	-d	Delete password for the account" "\n	-l	Lock (disable) account" "\n	-u	Unlock (re-enable) account" if True


#define fsync_trivial_usage if True 
	expansions 
		 => "[-d] FILE..." if True


#define ipcs_full_usage if True 
	expansions 
		 => "\n\n" "	-i	Show specific resource" "\nResource specification:" "\n	-m	Shared memory segments" "\n	-q	Message queues" "\n	-s	Semaphore arrays" "\n	-a	All (default)" "\nOutput format:" "\n	-t	Time" "\n	-c	Creator" "\n	-p	Pid" "\n	-l	Limits" "\n	-u	Summary" if True


#define _IO_stdout if True 
	expansions 
		 => ((_IO_FILE*)(&_IO_2_1_stdout_)) if True


#define ENABLE_FEATURE_MD5_SHA1_SUM_CHECK if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
		 => 1 if def(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)


#define mountpoint_full_usage if True 
	expansions 
		 => "\n\n" "Check if the directory is a mountpoint\n" "\nOptions:" "\n	-q	Quiet" "\n	-d	Print major/minor device number of the filesystem" "\n	-n	Print device name of the filesystem" "\n	-x	Print major/minor device number of the blockdevice" if True


#define stdout if True 
	expansions 
		 => stdout if True


#define IF_MOUNTPOINT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MOUNTPOINT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MOUNTPOINT)


#define IF_FSCK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FSCK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FSCK)


#define su_full_usage if True 
	expansions 
		 => "\n\n" "Change user id or become root\n" "\nOptions:" "\n	-p,-m	Preserve environment" "\n	-c CMD	Command to pass to 'sh -c'" "\n	-s SH	Shell to use instead of default shell" if True


#define ENABLE_FEATURE_TOPMEM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TOPMEM)
		 => 1 if def(CONFIG_FEATURE_TOPMEM)


#define ENABLE_FEATURE_SH_IS_HUSH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SH_IS_HUSH)
		 => 1 if def(CONFIG_FEATURE_SH_IS_HUSH)


#define dpkg_deb_example_usage if True 
	expansions 
		 => "$ dpkg-deb -X ./busybox_0.48-1_i386.deb /tmp\n" if True


#define switch_root_full_usage if True 
	expansions 
		 => "\n\n" "Free initramfs and switch to another root fs:\n" "chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /,\n" "execute NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.\n" "\nOptions:" "\n	-c DEV	Reopen stdio to DEV after switch" if True


#define last_full_usage if True 
	expansions 
		 => "\n\n" "Show listing of the last users that logged into the system" IF_FEATURE_LAST_FANCY( "\n" "\nOptions:" "\n	-W	Display with no host column truncation" "\n	-f FILE Read from FILE instead of /var/log/wtmp" ) if True


#define IF_NOT_FEATURE_NON_POSIX_CP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_NON_POSIX_CP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_NON_POSIX_CP)


#define ENABLE_FEATURE_MAKEDEVS_TABLE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MAKEDEVS_TABLE)
		 => 1 if def(CONFIG_FEATURE_MAKEDEVS_TABLE)


#define IF_FEATURE_IFCONFIG_HW if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFCONFIG_HW)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFCONFIG_HW)


#define ENABLE_FEATURE_REFORMIME_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_REFORMIME_COMPAT)
		 => 1 if def(CONFIG_FEATURE_REFORMIME_COMPAT)


#define ENABLE_TR if True 
	expansions 
		 => 0 if !def(CONFIG_TR)
		 => 1 if def(CONFIG_TR)


#define IF_NOT_FEATURE_2_4_MODULES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_2_4_MODULES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_2_4_MODULES)


#define ENABLE_DIFF if True 
	expansions 
		 => 0 if !def(CONFIG_DIFF)
		 => 1 if def(CONFIG_DIFF)


#define ENABLE_PAM if True 
	expansions 
		 => 0 if !def(CONFIG_PAM)
		 => 1 if def(CONFIG_PAM)


#define IF_ECHO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ECHO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ECHO)


#define IF_NOT_BZIP2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BZIP2)
		(__VA_ARGS__...) if def(CONFIG_BZIP2)


#define IF_ENVUIDGID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ENVUIDGID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ENVUIDGID)


#define true_example_usage if True 
	expansions 
		 => "$ true\n" "$ echo $?\n" "0\n" if True


#define ENABLE_FEATURE_FDISK_WRITABLE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FDISK_WRITABLE)
		 => 1 if def(CONFIG_FEATURE_FDISK_WRITABLE)


#define brctl_trivial_usage if True 
	expansions 
		 => "COMMAND [BRIDGE [INTERFACE]]" if True


#define ENABLE_FEATURE_HWIB if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HWIB)
		 => 1 if def(CONFIG_FEATURE_HWIB)


#define ENABLE_DHCPRELAY if True 
	expansions 
		 => 0 if !def(CONFIG_DHCPRELAY)
		 => 1 if def(CONFIG_DHCPRELAY)


#define IF_FEATURE_LS_SORTFILES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_SORTFILES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_SORTFILES)


#define add_shell_full_usage if True 
	expansions 
		 => "\n\n" "Add SHELLs to /etc/shells" if True


#define IF_NOT_FEATURE_VOLUMEID_CRAMFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_CRAMFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_CRAMFS)


#define IF_RUNSVDIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RUNSVDIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RUNSVDIR)


#define ENABLE_INSMOD if True 
	expansions 
		 => 0 if !def(CONFIG_INSMOD)
		 => 1 if def(CONFIG_INSMOD)


#define IF_SVLOGD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SVLOGD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SVLOGD)


#define man_trivial_usage if True 
	expansions 
		 => "[-aw] [MANPAGE]..." if True


#define ENABLE_FEATURE_IP_SHORT_FORMS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_SHORT_FORMS)
		 => 1 if def(CONFIG_FEATURE_IP_SHORT_FORMS)


#define IF_FEATURE_BRCTL_SHOW if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BRCTL_SHOW)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BRCTL_SHOW)


#define ENABLE_SETLOGCONS if True 
	expansions 
		 => 0 if !def(CONFIG_SETLOGCONS)
		 => 1 if def(CONFIG_SETLOGCONS)


#define ENABLE_RAIDAUTORUN if True 
	expansions 
		 => 0 if !def(CONFIG_RAIDAUTORUN)
		 => 1 if def(CONFIG_RAIDAUTORUN)


#define ENABLE_MONOTONIC_SYSCALL if True 
	expansions 
		 => 0 if !def(CONFIG_MONOTONIC_SYSCALL)
		 => 1 if def(CONFIG_MONOTONIC_SYSCALL)


#define IF_NOT_DEVMEM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEVMEM)
		(__VA_ARGS__...) if def(CONFIG_DEVMEM)


#define IF_NOT_UDHCP_DEBUG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UDHCP_DEBUG)
		(__VA_ARGS__...) if def(CONFIG_UDHCP_DEBUG)


#define lzopcat_full_usage if True 
	expansions 
		 => "\n\n" "	-v	Verbose" "\n	-F	Don't store or verify checksum" if True


#define IF_NOT_GETSEBOOL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GETSEBOOL)
		(__VA_ARGS__...) if def(CONFIG_GETSEBOOL)


#define IF_NOT_UNICODE_WIDE_WCHARS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_WIDE_WCHARS)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_WIDE_WCHARS)


#define ENABLE_FEATURE_BOOTCHARTD_CONFIG_FILE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
		 => 1 if def(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)


#define __ptrvalue if True 
	expansions 
		 if True


#define ENABLE_SH_MATH_SUPPORT_64 if True 
	expansions 
		 => 0 if !def(CONFIG_SH_MATH_SUPPORT_64)
		 => 1 if def(CONFIG_SH_MATH_SUPPORT_64)


#define IF_PRINTENV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PRINTENV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PRINTENV)


#define ENABLE_FEATURE_LS_FILETYPES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_FILETYPES)
		 => 1 if def(CONFIG_FEATURE_LS_FILETYPES)


#define ENABLE_FEATURE_XARGS_SUPPORT_CONFIRMATION if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
		 => 1 if def(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)


#define IF_DMESG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DMESG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DMESG)


#define route_full_usage if True 
	expansions 
		 => "\n\n" "Edit kernel routing tables\n" "\nOptions:" "\n	-n	Don't resolve names" "\n	-e	Display other/more information" "\n	-A inet" IF_FEATURE_IPV6("{6}") "	Select address family" if True


#define IF_START_STOP_DAEMON if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_START_STOP_DAEMON)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_START_STOP_DAEMON)


#define ENABLE_DPKG_DEB if True 
	expansions 
		 => 0 if !def(CONFIG_DPKG_DEB)
		 => 1 if def(CONFIG_DPKG_DEB)


#define delgroup_trivial_usage if True 
	expansions 
		 => IF_FEATURE_DEL_USER_FROM_GROUP("[USER] ")"GROUP" if True


#define NOUSAGE_STR if True 
	expansions 
		 => "\b" if True


#define ENABLE_INSTALL_APPLET_SYMLINKS if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_APPLET_SYMLINKS)
		 => 1 if def(CONFIG_INSTALL_APPLET_SYMLINKS)


#define IF_CHMOD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHMOD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHMOD)


#define __DADDR_T_TYPE if True 
	expansions 
		 => __S32_TYPE if True


#define rmdir_full_usage if True 
	expansions 
		 => "\n\n" "Remove DIRECTORY if it is empty\n" "\nOptions:" IF_FEATURE_RMDIR_LONG_OPTIONS( "\n	-p|--parents	Include parents" "\n	--ignore-fail-on-non-empty" ) IF_NOT_FEATURE_RMDIR_LONG_OPTIONS( "\n	-p	Include parents" ) if True


#define IF_NOT_ASH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH)
		(__VA_ARGS__...) if def(CONFIG_ASH)


#define start_stop_daemon_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [-S|-K] ... [-- ARGS...]" if True


#define IF_RX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RX)


#define __MMX__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_VOLUMEID_LUKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_LUKS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_LUKS)


#define IF_NOT_IPADDR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPADDR)
		(__VA_ARGS__...) if def(CONFIG_IPADDR)


#define IF_NOT_FEATURE_ALLOW_EXEC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ALLOW_EXEC)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ALLOW_EXEC)


#define fsck_minix_full_usage if True 
	expansions 
		 => "\n\n" "Check MINIX filesystem\n" "\nOptions:" "\n	-l	List all filenames" "\n	-r	Perform interactive repairs" "\n	-a	Perform automatic repairs" "\n	-v	Verbose" "\n	-s	Output superblock information" "\n	-m	Show \"mode not cleared\" warnings" "\n	-f	Force file system check" if True


#define IF_ADDGROUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ADDGROUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ADDGROUP)


#define IF_ZCIP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ZCIP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ZCIP)


#define IF_CUT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CUT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CUT)


#define IF_NOT_FEATURE_SGI_LABEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SGI_LABEL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SGI_LABEL)


#define IF_FEATURE_FIND_USER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_USER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_USER)


#define IF_NOT_LPQ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LPQ)
		(__VA_ARGS__...) if def(CONFIG_LPQ)


#define ENABLE_DEVFSD_MODLOAD if True 
	expansions 
		 => 0 if !def(CONFIG_DEVFSD_MODLOAD)
		 => 1 if def(CONFIG_DEVFSD_MODLOAD)


#define IF_NOT_UNCOMPRESS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNCOMPRESS)
		(__VA_ARGS__...) if def(CONFIG_UNCOMPRESS)


#define IF_NOT_MESG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MESG)
		(__VA_ARGS__...) if def(CONFIG_MESG)


#define IF_FEATURE_SH_STANDALONE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SH_STANDALONE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SH_STANDALONE)


#define IF_NOT_XARGS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_XARGS)
		(__VA_ARGS__...) if def(CONFIG_XARGS)


#define IF_INSTALL_APPLET_SYMLINKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_APPLET_SYMLINKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_APPLET_SYMLINKS)


#define IF_NOT_UNIQ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNIQ)
		(__VA_ARGS__...) if def(CONFIG_UNIQ)


#define tcpsvd_trivial_usage if True 
	expansions 
		 => "[-hEv] [-c N] [-C N[:MSG]] [-b N] [-u USER] [-l NAME] IP PORT PROG" if True


#define IF_FEATURE_SUID_CONFIG_QUIET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SUID_CONFIG_QUIET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SUID_CONFIG_QUIET)


#define flock_trivial_usage if True 
	expansions 
		 => "[-sxun] FD|{FILE [-c] PROG ARGS}" if True


#define IF_ASH_OPTIMIZE_FOR_SIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_OPTIMIZE_FOR_SIZE)


#define ENABLE_TELNET if True 
	expansions 
		 => 0 if !def(CONFIG_TELNET)
		 => 1 if def(CONFIG_TELNET)


#define IF_TELNET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TELNET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TELNET)


#define ENABLE_FEATURE_NETSTAT_PRG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_NETSTAT_PRG)
		 => 1 if def(CONFIG_FEATURE_NETSTAT_PRG)


#define _WCHAR_T_ if True 
	expansions 
		 if True


#define __FLT_DENORM_MIN__ if True 
	expansions 
		 => 1.40129846e-45F if True


#define _G_wchar_t if True 
	expansions 
		 => wchar_t if True


#define IF_NOT_MKFS_EXT2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKFS_EXT2)
		(__VA_ARGS__...) if def(CONFIG_MKFS_EXT2)


#define acpid_example_usage if True 
	expansions 
		 => "Without -e option, acpid uses all /dev/input/event* files\n" "# acpid\n" "# acpid -l /var/log/my-acpi-log\n" "# acpid -e /proc/acpi/event\n" if True


#define IF_FEATURE_SWAPON_PRI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SWAPON_PRI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SWAPON_PRI)


#define envdir_full_usage if True 
	expansions 
		 => "\n\n" "Set various environment variables as specified by files\n" "in the directory DIR, run PROG" if True


#define ENABLE_AWK if True 
	expansions 
		 => 0 if !def(CONFIG_AWK)
		 => 1 if def(CONFIG_AWK)


#define mkdir_full_usage if True 
	expansions 
		 => "\n\n" "Create DIRECTORY\n" "\nOptions:" "\n	-m MODE	Mode" "\n	-p	No error if exists; make parent directories as needed" IF_SELINUX( "\n	-Z	Set security context" ) if True


#define cmp_trivial_usage if True 
	expansions 
		 => "[-l] [-s] FILE1 [FILE2" IF_DESKTOP(" [SKIP1 [SKIP2]]") "]" if True


#define dc_full_usage if True 
	expansions 
		 => "\n\n" "Tiny RPN calculator. Operations:\n" "+, add, -, sub, *, mul, /, div, %, mod, **, exp, and, or, not, eor,\n" "p - print top of the stack (without popping),\n" "f - print entire stack,\n" "o - pop the value and set output radix (must be 10, 16, 8 or 2).\n" "Examples: 'dc 2 2 add' -> 4, 'dc 8 8 * 2 2 + /' -> 16" if True


#define dirname_example_usage if True 
	expansions 
		 => "$ dirname /tmp/foo\n" "/tmp\n" "$ dirname /tmp/foo/\n" "/tmp\n" if True


#define IF_FTPGET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FTPGET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FTPGET)


#define ENABLE_FDISK_SUPPORT_LARGE_DISKS if True 
	expansions 
		 => 0 if !def(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
		 => 1 if def(CONFIG_FDISK_SUPPORT_LARGE_DISKS)


#define ENABLE_FEATURE_TELNETD_STANDALONE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TELNETD_STANDALONE)
		 => 1 if def(CONFIG_FEATURE_TELNETD_STANDALONE)


#define ENABLE_FEATURE_LAST_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LAST_FANCY)
		 => 1 if def(CONFIG_FEATURE_LAST_FANCY)


#define test_trivial_usage if True 
	expansions 
		 => "EXPRESSION ]" if True


#define __FDELT if True 
	expansions 
		(d) => ((d) / __NFDBITS) if True


#define init_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_ETHER_WAKE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ETHER_WAKE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ETHER_WAKE)


#define unix if True 
	expansions 
		 => 1 if True


#define smemcap_full_usage if True 
	expansions 
		 => "\n\n" "Collect memory usage data in /proc and write it to stdout" if True


#define false_full_usage if True 
	expansions 
		 => "\n\n" "Return an exit code of FALSE (1)" if True


#define IF_TOP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TOP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TOP)


#define ENABLE_MODPROBE_SMALL if True 
	expansions 
		 => 0 if !def(CONFIG_MODPROBE_SMALL)
		 => 1 if def(CONFIG_MODPROBE_SMALL)


#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 if True 
	expansions 
		 => 1 if True


#define _IO_STDIO if True 
	expansions 
		 => 040000 if True


#define ENABLE_HTTPD if True 
	expansions 
		 => 0 if !def(CONFIG_HTTPD)
		 => 1 if def(CONFIG_HTTPD)


#define IF_KILLALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_KILLALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_KILLALL)


#define dnsd_trivial_usage if True 
	expansions 
		 => "[-dvs] [-c CONFFILE] [-t TTL_SEC] [-p PORT] [-i ADDR]" if True


#define NC_OPTIONS_STR if ((!def(CONFIG_NC_110_COMPAT)&(def(CONFIG_NC_SERVER)|def(CONFIG_NC_EXTRA)))|(!def(CONFIG_NC_SERVER)&!def(CONFIG_NC_EXTRA)&!def(CONFIG_NC_110_COMPAT))) 
	expansions 
		 if (!def(CONFIG_NC_SERVER)&!def(CONFIG_NC_EXTRA)&!def(CONFIG_NC_110_COMPAT))
		 => "\n\nOptions:" if (!def(CONFIG_NC_110_COMPAT)&(def(CONFIG_NC_SERVER)|def(CONFIG_NC_EXTRA))&(def(CONFIG_NC_SERVER)|def(CONFIG_NC_EXTRA)|def(CONFIG_NC_110_COMPAT)))


#define IF_FEATURE_SORT_BIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SORT_BIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SORT_BIG)


#define __LDBL_REDIR_DECL if True 
	expansions 
		(name) if True


#define ENABLE_SU if True 
	expansions 
		 => 0 if !def(CONFIG_SU)
		 => 1 if def(CONFIG_SU)


#define IF_NOT_FEATURE_CHECK_TAINTED_MODULE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHECK_TAINTED_MODULE)


#define more_trivial_usage if True 
	expansions 
		 => "[FILE]..." if True


#define IF_NOT_FEATURE_REFORMIME_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_REFORMIME_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_REFORMIME_COMPAT)


#define IF_OPENVT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_OPENVT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_OPENVT)


#define IF_FTPD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FTPD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FTPD)


#define IF_NOT_FEATURE_IFUPDOWN_IP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_IP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_IP)


#define ENABLE_FEATURE_VOLUMEID_XFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_XFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_XFS)


#define IF_NOT_HUSH_TICK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_TICK)
		(__VA_ARGS__...) if def(CONFIG_HUSH_TICK)


#define df_example_usage if True 
	expansions 
		 => "$ df\n" "Filesystem           1K-blocks      Used Available Use% Mounted on\n" "/dev/sda3              8690864   8553540    137324  98% /\n" "/dev/sda1                64216     36364     27852  57% /boot\n" "$ df /dev/sda3\n" "Filesystem           1K-blocks      Used Available Use% Mounted on\n" "/dev/sda3              8690864   8553540    137324  98% /\n" "$ POSIXLY_CORRECT=sure df /dev/sda3\n" "Filesystem         512B-blocks      Used Available Use% Mounted on\n" "/dev/sda3             17381728  17107080    274648  98% /\n" "$ POSIXLY_CORRECT=yep df -P /dev/sda3\n" "Filesystem          512-blocks      Used Available Capacity Mounted on\n" "/dev/sda3             17381728  17107080    274648      98% /\n" if True


#define IF_NOT_HD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HD)
		(__VA_ARGS__...) if def(CONFIG_HD)


#define IF_NOT_FEATURE_VI_SET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_SET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_SET)


#define printf_trivial_usage if True 
	expansions 
		 => "FORMAT [ARGUMENT]..." if True


#define __FD_SETSIZE if True 
	expansions 
		 => 1024 if True


#define IF_NOT_FEATURE_BRCTL_SHOW if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BRCTL_SHOW)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BRCTL_SHOW)


#define _WCHAR_T_DEFINED if True 
	expansions 
		 if True


#define mkfs_reiser_trivial_usage if True 
	expansions 
		 => "[-f] [-l LABEL] BLOCKDEV [4K-BLOCKS]" if True


#define __LDBL_REDIR1_NTH if True 
	expansions 
		(name, proto, alias) => name proto __THROW if True


#define __timer_t_defined if True 
	expansions 
		 => 1 if True


#define __USE_XOPEN if False 
	expansions 



#define ENABLE_BUILD_LIBBUSYBOX if True 
	expansions 
		 => 0 if !def(CONFIG_BUILD_LIBBUSYBOX)
		 => 1 if def(CONFIG_BUILD_LIBBUSYBOX)


#define IF_NOT_FEATURE_HTTPD_USE_SENDFILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_USE_SENDFILE)


#define IF_HUSH_LOCAL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_LOCAL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_LOCAL)


#define IF_HALT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HALT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HALT)


#define cat_trivial_usage if True 
	expansions 
		 => "[FILE]..." if True


#define IF_FLOCK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FLOCK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FLOCK)


#define IF_NOT_PAM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PAM)
		(__VA_ARGS__...) if def(CONFIG_PAM)


#define ENABLE_FEATURE_HDPARM_HDIO_SCAN_HWIF if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
		 => 1 if def(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)


#define dumpleases_trivial_usage if True 
	expansions 
		 => "[-r|-a] [-f LEASEFILE]" if True


#define install_trivial_usage if True 
	expansions 
		 => "[-cdDsp] [-o USER] [-g GRP] [-m MODE] [SOURCE]... DEST" if True


#define __linux__ if True 
	expansions 
		 => 1 if True


#define ENABLE_FSYNC if True 
	expansions 
		 => 0 if !def(CONFIG_FSYNC)
		 => 1 if def(CONFIG_FSYNC)


#define IF_FEATURE_HWCLOCK_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)


#define __sigset_t_defined if True 
	expansions 
		 if True


#define rmmod_full_usage if True 
	expansions 
		 => "\n\n" "Unload kernel modules\n" "\nOptions:" "\n	-w	Wait until the module is no longer used" "\n	-f	Force unload" "\n	-a	Remove all unused modules (recursively)" if True


#define klogd_full_usage if True 
	expansions 
		 => "\n\n" "Kernel logger\n" "\nOptions:" "\n	-c N	Only messages with level < N are printed to console" "\n	-n	Run in foreground" if True


#define IF_NOT_HOSTID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HOSTID)
		(__VA_ARGS__...) if def(CONFIG_HOSTID)


#define __restrict_arr if True 
	expansions 
		 => __restrict if True


#define IF_NOT_FEATURE_SECURETTY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SECURETTY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SECURETTY)


#define ENABLE_FEATURE_WGET_STATUSBAR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_WGET_STATUSBAR)
		 => 1 if def(CONFIG_FEATURE_WGET_STATUSBAR)


#define ENABLE_FEATURE_DD_SIGNAL_HANDLING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
		 => 1 if def(CONFIG_FEATURE_DD_SIGNAL_HANDLING)


#define ENABLE_MODPROBE if True 
	expansions 
		 => 0 if !def(CONFIG_MODPROBE)
		 => 1 if def(CONFIG_MODPROBE)


#define _IO_NO_READS if True 
	expansions 
		 => 4 if True


#define __DEC64_MANT_DIG__ if True 
	expansions 
		 => 16 if True


#define ping_trivial_usage if True 
	expansions 
		 => "[OPTIONS] HOST" if def(CONFIG_FEATURE_FANCY_PING)
		 => "host" if !def(CONFIG_FEATURE_FANCY_PING)


#define IF_INIT_TERMINAL_TYPE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INIT_TERMINAL_TYPE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INIT_TERMINAL_TYPE)


#define IF_NOT_PSCAN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PSCAN)
		(__VA_ARGS__...) if def(CONFIG_PSCAN)


#define date_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [+FMT] [TIME]" if True


#define IF_MPSTAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MPSTAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MPSTAT)


#define IF_FEATURE_WGET_TIMEOUT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_WGET_TIMEOUT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_WGET_TIMEOUT)


#define ENABLE_CRONTAB if True 
	expansions 
		 => 0 if !def(CONFIG_CRONTAB)
		 => 1 if def(CONFIG_CRONTAB)


#define sync_trivial_usage if True 
	expansions 
		 => "" if True


#define ENABLE_FEATURE_GREP_EGREP_ALIAS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_GREP_EGREP_ALIAS)
		 => 1 if def(CONFIG_FEATURE_GREP_EGREP_ALIAS)


#define IF_NOT_DEVFSD_FG_NP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEVFSD_FG_NP)
		(__VA_ARGS__...) if def(CONFIG_DEVFSD_FG_NP)


#define ENABLE_FEATURE_VI_SEARCH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_SEARCH)
		 => 1 if def(CONFIG_FEATURE_VI_SEARCH)


#define IF_FEATURE_LS_TIMESTAMPS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_TIMESTAMPS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_TIMESTAMPS)


#define IF_DPKG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DPKG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DPKG)


#define __FLT_MANT_DIG__ if True 
	expansions 
		 => 24 if True


#define __attribute_noinline__ if True 
	expansions 
		 => __attribute__ ((__noinline__)) if True


#define IF_NOT_ADDUSER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ADDUSER)
		(__VA_ARGS__...) if def(CONFIG_ADDUSER)


#define __DEC128_SUBNORMAL_MIN__ if True 
	expansions 
		 => 0.000000000000000000000000000000001E-6143DL if True


#define ENABLE_FEATURE_DIFF_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_DIFF_LONG_OPTIONS)


#define IF_FEATURE_VI_YANKMARK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_YANKMARK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_YANKMARK)


#define udpsvd_trivial_usage if True 
	expansions 
		 => "[-hEv] [-c N] [-u USER] [-l NAME] IP PORT PROG" if True


#define openvt_trivial_usage if True 
	expansions 
		 => "[-c N] [-sw] [PROG ARGS]" if True


#define ENABLE_FEATURE_TAR_OLDSUN_COMPATIBILITY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
		 => 1 if def(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)


#define IF_NOT_FEATURE_FLOAT_SLEEP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FLOAT_SLEEP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FLOAT_SLEEP)


#define __BEGIN_NAMESPACE_STD if True 
	expansions 
		 if True


#define w_stopsig if True 
	expansions 
		 => __wait_stopped.__w_stopsig if True


#define _IO_peekc_unlocked if True 
	expansions 
		(_fp) => (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr) if True


#define traceroute_full_usage if True 
	expansions 
		 => "\n\n" "Trace the route to HOST\n" "\nOptions:" IF_TRACEROUTE6( "\n	-4,-6	Force IP or IPv6 name resolution" ) "\n	-F	Set the don't fragment bit" "\n	-I	Use ICMP ECHO instead of UDP datagrams" "\n	-l	Display the TTL value of the returned packet" "\n	-d	Set SO_DEBUG options to socket" "\n	-n	Print numeric addresses" "\n	-r	Bypass routing tables, send directly to HOST" "\n	-v	Verbose" "\n	-m	Max time-to-live (max number of hops)" "\n	-p	Base UDP port number used in probes" "\n		(default 33434)" "\n	-q	Number of probes per TTL (default 3)" "\n	-s	IP address to use as the source address" "\n	-t	Type-of-service in probe packets (default 0)" "\n	-w	Time in seconds to wait for a response (default 3)" "\n	-g	Loose source route gateway (8 max)" if True


#define adjtimex_trivial_usage if True 
	expansions 
		 => "[-q] [-o OFF] [-f FREQ] [-p TCONST] [-t TICK]" if True


#define IF_FEATURE_FIND_EXEC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_EXEC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_EXEC)


#define uniq_example_usage if True 
	expansions 
		 => "$ echo -e \"a\\na\\nb\\nc\\nc\\na\" | sort | uniq\n" "a\n" "b\n" "c\n" if True


#define IF_FEATURE_NOLOGIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_NOLOGIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_NOLOGIN)


#define ENABLE_LZMA if True 
	expansions 
		 => 0 if !def(CONFIG_LZMA)
		 => 1 if def(CONFIG_LZMA)


#define IF_NOT_FEATURE_BASH_IS_NONE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BASH_IS_NONE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BASH_IS_NONE)


#define IF_NOT_TFTP_DEBUG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TFTP_DEBUG)
		(__VA_ARGS__...) if def(CONFIG_TFTP_DEBUG)


#define head_example_usage if True 
	expansions 
		 => "$ head -n 2 /etc/passwd\n" "root:x:0:0:root:/root:/bin/bash\n" "daemon:x:1:1:daemon:/usr/sbin:/bin/sh\n" if True


#define halt_full_usage if True 
	expansions 
		 => "\n\n" "Halt the system\n" "\nOptions:" "\n	-d SEC	Delay interval" "\n	-n	Do not sync" "\n	-f	Force (don't go through init)" IF_FEATURE_WTMP( "\n	-w	Only write a wtmp record" ) if True


#define IF_NOT_FEATURE_EJECT_SCSI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EJECT_SCSI)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EJECT_SCSI)


#define ENABLE_HUSH_TICK if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_TICK)
		 => 1 if def(CONFIG_HUSH_TICK)


#define IF_NOT_HAVE_DOT_CONFIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HAVE_DOT_CONFIG)
		(__VA_ARGS__...) if def(CONFIG_HAVE_DOT_CONFIG)


#define uudecode_trivial_usage if True 
	expansions 
		 => "[-o OUTFILE] [INFILE]" if True


#define IF_FEATURE_TELNET_AUTOLOGIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TELNET_AUTOLOGIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TELNET_AUTOLOGIN)


#define ENABLE_FEATURE_LZMA_FAST if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LZMA_FAST)
		 => 1 if def(CONFIG_FEATURE_LZMA_FAST)


#define IF_NOT_FEATURE_VERBOSE_CP_MESSAGE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)


#define __attribute_warn_unused_result__ if True 
	expansions 
		 => __attribute__ ((__warn_unused_result__)) if True


#define flash_lock_full_usage if True 
	expansions 
		 => "\n\n" "Lock part or all of an MTD device. If SECTORS is -1, then all sectors\n" "will be locked, regardless of the value of OFFSET" if True


#define IF_BUSYBOX_EXEC_PATH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BUSYBOX_EXEC_PATH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BUSYBOX_EXEC_PATH)


#define IF_DEFAULT_SETFONT_DIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEFAULT_SETFONT_DIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEFAULT_SETFONT_DIR)


#define IF_NOT_FEATURE_XARGS_SUPPORT_ZERO_TERM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)


#define stat_trivial_usage if True 
	expansions 
		 => "[OPTIONS] FILE..." if True


#define pmap_full_usage if True 
	expansions 
		 => "\n\n" "Display detailed precesses' memory usage\n" "\nOptions:" "\n     -x              show details" "\n     -q              quiet" if True


#define ENABLE_FEATURE_AIX_LABEL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_AIX_LABEL)
		 => 1 if def(CONFIG_FEATURE_AIX_LABEL)


#define __LDBL_REDIR_NTH if True 
	expansions 
		(name, proto) => name proto __THROW if True


#define __U32_TYPE if True 
	expansions 
		 => unsigned int if True


#define inetd_trivial_usage if True 
	expansions 
		 => "[-fe] [-q N] [-R N] [CONFFILE]" if True


#define rpm_full_usage if True 
	expansions 
		 => "\n\n" "Manipulate RPM packages\n" "\nCommands:" "\n	-i	Install package" "\n	-qp	Query package" "\nOptions:" "\n	-i	Show information" "\n	-l	List contents" "\n	-d	List documents" "\n	-c	List config files" if True


#define ENABLE_FEATURE_TELNET_AUTOLOGIN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TELNET_AUTOLOGIN)
		 => 1 if def(CONFIG_FEATURE_TELNET_AUTOLOGIN)


#define ENABLE_FEATURE_AR_LONG_FILENAMES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_AR_LONG_FILENAMES)
		 => 1 if def(CONFIG_FEATURE_AR_LONG_FILENAMES)


#define IF_INIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INIT)


#define chat_full_usage if True 
	expansions 
		 => "\n\n" "Useful for interacting with a modem connected to stdin/stdout.\n" "A script consists of one or more \"expect-send\" pairs of strings,\n" "each pair is a pair of arguments. Example:\n" "chat '' ATZ OK ATD123456 CONNECT '' ogin: pppuser word: ppppass '~'" if True


#define reboot_trivial_usage if True 
	expansions 
		 => "[-d DELAY] [-n] [-f]" if True


#define IF_TASKSET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TASKSET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TASKSET)


#define ENABLE_FEATURE_FTPGETPUT_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)


#define __DBL_HAS_QUIET_NAN__ if True 
	expansions 
		 => 1 if True


#define BYTE_ORDER if True 
	expansions 
		 => __BYTE_ORDER if True


#define mknod_trivial_usage if True 
	expansions 
		 => "[-m MODE] " IF_SELINUX("[-Z] ") "NAME TYPE MAJOR MINOR" if True


#define IF_HUSH_FUNCTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_FUNCTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_FUNCTIONS)


#define ipaddr_full_usage if True 
	expansions 
		 => "\n\n" "ipaddr {add|delete} IFADDR dev STRING\n" "ipaddr {show|flush} [dev STRING] [scope SCOPE-ID]\n" "	[to PREFIX] [label PATTERN]\n" "	IFADDR := PREFIX | ADDR peer PREFIX\n" "	[broadcast ADDR] [anycast ADDR]\n" "	[label STRING] [scope SCOPE-ID]\n" "	SCOPE-ID := [host | link | global | NUMBER]" if True


#define tc_trivial_usage if True 
	expansions 
		 => "OBJECT CMD [dev STRING]" if True


#define ENABLE_PWD if True 
	expansions 
		 => 0 if !def(CONFIG_PWD)
		 => 1 if def(CONFIG_PWD)


#define nbdclient_trivial_usage if True 
	expansions 
		 => "HOST PORT BLOCKDEV" if True


#define IF_NOT_RESIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RESIZE)
		(__VA_ARGS__...) if def(CONFIG_RESIZE)


#define uudecode_full_usage if True 
	expansions 
		 => "\n\n" "Uudecode a file\n" "Finds outfile name in uuencoded source unless -o is given" if True


#define ENABLE_FEATURE_TFTP_PROGRESS_BAR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
		 => 1 if def(CONFIG_FEATURE_TFTP_PROGRESS_BAR)


#define ubidetach_full_usage if True 
	expansions 
		 => "\n\n" "Detach MTD device from UBI\n" "\nOptions:" "\n	-d UBI_NUM	UBI device number" if True


#define route_trivial_usage if True 
	expansions 
		 => "[{add|del|delete}]" if True


#define rpm_trivial_usage if True 
	expansions 
		 => "-i PACKAGE.rpm; rpm -qp[ildc] PACKAGE.rpm" if True


#define ENABLE_ARP if True 
	expansions 
		 => 0 if !def(CONFIG_ARP)
		 => 1 if def(CONFIG_ARP)


#define IF_FEATURE_SUID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SUID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SUID)


#define ENABLE_FEATURE_SEAMLESS_GZ if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SEAMLESS_GZ)
		 => 1 if def(CONFIG_FEATURE_SEAMLESS_GZ)


#define matchpathcon_trivial_usage if True 
	expansions 
		 => "[-n] [-N] [-f file_contexts_file] [-p prefix] [-V]" if True


#define ENABLE_UDPSVD if True 
	expansions 
		 => 0 if !def(CONFIG_UDPSVD)
		 => 1 if def(CONFIG_UDPSVD)


#define __DEC32_MAX__ if True 
	expansions 
		 => 9.999999E96DF if True


#define ENABLE_UMOUNT if True 
	expansions 
		 => 0 if !def(CONFIG_UMOUNT)
		 => 1 if def(CONFIG_UMOUNT)


#define ENABLE_CAT if True 
	expansions 
		 => 0 if !def(CONFIG_CAT)
		 => 1 if def(CONFIG_CAT)


#define IF_WALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WALL)


#define IF_NOT_XZ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_XZ)
		(__VA_ARGS__...) if def(CONFIG_XZ)


#define IF_POPMAILDIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_POPMAILDIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_POPMAILDIR)


#define IF_NOT_FBSPLASH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FBSPLASH)
		(__VA_ARGS__...) if def(CONFIG_FBSPLASH)


#define ifdown_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-a	De/configure all interfaces automatically" "\n	-i FILE	Use FILE for interface definitions" "\n	-n	Print out what would happen, but don't do it" IF_FEATURE_IFUPDOWN_MAPPING( "\n		(note: doesn't disable mappings)" "\n	-m	Don't run any mappings" ) "\n	-v	Print out what would happen before doing it" "\n	-f	Force de/configuration" if True


#define __GCC_HAVE_DWARF2_CFI_ASM if True 
	expansions 
		 => 1 if True


#define zcat_full_usage if True 
	expansions 
		 => "\n\n" "Decompress to stdout" if True


#define __U64_TYPE if True 
	expansions 
		 => unsigned long int if True


#define IF_FEATURE_INSTALL_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if True


#define IF_NOT_WHO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WHO)
		(__VA_ARGS__...) if def(CONFIG_WHO)


#define IF_NOT_VLOCK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_VLOCK)
		(__VA_ARGS__...) if def(CONFIG_VLOCK)


#define IF_FEATURE_TAR_OLDSUN_COMPATIBILITY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)


#define unxz_trivial_usage if True 
	expansions 
		 => "[-cf] [FILE]..." if True


#define time_trivial_usage if True 
	expansions 
		 => "[-v] PROG ARGS" if True


#define IF_FEATURE_FLOAT_SLEEP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FLOAT_SLEEP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FLOAT_SLEEP)


#define IF_FREERAMDISK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FREERAMDISK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FREERAMDISK)


#define unxz_full_usage if True 
	expansions 
		 => "\n\n" "Decompress FILE (or stdin)\n" "\nOptions:" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define __DEC128_MAX__ if True 
	expansions 
		 => 9.999999999999999999999999999999999E6144DL if True


#define ENABLE_FEATURE_READLINK_FOLLOW if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_READLINK_FOLLOW)
		 => 1 if def(CONFIG_FEATURE_READLINK_FOLLOW)


#define killall_trivial_usage if True 
	expansions 
		 => "[-l] [-q] [-SIG] PROCESS_NAME..." if True


#define IF_UUDECODE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UUDECODE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UUDECODE)


#define IF_NOT_WATCHDOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WATCHDOG)
		(__VA_ARGS__...) if def(CONFIG_WATCHDOG)


#define IF_VOLNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_VOLNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_VOLNAME)


#define ENABLE_CMP if True 
	expansions 
		 => 0 if !def(CONFIG_CMP)
		 => 1 if def(CONFIG_CMP)


#define ENABLE_IPRULE if True 
	expansions 
		 => 0 if !def(CONFIG_IPRULE)
		 => 1 if def(CONFIG_IPRULE)


#define ENABLE_PING if True 
	expansions 
		 => 0 if !def(CONFIG_PING)
		 => 1 if def(CONFIG_PING)


#define findfs_full_usage if True 
	expansions 
		 => "\n\n" "Find a filesystem device based on a label or UUID" if True


#define ENABLE_FEATURE_USERNAME_COMPLETION if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_USERNAME_COMPLETION)
		 => 1 if def(CONFIG_FEATURE_USERNAME_COMPLETION)


#define IF_UNICODE_PRESERVE_BROKEN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_PRESERVE_BROKEN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_PRESERVE_BROKEN)


#define IF_NOT_COMM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_COMM)
		(__VA_ARGS__...) if def(CONFIG_COMM)


#define IF_FEATURE_MDEV_EXEC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MDEV_EXEC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MDEV_EXEC)


#define ENABLE_MKFIFO if True 
	expansions 
		 => 0 if !def(CONFIG_MKFIFO)
		 => 1 if def(CONFIG_MKFIFO)


#define ENABLE_FEATURE_FIND_PAREN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_PAREN)
		 => 1 if def(CONFIG_FEATURE_FIND_PAREN)


#define uname_trivial_usage if True 
	expansions 
		 => "[-amnrspv]" if True


#define ENABLE_LZOP_COMPR_HIGH if True 
	expansions 
		 => 0 if !def(CONFIG_LZOP_COMPR_HIGH)
		 => 1 if def(CONFIG_LZOP_COMPR_HIGH)


#define IF_NOT_SV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SV)
		(__VA_ARGS__...) if def(CONFIG_SV)


#define IF_NOT_SULOGIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SULOGIN)
		(__VA_ARGS__...) if def(CONFIG_SULOGIN)


#define ENABLE_MESG if True 
	expansions 
		 => 0 if !def(CONFIG_MESG)
		 => 1 if def(CONFIG_MESG)


#define IF_NOT_LZMA if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LZMA)
		(__VA_ARGS__...) if def(CONFIG_LZMA)


#define ENABLE_FEATURE_UDHCP_RFC3397 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UDHCP_RFC3397)
		 => 1 if def(CONFIG_FEATURE_UDHCP_RFC3397)


#define IF_UNCOMPRESS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNCOMPRESS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNCOMPRESS)


#define ENABLE_FEATURE_VOLUMEID_LINUXRAID if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_LINUXRAID)


#define IF_NOT_FEATURE_MOUNT_NFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_NFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_NFS)


#define __UINTMAX_TYPE__ if True 
	expansions 
		 => long unsigned int if True


#define ENABLE_FEATURE_SHADOWPASSWDS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SHADOWPASSWDS)
		 => 1 if def(CONFIG_FEATURE_SHADOWPASSWDS)


#define IF_FEATURE_TASKSET_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TASKSET_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TASKSET_FANCY)


#define ENABLE_FEATURE_CROND_D if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CROND_D)
		 => 1 if def(CONFIG_FEATURE_CROND_D)


#define IF_NOT_LZOP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LZOP)
		(__VA_ARGS__...) if def(CONFIG_LZOP)


#define IF_NOT_IFPLUGD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IFPLUGD)
		(__VA_ARGS__...) if def(CONFIG_IFPLUGD)


#define od_trivial_usage if True 
	expansions 
		 => "[-aBbcDdeFfHhIiLlOovXx] " IF_DESKTOP("[-t TYPE] ") "[FILE]" if True


#define IF_NOT_LOSETUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOSETUP)
		(__VA_ARGS__...) if def(CONFIG_LOSETUP)


#define ENABLE_FEATURE_TAR_AUTODETECT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_AUTODETECT)
		 => 1 if def(CONFIG_FEATURE_TAR_AUTODETECT)


#define bunzip2_full_usage if True 
	expansions 
		 => "\n\n" "Decompress FILEs (or stdin)\n" "\nOptions:" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define IF_READPROFILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_READPROFILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_READPROFILE)


#define IF_NOT_LAST_SUPPORTED_WCHAR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LAST_SUPPORTED_WCHAR)
		(__VA_ARGS__...) if def(CONFIG_LAST_SUPPORTED_WCHAR)


#define __warnattr if True 
	expansions 
		(msg) => __attribute__((__warning__ (msg))) if True


#define __size_t__ if True 
	expansions 
		 if True


#define __stub_bdflush if True 
	expansions 
		 if True


#define ENABLE_GZIP if True 
	expansions 
		 => 0 if !def(CONFIG_GZIP)
		 => 1 if def(CONFIG_GZIP)


#define ENABLE_DEFAULT_SETFONT_DIR if True 
	expansions 
		 => 0 if !def(CONFIG_DEFAULT_SETFONT_DIR)
		 => 1 if def(CONFIG_DEFAULT_SETFONT_DIR)


#define arping_trivial_usage if True 
	expansions 
		 => "[-fqbDUA] [-c CNT] [-w TIMEOUT] [-I IFACE] [-s SRC_IP] DST_IP" if True


#define IF_NOT_CROSS_COMPILER_PREFIX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CROSS_COMPILER_PREFIX)
		(__VA_ARGS__...) if def(CONFIG_CROSS_COMPILER_PREFIX)


#define IF_NOT_LS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LS)
		(__VA_ARGS__...) if def(CONFIG_LS)


#define IF_NOT_DEFAULT_DEPMOD_FILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEFAULT_DEPMOD_FILE)
		(__VA_ARGS__...) if def(CONFIG_DEFAULT_DEPMOD_FILE)


#define ENABLE_LONG_OPTS if True 
	expansions 
		 => 0 if !def(CONFIG_LONG_OPTS)
		 => 1 if def(CONFIG_LONG_OPTS)


#define IF_NOT_DMESG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DMESG)
		(__VA_ARGS__...) if def(CONFIG_DMESG)


#define ENABLE_HOSTID if True 
	expansions 
		 => 0 if !def(CONFIG_HOSTID)
		 => 1 if def(CONFIG_HOSTID)


#define __STDC_IEC_559_COMPLEX__ if True 
	expansions 
		 => 1 if True


#define ENABLE_LENGTH if True 
	expansions 
		 => 0 if !def(CONFIG_LENGTH)
		 => 1 if def(CONFIG_LENGTH)


#define IF_FEATURE_PREFER_IPV4_ADDRESS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)


#define IF_NOT_FEATURE_TOP_DECIMALS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TOP_DECIMALS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TOP_DECIMALS)


#define _IOS_OUTPUT if True 
	expansions 
		 => 2 if True


#define nandwrite_trivial_usage if True 
	expansions 
		 => "[-p] [-s ADDR] MTD_DEVICE [FILE]" if True


#define ENABLE_MATCHPATHCON if True 
	expansions 
		 => 0 if !def(CONFIG_MATCHPATHCON)
		 => 1 if def(CONFIG_MATCHPATHCON)


#define IF_NOT_WC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WC)
		(__VA_ARGS__...) if def(CONFIG_WC)


#define IF_FREE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FREE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FREE)


#define loadkmap_example_usage if True 
	expansions 
		 => "$ loadkmap < /etc/i18n/lang-keymap\n" if True


#define IF_NOT_HUSH_BASH_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_BASH_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_HUSH_BASH_COMPAT)


#define __DEC128_MAX_EXP__ if True 
	expansions 
		 => 6145 if True


#define __need_mbstate_t if False 
	expansions 
		 if False


#define IF_VCONFIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_VCONFIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_VCONFIG)


#define __WAIT_STATUS_DEFN if True 
	expansions 
		 => int * if True


#define IF_NOT_PWD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PWD)
		(__VA_ARGS__...) if def(CONFIG_PWD)


#define eject_trivial_usage if True 
	expansions 
		 => "[-t] [-T] [DEVICE]" if True


#define ENABLE_VERBOSE_RESOLUTION_ERRORS if True 
	expansions 
		 => 0 if !def(CONFIG_VERBOSE_RESOLUTION_ERRORS)
		 => 1 if def(CONFIG_VERBOSE_RESOLUTION_ERRORS)


#define ENABLE_FEATURE_VOLUMEID_EXT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_EXT)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_EXT)


#define IF_NOT_FEATURE_EDITING_FANCY_PROMPT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING_FANCY_PROMPT)


#define IF_FEATURE_WGET_STATUSBAR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_WGET_STATUSBAR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_WGET_STATUSBAR)


#define fbset_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [MODE]" if True


#define IF_NOT_LSUSB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LSUSB)
		(__VA_ARGS__...) if def(CONFIG_LSUSB)


#define IF_CPIO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CPIO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CPIO)


#define IF_FEATURE_SPLIT_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SPLIT_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SPLIT_FANCY)


#define deallocvt_trivial_usage if True 
	expansions 
		 => "[N]" if True


#define ENABLE_UDHCPC_SLACK_FOR_BUGGY_SERVERS if True 
	expansions 
		 => 0 if !def(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
		 => 1 if def(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)


#define IF_NOT_FEATURE_IP_ADDRESS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_ADDRESS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_ADDRESS)


#define scriptreplay_trivial_usage if True 
	expansions 
		 => "timingfile [typescript [divisor]]" if True


#define IF_NOT_HDPARM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HDPARM)
		(__VA_ARGS__...) if def(CONFIG_HDPARM)


#define pidof_trivial_usage if True 
	expansions 
		 => "[NAME]..." if (!def(CONFIG_FEATURE_PIDOF_SINGLE)&!def(CONFIG_FEATURE_PIDOF_OMIT))
		 => "[OPTIONS] [NAME]..." if (def(CONFIG_FEATURE_PIDOF_SINGLE)|def(CONFIG_FEATURE_PIDOF_OMIT))


#define IF_NOT_FEATURE_SH_STANDALONE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SH_STANDALONE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SH_STANDALONE)


#define IF_FEATURE_LOADFONT_RAW if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LOADFONT_RAW)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LOADFONT_RAW)


#define eject_full_usage if True 
	expansions 
		 => "\n\n" "Eject DEVICE or default /dev/cdrom\n" "\nOptions:" IF_FEATURE_EJECT_SCSI( "\n	-s	SCSI device" ) "\n	-t	Close tray" "\n	-T	Open/close tray (toggle)" if True


#define __USE_POSIX199309 if True 
	expansions 
		 => 1 if True


#define IF_NOT_KILLALL5 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_KILLALL5)
		(__VA_ARGS__...) if def(CONFIG_KILLALL5)


#define ENABLE_SHOWKEY if True 
	expansions 
		 => 0 if !def(CONFIG_SHOWKEY)
		 => 1 if def(CONFIG_SHOWKEY)


#define __STDC_IEC_559__ if True 
	expansions 
		 => 1 if True


#define echo_example_usage if True 
	expansions 
		 => "$ echo \"Erik is cool\"\n" "Erik is cool\n" IF_FEATURE_FANCY_ECHO("$ echo -e \"Erik\\nis\\ncool\"\n" "Erik\n" "is\n" "cool\n" "$ echo \"Erik\\nis\\ncool\"\n" "Erik\\nis\\ncool\n") if True


#define IF_FEATURE_UNEXPAND_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)


#define IF_FEATURE_RUN_PARTS_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)


#define IF_NOT_FEATURE_UTMP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UTMP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UTMP)


#define _IOFBF if True 
	expansions 
		 => 0 if True


#define _IO_HAVE_SYS_WAIT if True 
	expansions 
		 => _G_HAVE_SYS_WAIT if True


#define _IO_ftrylockfile if True 
	expansions 
		(_fp) if True


#define dhcprelay_full_usage if True 
	expansions 
		 => "\n\n" "Relay DHCP requests between clients and server" if True


#define loadfont_trivial_usage if True 
	expansions 
		 => "< font" if True


#define __DEC64_EPSILON__ if True 
	expansions 
		 => 1E-15DD if True


#define IF_NOT_PMAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PMAP)
		(__VA_ARGS__...) if def(CONFIG_PMAP)


#define patch_full_usage if True 
	expansions 
		 => "\n\n" IF_LONG_OPTS( "	-p,--strip N		Strip N leading components from file names" "\n	-i,--input DIFF		Read DIFF instead of stdin" "\n	-R,--reverse		Reverse patch" "\n	-N,--forward		Ignore already applied patches" "\n	--dry-run		Don't actually change files" "\n	-E,--remove-empty-files	Remove output files if they become empty" ) IF_NOT_LONG_OPTS( "	-p N	Strip N leading components from file names" "\n	-i DIFF	Read DIFF instead of stdin" "\n	-R	Reverse patch" "\n	-N	Ignore already applied patches" "\n	-E	Remove output files if they become empty" ) if True


#define IF_ASH_BASH_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_BASH_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_BASH_COMPAT)


#define IF_NOT_FEATURE_SYSLOGD_READ_BUFFER_SIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)


#define ENABLE_ASH if True 
	expansions 
		 => 0 if !def(CONFIG_ASH)
		 => 1 if def(CONFIG_ASH)


#define __END_NAMESPACE_STD if True 
	expansions 
		 if True


#define ar_trivial_usage if True 
	expansions 
		 => "[-o] [-v] [-p] [-t] [-x] ARCHIVE FILES" if True


#define IF_NOT_IPCS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPCS)
		(__VA_ARGS__...) if def(CONFIG_IPCS)


#define ENABLE_IFUPDOWN_IFSTATE_PATH if True 
	expansions 
		 => 0 if !def(CONFIG_IFUPDOWN_IFSTATE_PATH)
		 => 1 if def(CONFIG_IFUPDOWN_IFSTATE_PATH)


#define ENABLE_FEATURE_CPIO_O if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CPIO_O)
		 => 1 if def(CONFIG_FEATURE_CPIO_O)


#define IF_NOT_DIFF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DIFF)
		(__VA_ARGS__...) if def(CONFIG_DIFF)


#define __W_EXITCODE if True 
	expansions 
		(ret, sig) => ((ret) << 8 | (sig)) if True


#define ENABLE_FEATURE_SYSLOGD_READ_BUFFER_SIZE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
		 => 1 if def(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)


#define netstat_trivial_usage if True 
	expansions 
		 => "[-"IF_ROUTE("r")"al] [-tuwx] [-en"IF_FEATURE_NETSTAT_WIDE("W")IF_FEATURE_NETSTAT_PRG("p")"]" if True


#define bash_full_usage if True 
	expansions 
		 => "" if True


#define ENABLE_FEATURE_TEST_64 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TEST_64)
		 => 1 if def(CONFIG_FEATURE_TEST_64)


#define IF_NOT_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)


#define ENABLE_FEATURE_XARGS_SUPPORT_ZERO_TERM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
		 => 1 if def(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)


#define syslogd_example_usage if True 
	expansions 
		 => "$ syslogd -R masterlog:514\n" "$ syslogd -R 192.168.1.1:601\n" if True


#define IF_NOT_UNICODE_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_SUPPORT)


#define ENABLE_FEATURE_OSF_LABEL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_OSF_LABEL)
		 => 1 if def(CONFIG_FEATURE_OSF_LABEL)


#define acpid_full_usage if True 
	expansions 
		 => "\n\n" "Listen to ACPI events and spawn specific helpers on event arrival\n" "\nOptions:" "\n	-c DIR	Config directory [/etc/acpi]" "\n	-d	Don't daemonize, (implies -f)" "\n	-e FILE	/proc event file [/proc/acpi/event]" "\n	-f	Run in foreground" "\n	-l FILE	Log file [/var/log/acpid.log]" "\n	-p FILE	Pid file [/var/run/acpid.pid]" "\n	-a FILE	Action file [/etc/acpid.conf]" "\n	-M FILE Map file [/etc/acpi.map]" IF_FEATURE_ACPID_COMPAT( "\n\nAccept and ignore compatibility options -g -m -s -S -v" ) if True


#define __unix if True 
	expansions 
		 => 1 if True


#define kill_trivial_usage if True 
	expansions 
		 => "[-l] [-SIG] PID..." if True


#define IF_LENGTH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LENGTH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LENGTH)


#define ENABLE_WHO if True 
	expansions 
		 => 0 if !def(CONFIG_WHO)
		 => 1 if def(CONFIG_WHO)


#define watchdog_full_usage if True 
	expansions 
		 => "\n\n" "Periodically write to watchdog device DEV\n" "\nOptions:" "\n	-T N	Reboot after N seconds if not reset (default 60)" "\n	-t N	Reset every N seconds (default 30)" "\n	-F	Run in foreground" "\n" "\nUse 500ms to specify period in milliseconds" if True


#define IF_NOT_FEATURE_IP_LINK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_LINK)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_LINK)


#define IF_ARPING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ARPING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ARPING)


#define ENABLE_SULOGIN if True 
	expansions 
		 => 0 if !def(CONFIG_SULOGIN)
		 => 1 if def(CONFIG_SULOGIN)


#define IF_FEATURE_VOLUMEID_HFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_HFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_HFS)


#define ENABLE_FEATURE_VOLUMEID_REISERFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_REISERFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_REISERFS)


#define setarch_trivial_usage if True 
	expansions 
		 => "personality PROG ARGS" if True


#define IF_NOT_DC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DC)
		(__VA_ARGS__...) if def(CONFIG_DC)


#define ENABLE_FEATURE_LESS_MAXLINES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_MAXLINES)
		 => 1 if def(CONFIG_FEATURE_LESS_MAXLINES)


#define ENABLE_FEATURE_HDPARM_HDIO_DRIVE_RESET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
		 => 1 if def(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)


#define IF_NOT_FEATURE_CHECK_UNICODE_IN_ENV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)


#define IF_NOT_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)


#define IF_NOT_FEATURE_OSF_LABEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_OSF_LABEL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_OSF_LABEL)


#define IF_NOT_CHVT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHVT)
		(__VA_ARGS__...) if def(CONFIG_CHVT)


#define IF_FEATURE_VOLUMEID_UDF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_UDF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_UDF)


#define __need_wint_t if False 
	expansions 



#define IF_NOT_PRINTENV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PRINTENV)
		(__VA_ARGS__...) if def(CONFIG_PRINTENV)


#define CONFIG_FEATURE_WGET_LONG_OPTIONS if False 
	expansions 



#define ENABLE_FEATURE_VI_8BIT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_8BIT)
		 => 1 if def(CONFIG_FEATURE_VI_8BIT)


#define pipe_progress_full_usage if True 
	expansions 
		 => "" if True


#define IF_NC_EXTRA if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NC_EXTRA)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NC_EXTRA)


#define IF_FEATURE_CHCON_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHCON_LONG_OPTIONS)


#define realpath_trivial_usage if True 
	expansions 
		 => "FILE..." if True


#define tftp_trivial_usage if True 
	expansions 
		 => "[OPTIONS] HOST [PORT]" if True


#define IF_HOSTID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HOSTID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HOSTID)


#define bbconfig_full_usage if True 
	expansions 
		 => "\n\n" "Print the config file used by busybox build" if True


#define IF_FEATURE_LAST_SMALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LAST_SMALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LAST_SMALL)


#define IF_FEATURE_TRACEROUTE_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TRACEROUTE_VERBOSE)


#define _IO_off64_t if True 
	expansions 
		 => _G_off64_t if True


#define IF_NOT_FEATURE_LS_FILETYPES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_FILETYPES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_FILETYPES)


#define __u_intN_t if True 
	expansions 
		(N, MODE) => typedef unsigned int u_int ## N ## _t __attribute__ ((__mode__ (MODE))) if True


#define lzop_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-1..9	Compression level" "\n	-d	Decompress" "\n	-c	Write to stdout" "\n	-f	Force" "\n	-v	Verbose" "\n	-F	Don't store or verify checksum" "\n	-C	Also write checksum of compressed block" if True


#define vconfig_full_usage if True 
	expansions 
		 => "\n\n" "Create and remove virtual ethernet devices\n" "\nOptions:" "\n	add		[interface-name] [vlan_id]" "\n	rem		[vlan-name]" "\n	set_flag	[interface-name] [flag-num] [0 | 1]" "\n	set_egress_map	[vlan-name] [skb_priority] [vlan_qos]" "\n	set_ingress_map	[vlan-name] [skb_priority] [vlan_qos]" "\n	set_name_type	[name-type]" if True


#define ENABLE_FEATURE_PS_ADDITIONAL_COLUMNS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
		 => 1 if def(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)


#define IF_RMMOD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RMMOD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RMMOD)


#define IF_FEATURE_VOLUMEID_SYSV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_SYSV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_SYSV)


#define IF_NOT_MATCHPATHCON if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MATCHPATHCON)
		(__VA_ARGS__...) if def(CONFIG_MATCHPATHCON)


#define _WCHAR_T if True 
	expansions 
		 if True


#define ENABLE_FEATURE_VOLUMEID_ISO9660 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_ISO9660)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_ISO9660)


#define ENABLE_FDISK if True 
	expansions 
		 => 0 if !def(CONFIG_FDISK)
		 => 1 if def(CONFIG_FDISK)


#define IF_NOT_FEATURE_CHAT_VAR_ABORT_LEN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)


#define _G_FSTAT64 if True 
	expansions 
		(fd, buf) => __fxstat64 (_STAT_VER, fd, buf) if True


#define IF_IFPLUGD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IFPLUGD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IFPLUGD)


#define IF_FEATURE_BRCTL_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BRCTL_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BRCTL_FANCY)


#define IF_NOT_TRACEROUTE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TRACEROUTE)
		(__VA_ARGS__...) if def(CONFIG_TRACEROUTE)


#define IF_FEATURE_DATE_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DATE_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DATE_COMPAT)


#define IF_FEATURE_STAT_FORMAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_STAT_FORMAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_STAT_FORMAT)


#define IF_NOT_FEATURE_MODUTILS_ALIAS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MODUTILS_ALIAS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MODUTILS_ALIAS)


#define kbd_mode_trivial_usage if True 
	expansions 
		 => "[-a|k|s|u] [-C TTY]" if True


#define ENABLE_USE_BB_CRYPT_SHA if True 
	expansions 
		 => 0 if !def(CONFIG_USE_BB_CRYPT_SHA)
		 => 1 if def(CONFIG_USE_BB_CRYPT_SHA)


#define __LDBL_MANT_DIG__ if True 
	expansions 
		 => 64 if True


#define __CHAR32_TYPE__ if True 
	expansions 
		 => unsigned int if True


#define ENABLE_LSMOD if True 
	expansions 
		 => 0 if !def(CONFIG_LSMOD)
		 => 1 if def(CONFIG_LSMOD)


#define ENABLE_FEATURE_IFCONFIG_HW if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFCONFIG_HW)
		 => 1 if def(CONFIG_FEATURE_IFCONFIG_HW)


#define swapoff_trivial_usage if True 
	expansions 
		 => "[-a] [DEVICE]" if True


#define runsvdir_full_usage if True 
	expansions 
		 => "\n\n" "Start a runsv process for each subdirectory. If it exits, restart it.\n" "\n	-P		Put each runsv in a new session" "\n	-s SCRIPT	Run SCRIPT <signo> after signal is processed" if True


#define sha256sum_trivial_usage if True 
	expansions 
		 => "[FILE]..." IF_FEATURE_MD5_SHA1_SUM_CHECK("\n   or: sha256sum -c [-sw] [FILE]") if True


#define getopt_trivial_usage if True 
	expansions 
		 => "[OPTIONS]" if True


#define IF_IPADDR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPADDR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPADDR)


#define ENABLE_ASH_JOB_CONTROL if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_JOB_CONTROL)
		 => 1 if def(CONFIG_ASH_JOB_CONTROL)


#define lzcat_full_usage if True 
	expansions 
		 => "\n\n" "Decompress to stdout" if True


#define IF_INSTALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL)


#define IF_FEATURE_HTTPD_USE_SENDFILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_USE_SENDFILE)


#define passwd_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [USER]" if True


#define login_full_usage if True 
	expansions 
		 => "\n\n" "Begin a new session on the system\n" "\nOptions:" "\n	-f	Don't authenticate (user already authenticated)" "\n	-h	Name of the remote host" "\n	-p	Preserve environment" if True


#define fuser_full_usage if True 
	expansions 
		 => "\n\n" "Find processes which use FILEs or PORTs\n" "\nOptions:" "\n	-m	Find processes which use same fs as FILEs" "\n	-4,-6	Search only IPv4/IPv6 space" "\n	-s	Don't display PIDs" "\n	-k	Kill found processes" "\n	-SIGNAL	Signal to send (default: KILL)" if True


#define modinfo_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-a		Shortcut for '-F author'" "\n	-d		Shortcut for '-F description'" "\n	-l		Shortcut for '-F license'" "\n	-p		Shortcut for '-F parm'" "\n	-F keyword	Keyword to look for" "\n	-0		Separate output with NULs" if True


#define dd_full_usage if True 
	expansions 
		 => "\n\n" "Copy a file with converting and formatting\n" "\nOptions:" "\n	if=FILE		Read from FILE instead of stdin" "\n	of=FILE		Write to FILE instead of stdout" "\n	bs=N		Read and write N bytes at a time" IF_FEATURE_DD_IBS_OBS( "\n	ibs=N		Read N bytes at a time" ) IF_FEATURE_DD_IBS_OBS( "\n	obs=N		Write N bytes at a time" ) "\n	count=N		Copy only N input blocks" "\n	skip=N		Skip N input blocks" "\n	seek=N		Skip N output blocks" IF_FEATURE_DD_IBS_OBS( "\n	conv=notrunc	Don't truncate output file" "\n	conv=noerror	Continue after read errors" "\n	conv=sync	Pad blocks with zeros" "\n	conv=fsync	Physically write data out before finishing" ) "\n" "\nNumbers may be suffixed by c (x1), w (x2), b (x512), kD (x1000), k (x1024)," "\nMD (x1000000), M (x1048576), GD (x1000000000) or G (x1073741824)" if True


#define __FSFILCNT_T_TYPE if True 
	expansions 
		 => __ULONGWORD_TYPE if True


#define IF_FEATURE_CLEAN_UP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CLEAN_UP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CLEAN_UP)


#define IF_SMEMCAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SMEMCAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SMEMCAP)


#define IF_FEATURE_EXPAND_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)


#define ENABLE_INSTALL if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL)
		 => 1 if def(CONFIG_INSTALL)


#define __DBL_HAS_DENORM__ if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_VOLUMEID_LUKS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_LUKS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_LUKS)


#define IF_HUSH_HELP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_HELP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_HELP)


#define dumpkmap_full_usage if True 
	expansions 
		 => "\n\n" "Print a binary keyboard translation table to stdout" if True


#define dumpkmap_example_usage if True 
	expansions 
		 => "$ dumpkmap > keymap\n" if True


#define ENABLE_MV if True 
	expansions 
		 => 0 if !def(CONFIG_MV)
		 => 1 if def(CONFIG_MV)


#define IF_FEATURE_UDHCPC_ARPING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UDHCPC_ARPING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UDHCPC_ARPING)


#define IF_CHAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHAT)


#define ENABLE_ETHER_WAKE if True 
	expansions 
		 => 0 if !def(CONFIG_ETHER_WAKE)
		 => 1 if def(CONFIG_ETHER_WAKE)


#define IF_GETSEBOOL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GETSEBOOL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GETSEBOOL)


#define ENABLE_FEATURE_UDHCPC_ARPING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UDHCPC_ARPING)
		 => 1 if def(CONFIG_FEATURE_UDHCPC_ARPING)


#define rm_trivial_usage if True 
	expansions 
		 => "[-irf] FILE..." if True


#define IF_NOT_FEATURE_MOUNT_LOOP_CREATE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_LOOP_CREATE)


#define IF_NOT_FEATURE_FANCY_HEAD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FANCY_HEAD)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FANCY_HEAD)


#define ENABLE_START_STOP_DAEMON if True 
	expansions 
		 => 0 if !def(CONFIG_START_STOP_DAEMON)
		 => 1 if def(CONFIG_START_STOP_DAEMON)


#define IF_NOT_MODPROBE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MODPROBE)
		(__VA_ARGS__...) if def(CONFIG_MODPROBE)


#define rm_full_usage if True 
	expansions 
		 => "\n\n" "Remove (unlink) FILEs\n" "\nOptions:" "\n	-i	Always prompt before removing" "\n	-f	Never prompt" "\n	-R,-r	Recurse" if True


#define htobe16 if True 
	expansions 
		(x) => __bswap_16 (x) if True


#define IF_LPQ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LPQ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LPQ)


#define IF_FEATURE_TR_CLASSES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TR_CLASSES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TR_CLASSES)


#define cksum_trivial_usage if True 
	expansions 
		 => "FILES..." if True


#define mknod_full_usage if True 
	expansions 
		 => "\n\n" "Create a special file (block, character, or pipe)\n" "\nOptions:" "\n	-m MODE	Creation mode (default a=rw)" IF_SELINUX( "\n	-Z	Set security context" ) "\nTYPE:" "\n	b	Block device" "\n	c or u	Character device" "\n	p	Named pipe (MAJOR and MINOR are ignored)" if True


#define BUFSIZ if True 
	expansions 
		 => _IO_BUFSIZ if True


#define IF_NOT_LENGTH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LENGTH)
		(__VA_ARGS__...) if def(CONFIG_LENGTH)


#define __BIGGEST_ALIGNMENT__ if True 
	expansions 
		 => 16 if True


#define nohup_trivial_usage if True 
	expansions 
		 => "PROG ARGS" if True


#define ENABLE_RDEV if True 
	expansions 
		 => 0 if !def(CONFIG_RDEV)
		 => 1 if def(CONFIG_RDEV)


#define IF_NOT_ENVUIDGID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ENVUIDGID)
		(__VA_ARGS__...) if def(CONFIG_ENVUIDGID)


#define split_example_usage if True 
	expansions 
		 => "$ split TODO foo\n" "$ cat TODO | split -a 2 -l 2 TODO_\n" if True


#define ENABLE_FEATURE_HTTPD_ERROR_PAGES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
		 => 1 if def(CONFIG_FEATURE_HTTPD_ERROR_PAGES)


#define IF_PING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PING)


#define __bswap_constant_16 if True 
	expansions 
		(x) => ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)) if True


#define IF_NOT_RDATE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RDATE)
		(__VA_ARGS__...) if def(CONFIG_RDATE)


#define IF_NOT_OPENVT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_OPENVT)
		(__VA_ARGS__...) if def(CONFIG_OPENVT)


#define rev_full_usage if True 
	expansions 
		 => "\n\n" "Reverse lines of FILE" if True


#define IF_NOT_FEATURE_WGET_TIMEOUT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_WGET_TIMEOUT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_WGET_TIMEOUT)


#define IF_NOT_SELINUX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SELINUX)
		(__VA_ARGS__...) if def(CONFIG_SELINUX)


#define IF_NOT_FEATURE_VOLUMEID_SYSV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_SYSV)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_SYSV)


#define IF_NOT_LSMOD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LSMOD)
		(__VA_ARGS__...) if def(CONFIG_LSMOD)


#define ENABLE_FEATURE_IPV6 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IPV6)
		 => 1 if def(CONFIG_FEATURE_IPV6)


#define IF_FEATURE_INSMOD_KSYMOOPS_SYMBOLS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)


#define IF_FEATURE_CROND_CALL_SENDMAIL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CROND_CALL_SENDMAIL)


#define __USE_REENTRANT if False 
	expansions 



#define IF_NOT_GETENFORCE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GETENFORCE)
		(__VA_ARGS__...) if def(CONFIG_GETENFORCE)


#define setkeycodes_example_usage if True 
	expansions 
		 => "$ setkeycodes e030 127\n" if True


#define IF_MATCHPATHCON if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MATCHPATHCON)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MATCHPATHCON)


#define ENABLE_MAKEDEVS if True 
	expansions 
		 => 0 if !def(CONFIG_MAKEDEVS)
		 => 1 if def(CONFIG_MAKEDEVS)


#define IF_NOT_TAR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TAR)
		(__VA_ARGS__...) if def(CONFIG_TAR)


#define IF_FEATURE_SUID_CONFIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SUID_CONFIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SUID_CONFIG)


#define IF_NOT_FEATURE_EDITING_VI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING_VI)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING_VI)


#define basename_full_usage if True 
	expansions 
		 => "\n\n" "Strip directory path and .SUFFIX from FILE\n" if True


#define __amd64__ if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)


#define IF_NOT_ROUTE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ROUTE)
		(__VA_ARGS__...) if def(CONFIG_ROUTE)


#define chpst_full_usage if True 
	expansions 
		 => "\n\n" "Change the process state, run PROG\n" "\nOptions:" "\n	-u USER[:GRP]	Set uid and gid" "\n	-U USER[:GRP]	Set $UID and $GID in environment" "\n	-e DIR		Set environment variables as specified by files" "\n			in DIR: file=1st_line_of_file" "\n	-/ DIR		Chroot to DIR" "\n	-n NICE		Add NICE to nice value" "\n	-m BYTES	Same as -d BYTES -s BYTES -l BYTES" "\n	-d BYTES	Limit data segment" "\n	-o N		Limit number of open files per process" "\n	-p N		Limit number of processes per uid" "\n	-f BYTES	Limit output file sizes" "\n	-c BYTES	Limit core file size" "\n	-v		Verbose" "\n	-P		Create new process group" "\n	-0		Close stdin" "\n	-1		Close stdout" "\n	-2		Close stderr" if True


#define ENABLE_FBSET if True 
	expansions 
		 => 0 if !def(CONFIG_FBSET)
		 => 1 if def(CONFIG_FBSET)


#define IF_FIND if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if True


#define telnet_trivial_usage if True 
	expansions 
		 => "HOST [PORT]" if !def(CONFIG_FEATURE_TELNET_AUTOLOGIN)
		 => "[-a] [-l USER] HOST [PORT]" if def(CONFIG_FEATURE_TELNET_AUTOLOGIN)


#define ENABLE_PASSWD if True 
	expansions 
		 => 0 if !def(CONFIG_PASSWD)
		 => 1 if def(CONFIG_PASSWD)


#define ENABLE_FEATURE_MDEV_LOAD_FIRMWARE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
		 => 1 if def(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)


#define __DBL_MIN_10_EXP__ if True 
	expansions 
		 => (-307) if True


#define man_full_usage if True 
	expansions 
		 => "\n\n" "Format and display manual page\n" "\nOptions:" "\n	-a      Display all pages" "\n	-w	Show page locations" if True


#define __LDBL_HAS_QUIET_NAN__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_ASH_ALIAS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_ALIAS)
		(__VA_ARGS__...) if def(CONFIG_ASH_ALIAS)


#define IF_NOT_HTTPD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HTTPD)
		(__VA_ARGS__...) if def(CONFIG_HTTPD)


#define IF_NOT_FEATURE_FIND_LINKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_LINKS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_LINKS)


#define IF_FEATURE_HDPARM_HDIO_GETSET_DMA if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)


#define ENABLE_SHA256SUM if True 
	expansions 
		 => 0 if !def(CONFIG_SHA256SUM)
		 => 1 if def(CONFIG_SHA256SUM)


#define IF_FEATURE_FANCY_TAIL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FANCY_TAIL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FANCY_TAIL)


#define IF_NOT_TRACEROUTE6 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TRACEROUTE6)
		(__VA_ARGS__...) if def(CONFIG_TRACEROUTE6)


#define _IO_peekc if True 
	expansions 
		(_fp) => _IO_peekc_unlocked (_fp) if True


#define IF_NOT_FEATURE_MODPROBE_BLACKLIST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MODPROBE_BLACKLIST)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MODPROBE_BLACKLIST)


#define __DEC32_MAX_EXP__ if True 
	expansions 
		 => 97 if True


#define IF_NOT_FEATURE_CHAT_NOFAIL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_NOFAIL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_NOFAIL)


#define ENABLE_INSTALL_APPLET_SCRIPT_WRAPPERS if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
		 => 1 if def(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)


#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 if True 
	expansions 
		 => 1 if True


#define logger_example_usage if True 
	expansions 
		 => "$ logger \"hello\"\n" if True


#define __CONCAT if True 
	expansions 
		(x, y) => x ## y if True


#define IF_NOT_ASH_MAIL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_MAIL)
		(__VA_ARGS__...) if def(CONFIG_ASH_MAIL)


#define ENABLE_RENICE if True 
	expansions 
		 => 0 if !def(CONFIG_RENICE)
		 => 1 if def(CONFIG_RENICE)


#define IF_NOT_FEATURE_FIND_GROUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_GROUP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_GROUP)


#define FOPEN_MAX if True 
	expansions 
		 => 16 if True


#define IF_NOT_TEST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TEST)
		(__VA_ARGS__...) if def(CONFIG_TEST)


#define IF_RPM2CPIO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RPM2CPIO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RPM2CPIO)


#define nmeter_example_usage if True 
	expansions 
		 => "nmeter '%250d%t %20c int %i bio %b mem %m forks%p'" if True


#define __flexarr if True 
	expansions 
		 => [] if True


#define IF_NOT_IPTUNNEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPTUNNEL)
		(__VA_ARGS__...) if def(CONFIG_IPTUNNEL)


#define IF_NOT_FEATURE_KILL_REMOVED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_KILL_REMOVED)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_KILL_REMOVED)


#define ENABLE_FLASHCP if True 
	expansions 
		 => 0 if !def(CONFIG_FLASHCP)
		 => 1 if def(CONFIG_FLASHCP)


#define IF_UNIX2DOS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNIX2DOS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNIX2DOS)


#define IF_FEATURE_MAKEDEVS_LEAF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MAKEDEVS_LEAF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MAKEDEVS_LEAF)


#define IF_FEATURE_TAR_FROM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_FROM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_FROM)


#define switch_root_trivial_usage if True 
	expansions 
		 => "[-c /dev/console] NEW_ROOT NEW_INIT [ARGS]" if True


#define getsebool_full_usage if True 
	expansions 
		 => "\n\n" "	-a	Show all selinux booleans" if True


#define IF_PASSWD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PASSWD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PASSWD)


#define __FILE_defined if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_IP_TUNNEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_TUNNEL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_TUNNEL)


#define pscan_trivial_usage if True 
	expansions 
		 => "[-cb] [-p MIN_PORT] [-P MAX_PORT] [-t TIMEOUT] [-T MIN_RTT] HOST" if True


#define IF_NOT_IFUPDOWN_UDHCPC_CMD_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)


#define tty_trivial_usage if True 
	expansions 
		 => "" if True


#define taskset_full_usage if True 
	expansions 
		 => "\n\n" "Set or get CPU affinity\n" "\nOptions:" "\n	-p	Operate on an existing PID" if True


#define __FD_CLR if True 
	expansions 
		(d, set) => (__FDS_BITS (set)[__FDELT (d)] &= ~__FDMASK (d)) if True


#define getsebool_trivial_usage if True 
	expansions 
		 => "-a or getsebool boolean..." if True


#define __SSE__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_LOGIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOGIN)
		(__VA_ARGS__...) if def(CONFIG_LOGIN)


#define __USE_ANSI if True 
	expansions 
		 => 1 if True


#define less_full_usage if True 
	expansions 
		 => "\n\n" "View FILE (or stdin) one screenful at a time\n" "\nOptions:" "\n	-E	Quit once the end of a file is reached" "\n	-M,-m	Display status line with line numbers" "\n		and percentage through the file" "\n	-N	Prefix line number to each line" "\n	-I	Ignore case in all searches" "\n	-~	Suppress ~s displayed past the end of the file" if True


#define ENABLE_FEATURE_TFTP_BLOCKSIZE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TFTP_BLOCKSIZE)
		 => 1 if def(CONFIG_FEATURE_TFTP_BLOCKSIZE)


#define chcon_full_usage if True 
	expansions 
		 => "\n\n" "Change the security context of each FILE to CONTEXT\n" IF_FEATURE_CHCON_LONG_OPTIONS( "\n	-v,--verbose		Verbose" "\n	-c,--changes		Report changes made" "\n	-h,--no-dereference	Affect symlinks instead of their targets" "\n	-f,--silent,--quiet	Suppress most error messages" "\n	--reference=RFILE	Use RFILE's group instead of using a CONTEXT value" "\n	-u,--user=USER		Set user/role/type/range in the target" "\n	-r,--role=ROLE		security context" "\n	-t,--type=TYPE" "\n	-l,--range=RANGE" "\n	-R,--recursive		Recurse" ) IF_NOT_FEATURE_CHCON_LONG_OPTIONS( "\n	-v	Verbose" "\n	-c	Report changes made" "\n	-h	Affect symlinks instead of their targets" "\n	-f	Suppress most error messages" "\n	-u USER	Set user/role/type/range in the target security context" "\n	-r ROLE" "\n	-t TYPE" "\n	-l RNG" "\n	-R	Recurse" ) if True


#define ENABLE_FEATURE_FDISK_ADVANCED if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FDISK_ADVANCED)
		 => 1 if def(CONFIG_FEATURE_FDISK_ADVANCED)


#define ENABLE_FEATURE_HDPARM_HDIO_TRISTATE_HWIF if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
		 => 1 if def(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)


#define IF_NOT_USE_BB_CRYPT_SHA if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_USE_BB_CRYPT_SHA)
		(__VA_ARGS__...) if def(CONFIG_USE_BB_CRYPT_SHA)


#define ENABLE_FEATURE_CHOWN_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)


#define IF_NOT_FEATURE_SEAMLESS_Z if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SEAMLESS_Z)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SEAMLESS_Z)


#define IF_NOT_MAN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MAN)
		(__VA_ARGS__...) if def(CONFIG_MAN)


#define ENABLE_FEATURE_DEL_USER_FROM_GROUP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
		 => 1 if def(CONFIG_FEATURE_DEL_USER_FROM_GROUP)


#define _G_off_t if True 
	expansions 
		 => __off_t if True


#define cttyhack_full_usage if True 
	expansions 
		 => "\n\n" "Give PROG a controlling tty if possible." "\nExample for /etc/inittab (for busybox init):" "\n	::respawn:/bin/cttyhack /bin/sh" "\nGiving controlling tty to shell running with PID 1:" "\n	$ exec cttyhack sh" "\nStarting interactive shell from boot shell script:" "\n	setsid cttyhack sh" if True


#define IF_NOT_FEATURE_SUID_CONFIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SUID_CONFIG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SUID_CONFIG)


#define LITTLE_ENDIAN if True 
	expansions 
		 => __LITTLE_ENDIAN if True


#define __long_double_t if True 
	expansions 
		 => long double if True


#define ENABLE_FEATURE_FIND_USER if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_USER)
		 => 1 if def(CONFIG_FEATURE_FIND_USER)


#define ENABLE_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)


#define md5sum_example_usage if True 
	expansions 
		 => "$ md5sum < busybox\n" "6fd11e98b98a58f64ff3398d7b324003\n" "$ md5sum busybox\n" "6fd11e98b98a58f64ff3398d7b324003  busybox\n" "$ md5sum -c -\n" "6fd11e98b98a58f64ff3398d7b324003  busybox\n" "busybox: OK\n" "^D\n" if True


#define IF_NOT_SOFTLIMIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SOFTLIMIT)
		(__VA_ARGS__...) if def(CONFIG_SOFTLIMIT)


#define IF_NOT_MV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MV)
		(__VA_ARGS__...) if def(CONFIG_MV)


#define ENABLE_FEATURE_NAMEIF_EXTENDED if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_NAMEIF_EXTENDED)
		 => 1 if def(CONFIG_FEATURE_NAMEIF_EXTENDED)


#define ENABLE_FEATURE_SUID if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SUID)
		 => 1 if def(CONFIG_FEATURE_SUID)


#define matchpathcon_full_usage if True 
	expansions 
		 => "\n\n" "	-n	Don't display path" "\n	-N	Don't use translations" "\n	-f	Use alternate file_context file" "\n	-p	Use prefix to speed translations" "\n	-V	Verify file context on disk matches defaults" if True


#define IF_KLOGD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_KLOGD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_KLOGD)


#define __WCHAR_T__ if True 
	expansions 
		 if True


#define IF_FEATURE_HWIB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HWIB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HWIB)


#define IF_FEATURE_DEVFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DEVFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DEVFS)


#define IF_NOT_FEATURE_SHADOWPASSWDS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SHADOWPASSWDS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SHADOWPASSWDS)


#define ENABLE_FEATURE_FANCY_HEAD if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FANCY_HEAD)
		 => 1 if def(CONFIG_FEATURE_FANCY_HEAD)


#define IF_NSLOOKUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NSLOOKUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NSLOOKUP)


#define IF_UNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNAME)


#define IF_NOT_UNLZMA if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNLZMA)
		(__VA_ARGS__...) if def(CONFIG_UNLZMA)


#define __daddr_t_defined if True 
	expansions 
		 if True


#define IF_NOT_MORE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MORE)
		(__VA_ARGS__...) if def(CONFIG_MORE)


#define IF_NOT_FEATURE_STAT_FORMAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_STAT_FORMAT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_STAT_FORMAT)


#define fdflush_trivial_usage if True 
	expansions 
		 => "DEVICE" if True


#define IF_UMOUNT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UMOUNT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UMOUNT)


#define IF_FEATURE_EDITING_FANCY_PROMPT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING_FANCY_PROMPT)


#define IF_NOT_FEATURE_GREP_CONTEXT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_GREP_CONTEXT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_GREP_CONTEXT)


#define IF_NOT_FEATURE_SUID_CONFIG_QUIET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SUID_CONFIG_QUIET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SUID_CONFIG_QUIET)


#define IF_NOT_TUNE2FS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TUNE2FS)
		(__VA_ARGS__...) if def(CONFIG_TUNE2FS)


#define __END_NAMESPACE_C99 if True 
	expansions 
		 if True


#define _G_NEED_STDARG_H if True 
	expansions 
		 => 1 if True


#define ls_full_usage if True 
	expansions 
		 => "\n\n" "List directory contents\n" "\nOptions:" "\n	-1	List in a single column" "\n	-A	Don't list . and .." "\n	-a	Don't hide entries starting with ." "\n	-C	List by columns" IF_FEATURE_LS_TIMESTAMPS( "\n	-c	With -l: sort by ctime") IF_FEATURE_LS_COLOR( "\n	--color[={always,never,auto}]	Control coloring") "\n	-d	List directory entries instead of contents" IF_FEATURE_LS_TIMESTAMPS( "\n	-e	List full date and time") IF_FEATURE_LS_FILETYPES( "\n	-F	Append indicator (one of */=@|) to entries") "\n	-i	List inode numbers" "\n	-l	Long listing format" "\n	-n	List numeric UIDs and GIDs instead of names" IF_FEATURE_LS_FILETYPES( "\n	-p	Append indicator (one of /=@|) to entries") IF_FEATURE_LS_FOLLOWLINKS( "\n	-L	List entries pointed to by symlinks") IF_FEATURE_LS_RECURSIVE( "\n	-R	Recurse") IF_FEATURE_LS_SORTFILES( "\n	-r	Sort in reverse order") IF_FEATURE_LS_SORTFILES( "\n	-S	Sort by file size") "\n	-s	List the size of each file, in blocks" IF_FEATURE_AUTOWIDTH( "\n	-T N	Assume tabstop every N columns") IF_FEATURE_LS_TIMESTAMPS( "\n	-t	With -l: sort by modification time") IF_FEATURE_LS_TIMESTAMPS( "\n	-u	With -l: sort by access time") IF_FEATURE_LS_SORTFILES( "\n	-v	Sort by version") IF_FEATURE_AUTOWIDTH( "\n	-w N	Assume the terminal is N columns wide") "\n	-x	List by lines" IF_FEATURE_LS_SORTFILES( "\n	-X	Sort by extension") IF_FEATURE_HUMAN_READABLE( "\n	-h	List sizes in human readable format (1K 243M 2G)") IF_SELINUX( "\n	-k	List security context") IF_SELINUX( "\n	-K	List security context in long format") IF_SELINUX( "\n	-Z	List security context and permission") if True


#define ENABLE_KILLALL if True 
	expansions 
		 => 0 if !def(CONFIG_KILLALL)
		 => 1 if def(CONFIG_KILLALL)


#define IF_FEATURE_LOGREAD_REDUCED_LOCKING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)


#define IF_NOT_FEATURE_INSMOD_LOAD_MAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSMOD_LOAD_MAP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSMOD_LOAD_MAP)


#define setlogcons_full_usage if True 
	expansions 
		 => "\n\n" "Redirect the kernel output to console N (0 for current)" if True


#define IF_FSCK_MINIX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FSCK_MINIX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FSCK_MINIX)


#define IF_NOT_FEATURE_DD_IBS_OBS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DD_IBS_OBS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DD_IBS_OBS)


#define nbdclient_full_usage if True 
	expansions 
		 => "\n\n" "Connect to HOST and provide a network block device on BLOCKDEV" if True


#define IF_DPKG_DEB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DPKG_DEB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DPKG_DEB)


#define touch_full_usage if True 
	expansions 
		 => "\n\n" "Update the last-modified date on the given FILE[s]\n" "\nOptions:" "\n	-c	Don't create files" "\n	-d DT	Date/time to use" "\n	-r FILE	Use FILE's date/time" if True


#define IF_NOT_FEATURE_TAR_SELINUX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_SELINUX)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_SELINUX)


#define ENABLE_FEATURE_HDPARM_HDIO_GETSET_DMA if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
		 => 1 if def(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)


#define comm_trivial_usage if True 
	expansions 
		 => "[-123] FILE1 FILE2" if True


#define IF_NOT_TOUCH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TOUCH)
		(__VA_ARGS__...) if def(CONFIG_TOUCH)


#define IF_NOT_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)


#define restorecon_trivial_usage if True 
	expansions 
		 => "[-iFnRv] [-e EXCLUDEDIR]... [-o FILE] [-f FILE]" if True


#define IF_FEATURE_INIT_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INIT_SYSLOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INIT_SYSLOG)


#define _IOS_ATEND if True 
	expansions 
		 => 4 if True


#define __GNUC_RH_RELEASE__ if True 
	expansions 
		 => 10 if True


#define readlink_trivial_usage if True 
	expansions 
		 => IF_FEATURE_READLINK_FOLLOW("[-fnv] ") "FILE" if True


#define _IO_SKIPWS if True 
	expansions 
		 => 01 if True


#define IF_DMALLOC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DMALLOC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DMALLOC)


#define __FSBLKCNT_T_TYPE if True 
	expansions 
		 => __ULONGWORD_TYPE if True


#define vconfig_trivial_usage if True 
	expansions 
		 => "COMMAND [OPTIONS]" if True


#define WTERMSIG if True 
	expansions 
		(status) => __WTERMSIG (__WAIT_INT (status)) if True


#define cttyhack_trivial_usage if True 
	expansions 
		 => "PROG ARGS" if True


#define __END_DECLS if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_VOLUMEID_OCFS2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_OCFS2)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_OCFS2)


#define IF_FEATURE_SHOW_THREADS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SHOW_THREADS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SHOW_THREADS)


#define ENABLE_USE_PORTABLE_CODE if True 
	expansions 
		 => 0 if !def(CONFIG_USE_PORTABLE_CODE)
		 => 1 if def(CONFIG_USE_PORTABLE_CODE)


#define _IO_stderr if True 
	expansions 
		 => ((_IO_FILE*)(&_IO_2_1_stderr_)) if True


#define ENABLE_FEATURE_LESS_MARKS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_MARKS)
		 => 1 if def(CONFIG_FEATURE_LESS_MARKS)


#define IF_NOT_POPMAILDIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_POPMAILDIR)
		(__VA_ARGS__...) if def(CONFIG_POPMAILDIR)


#define IF_NOT_HUSH_IF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_IF)
		(__VA_ARGS__...) if def(CONFIG_HUSH_IF)


#define be32toh if True 
	expansions 
		(x) => __bswap_32 (x) if True


#define ftpput_full_usage if True 
	expansions 
		 => "\n\n" "Store a local file on a remote machine via FTP\n" "\nOptions:" IF_FEATURE_FTPGETPUT_LONG_OPTIONS( "\n	-v,--verbose	Verbose" "\n	-u,--username	Username" "\n	-p,--password	Password" "\n	-P,--port	Port number" ) IF_NOT_FEATURE_FTPGETPUT_LONG_OPTIONS( "\n	-v	Verbose" "\n	-u	Username" "\n	-p	Password" "\n	-P	Port number" ) if True


#define ENABLE_MICROCOM if True 
	expansions 
		 => 0 if !def(CONFIG_MICROCOM)
		 => 1 if def(CONFIG_MICROCOM)


#define iostat_full_usage if True 
	expansions 
		 => "\n\n" "Report CPU and I/O statistics\n" "\nOptions:" "\n	-c	Show CPU utilization" "\n	-d	Show device utilization" "\n	-t	Print current time" "\n	-z	Omit devices with no activity" "\n	-k	Use kb/s" "\n	-m	Use Mb/s" if True


#define IF_NOT_FEATURE_HDPARM_HDIO_SCAN_HWIF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)


#define IF_FEATURE_LS_COLOR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_COLOR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_COLOR)


#define IF_FEATURE_VOLUMEID_ROMFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_ROMFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_ROMFS)


#define IF_KILL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_KILL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_KILL)


#define ENABLE_NC_110_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_NC_110_COMPAT)
		 => 1 if def(CONFIG_NC_110_COMPAT)


#define IF_DHCPRELAY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DHCPRELAY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DHCPRELAY)


#define IF_NOT_HUSH_LOCAL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_LOCAL)
		(__VA_ARGS__...) if def(CONFIG_HUSH_LOCAL)


#define _BITS_PTHREADTYPES_H if True 
	expansions 
		 => 1 if True


#define __FDS_BITS if True 
	expansions 
		(set) => ((set)->__fds_bits) if True


#define IF_SETLOGCONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETLOGCONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETLOGCONS)


#define ENABLE_FEATURE_HDPARM_GET_IDENTITY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
		 => 1 if def(CONFIG_FEATURE_HDPARM_GET_IDENTITY)


#define IF_CHVT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHVT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHVT)


#define ENABLE_UNIX2DOS if True 
	expansions 
		 => 0 if !def(CONFIG_UNIX2DOS)
		 => 1 if def(CONFIG_UNIX2DOS)


#define IF_LOADFONT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOADFONT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOADFONT)


#define ENABLE_FEATURE_IPC_SYSLOG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IPC_SYSLOG)
		 => 1 if def(CONFIG_FEATURE_IPC_SYSLOG)


#define comm_full_usage if True 
	expansions 
		 => "\n\n" "Compare FILE1 with FILE2\n" "\nOptions:" "\n	-1	Suppress lines unique to FILE1" "\n	-2	Suppress lines unique to FILE2" "\n	-3	Suppress lines common to both files" if True


#define ENABLE_BOOTCHARTD if True 
	expansions 
		 => 0 if !def(CONFIG_BOOTCHARTD)
		 => 1 if def(CONFIG_BOOTCHARTD)


#define IF_NOT_INOTIFYD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INOTIFYD)
		(__VA_ARGS__...) if def(CONFIG_INOTIFYD)


#define __id_t_defined if True 
	expansions 
		 if True


#define ENABLE_READPROFILE if True 
	expansions 
		 => 0 if !def(CONFIG_READPROFILE)
		 => 1 if def(CONFIG_READPROFILE)


#define ENABLE_ACPID if True 
	expansions 
		 => 0 if !def(CONFIG_ACPID)
		 => 1 if def(CONFIG_ACPID)


#define IF_NOT_FEATURE_TOPMEM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TOPMEM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TOPMEM)


#define IF_NOT_FEATURE_HTTPD_RANGES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_RANGES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_RANGES)


#define ENABLE_CRYPTPW if True 
	expansions 
		 => 0 if !def(CONFIG_CRYPTPW)
		 => 1 if def(CONFIG_CRYPTPW)


#define IF_SH_MATH_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SH_MATH_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SH_MATH_SUPPORT)


#define ENABLE_LOADFONT if True 
	expansions 
		 => 0 if !def(CONFIG_LOADFONT)
		 => 1 if def(CONFIG_LOADFONT)


#define IF_NOT_FEATURE_FIND_EXEC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_EXEC)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_EXEC)


#define RAND_MAX if True 
	expansions 
		 => 2147483647 if True


#define __SIZEOF_PTHREAD_CONDATTR_T if True 
	expansions 
		 => 4 if True


#define ping_full_usage if True 
	expansions 
		 => "\n\n" "Send ICMP ECHO_REQUEST packets to network hosts\n" "\nOptions:" "\n	-4,-6		Force IP or IPv6 name resolution" "\n	-c CNT		Send only CNT pings" "\n	-s SIZE		Send SIZE data bytes in packets (default:56)" "\n	-I IFACE/IP	Use interface or IP address as source" "\n	-W SEC		Seconds to wait for the first response (default:10)" "\n			(after all -c CNT packets are sent)" "\n	-w SEC		Seconds until ping exits (default:infinite)" "\n			(can exit earlier with -c CNT)" "\n	-q		Quiet, only displays output at start" "\n			and when finished" if def(CONFIG_FEATURE_FANCY_PING)
		 => "\n\n" "Send ICMP ECHO_REQUEST packets to network hosts" if !def(CONFIG_FEATURE_FANCY_PING)


#define ENABLE_FEATURE_DD_THIRD_STATUS_LINE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
		 => 1 if def(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)


#define du_full_usage if True 
	expansions 
		 => "\n\n" "Summarize disk space used for each FILE and/or directory.\n" "Disk space is printed in units of " IF_FEATURE_DU_DEFAULT_BLOCKSIZE_1K("1024") IF_NOT_FEATURE_DU_DEFAULT_BLOCKSIZE_1K("512") " bytes.\n" "\nOptions:" "\n	-a	Show file sizes too" "\n	-L	Follow all symlinks" "\n	-H	Follow symlinks on command line" "\n	-d N	Limit output to directories (and files with -a) of depth < N" "\n	-c	Show grand total" "\n	-l	Count sizes many times if hard linked" "\n	-s	Display only a total for each argument" "\n	-x	Skip directories on different filesystems" IF_FEATURE_HUMAN_READABLE( "\n	-h	Sizes in human readable format (e.g., 1K 243M 2G )" "\n	-m	Sizes in megabytes" ) "\n	-k	Sizes in kilobytes" IF_FEATURE_DU_DEFAULT_BLOCKSIZE_1K(" (default)") if True


#define _IO_UNITBUF if True 
	expansions 
		 => 020000 if True


#define IF_FEATURE_FIND_GROUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_GROUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_GROUP)


#define IF_NOT_FEATURE_USERNAME_COMPLETION if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_USERNAME_COMPLETION)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_USERNAME_COMPLETION)


#define le16toh if True 
	expansions 
		(x) => (x) if True


#define _IO_FLAGS2_USER_WBUF if True 
	expansions 
		 => 8 if True


#define __WIFCONTINUED if True 
	expansions 
		(status) => ((status) == __W_CONTINUED) if True


#define IF_FEATURE_FIND_PRUNE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_PRUNE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_PRUNE)


#define IF_HUSH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH)


#define __UID_T_TYPE if True 
	expansions 
		 => __U32_TYPE if True


#define IF_NOT_RPM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RPM)
		(__VA_ARGS__...) if def(CONFIG_RPM)


#define __USE_ISOC99 if True 
	expansions 
		 => 1 if True


#define IF_STATIC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_STATIC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_STATIC)


#define _G_config_h if True 
	expansions 
		 => 1 if True


#define cpio_full_usage if True 
	expansions 
		 => "\n\n" "Extract or list files from a cpio archive" IF_FEATURE_CPIO_O(", or" "\ncreate an archive" IF_FEATURE_CPIO_P(" (-o) or copy files (-p)") " using file list on stdin" ) "\n" "\nMain operation mode:" "\n	-t	List" "\n	-i	Extract" IF_FEATURE_CPIO_O( "\n	-o	Create (requires -H newc)" ) IF_FEATURE_CPIO_P( "\n	-p DIR	Copy files to DIR" ) "\nOptions:" "\n	-d	Make leading directories" "\n	-m	Preserve mtime" "\n	-v	Verbose" "\n	-u	Overwrite" "\n	-F FILE	Input (-t,-i,-p) or output (-o) file" IF_FEATURE_CPIO_O( "\n	-H newc	Archive format" ) if True


#define IF_MORE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MORE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MORE)


#define IF_NOT_FEATURE_RUNCON_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)


#define USAGE_PIDOF if True 
	expansions 
		 if (!def(CONFIG_FEATURE_PIDOF_SINGLE)&!def(CONFIG_FEATURE_PIDOF_OMIT))
		 => "\n\nOptions:" if (def(CONFIG_FEATURE_PIDOF_SINGLE)|def(CONFIG_FEATURE_PIDOF_OMIT))


#define IF_NOT_FEATURE_FIND_DEPTH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_DEPTH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_DEPTH)


#define IF_PS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PS)


#define __need_clock_t if False 
	expansions 
		 if False


#define IF_NOT_LOADFONT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOADFONT)
		(__VA_ARGS__...) if def(CONFIG_LOADFONT)


#define ENABLE_DUMPLEASES if True 
	expansions 
		 => 0 if !def(CONFIG_DUMPLEASES)
		 => 1 if def(CONFIG_DUMPLEASES)


#define _IO_OCT if True 
	expansions 
		 => 040 if True


#define IF_NOT_KLOGD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_KLOGD)
		(__VA_ARGS__...) if def(CONFIG_KLOGD)


#define IF_SUBST_WCHAR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SUBST_WCHAR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SUBST_WCHAR)


#define w_retcode if True 
	expansions 
		 => __wait_terminated.__w_retcode if True


#define ENABLE_FEATURE_NON_POSIX_CP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_NON_POSIX_CP)
		 => 1 if def(CONFIG_FEATURE_NON_POSIX_CP)


#define IF_NOT_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)


#define __SIZE_T if True 
	expansions 
		 if True


#define ENABLE_CHPST if True 
	expansions 
		 => 0 if !def(CONFIG_CHPST)
		 => 1 if def(CONFIG_CHPST)


#define ENABLE_RMDIR if True 
	expansions 
		 => 0 if !def(CONFIG_RMDIR)
		 => 1 if def(CONFIG_RMDIR)


#define IF_NOT_FEATURE_PS_TIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PS_TIME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PS_TIME)


#define IF_NOT_CUT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CUT)
		(__VA_ARGS__...) if def(CONFIG_CUT)


#define IF_LPD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LPD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LPD)


#define __stub_getmsg if True 
	expansions 
		 if True


#define _IONBF if True 
	expansions 
		 => 2 if True


#define IF_RESIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RESIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RESIZE)


#define ENABLE_PIVOT_ROOT if True 
	expansions 
		 => 0 if !def(CONFIG_PIVOT_ROOT)
		 => 1 if def(CONFIG_PIVOT_ROOT)


#define chpst_trivial_usage if True 
	expansions 
		 => "[-vP012] [-u USER[:GRP]] [-U USER[:GRP]] [-e DIR]\n" "	[-/ DIR] [-n NICE] [-m BYTES] [-d BYTES] [-o N]\n" "	[-p N] [-f BYTES] [-c BYTES] PROG ARGS" if True


#define _G_pid_t if True 
	expansions 
		 => __pid_t if True


#define __PTRDIFF_TYPE__ if True 
	expansions 
		 => long int if True


#define IF_NOT_TIMEOUT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TIMEOUT)
		(__VA_ARGS__...) if def(CONFIG_TIMEOUT)


#define ENABLE_FEATURE_SEAMLESS_XZ if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SEAMLESS_XZ)
		 => 1 if def(CONFIG_FEATURE_SEAMLESS_XZ)


#define IF_NOT_DEFAULT_SETFONT_DIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEFAULT_SETFONT_DIR)
		(__VA_ARGS__...) if def(CONFIG_DEFAULT_SETFONT_DIR)


#define IF_NOT_UUDECODE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UUDECODE)
		(__VA_ARGS__...) if def(CONFIG_UUDECODE)


#define IF_NOT_FEATURE_CHAT_SEND_ESCAPES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_SEND_ESCAPES)


#define IF_NOT_DIRNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DIRNAME)
		(__VA_ARGS__...) if def(CONFIG_DIRNAME)


#define IF_FEATURE_DATE_ISOFMT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DATE_ISOFMT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DATE_ISOFMT)


#define dc_example_usage if True 
	expansions 
		 => "$ dc 2 2 + p\n" "4\n" "$ dc 8 8 \\* 2 2 + / p\n" "16\n" "$ dc 0 1 and p\n" "0\n" "$ dc 0 1 or p\n" "1\n" "$ echo 72 9 div 8 mul p | dc\n" "64\n" if True


#define ENABLE_FEATURE_PIDFILE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PIDFILE)
		 => 1 if def(CONFIG_FEATURE_PIDFILE)


#define ENABLE_RESTORECON if True 
	expansions 
		 => 0 if !def(CONFIG_RESTORECON)
		 => 1 if def(CONFIG_RESTORECON)


#define IF_NOT_FEATURE_GREP_EGREP_ALIAS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_GREP_EGREP_ALIAS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_GREP_EGREP_ALIAS)


#define _STDIO_USES_IOSTREAM if True 
	expansions 
		 if True


#define __NO_INLINE__ if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_ETC_NETWORKS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ETC_NETWORKS)
		 => 1 if def(CONFIG_FEATURE_ETC_NETWORKS)


#define IF_NOT_NANDWRITE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NANDWRITE)
		(__VA_ARGS__...) if def(CONFIG_NANDWRITE)


#define _SIZE_T_ if True 
	expansions 
		 if True


#define ENABLE_FEATURE_PS_WIDE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PS_WIDE)
		 => 1 if def(CONFIG_FEATURE_PS_WIDE)


#define IF_SOFTLIMIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SOFTLIMIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SOFTLIMIT)


#define IF_FEATURE_BASH_IS_NONE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BASH_IS_NONE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BASH_IS_NONE)


#define sendmail_full_usage if True 
	expansions 
		 => "\n\n" "Read email from stdin and send it\n" "\nStandard options:" "\n	-t		Read additional recipients from message body" "\n	-f sender	Sender (required)" "\n	-o options	Various options. -oi implied, others are ignored" "\n	-i		-oi synonym. implied and ignored" "\n" "\nBusybox specific options:" "\n	-w seconds	Network timeout" "\n	-H 'PROG ARGS'	Run connection helper" "\n			Examples:" "\n			-H 'exec openssl s_client -quiet -tls1 -starttls smtp" "\n				-connect smtp.gmail.com:25' <email.txt" "\n				[4<username_and_passwd.txt | -au<username> -ap<password>]" "\n			-H 'exec openssl s_client -quiet -tls1" "\n				-connect smtp.gmail.com:465' <email.txt" "\n				[4<username_and_passwd.txt | -au<username> -ap<password>]" "\n	-S server[:port] Server" "\n	-au<username>	Username for AUTH LOGIN" "\n	-ap<password>	Password for AUTH LOGIN" "\n	-am<method>	Authentication method. Ignored. LOGIN is implied" "\n" "\nOther options are silently ignored; -oi -t is implied" IF_MAKEMIME( "\nUse makemime applet to create message with attachments" ) if True


#define _WCHAR_T_H if True 
	expansions 
		 if True


#define IF_RUNCON if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RUNCON)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RUNCON)


#define df_full_usage if True 
	expansions 
		 => "\n\n" "Print filesystem usage statistics\n" "\nOptions:" "\n	-P	POSIX output format" "\n	-k	1024-byte blocks (default)" IF_FEATURE_HUMAN_READABLE( "\n	-m	1M-byte blocks" "\n	-h	Human readable (e.g. 1K 243M 2G)" ) IF_FEATURE_DF_FANCY( "\n	-a	Show all filesystems" "\n	-i	Inodes" "\n	-B SIZE	Blocksize" ) if True


#define IF_FEATURE_AWK_LIBM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_AWK_LIBM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_AWK_LIBM)


#define IF_NOT_INSTALL_SH_APPLET_HARDLINK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_SH_APPLET_HARDLINK)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_SH_APPLET_HARDLINK)


#define swapon_full_usage if True 
	expansions 
		 => "\n\n" "Start swapping on DEVICE\n" "\nOptions:" "\n	-a	Start swapping on all swap devices" IF_FEATURE_SWAPON_PRI( "\n	-p PRI	Set swap device priority" ) if True


#define IF_BRCTL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BRCTL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BRCTL)


#define ENABLE_FEATURE_CHAT_SWALLOW_OPTS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
		 => 1 if def(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)


#define dd_trivial_usage if True 
	expansions 
		 => "[if=FILE] [of=FILE] " IF_FEATURE_DD_IBS_OBS("[ibs=N] [obs=N] ") "[bs=N] [count=N] [skip=N]\n" "	[seek=N]" IF_FEATURE_DD_IBS_OBS(" [conv=notrunc|noerror|sync|fsync]") if True


#define IF_NOT_FEATURE_NAMEIF_EXTENDED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_NAMEIF_EXTENDED)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_NAMEIF_EXTENDED)


#define __WCHAR_T if True 
	expansions 
		 if True


#define ENABLE_UDHCP_DEBUG if True 
	expansions 
		 => 0 if !def(CONFIG_UDHCP_DEBUG)
		 => 1 if def(CONFIG_UDHCP_DEBUG)


#define IF_HAVE_DOT_CONFIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HAVE_DOT_CONFIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HAVE_DOT_CONFIG)


#define __DEC128_MIN__ if True 
	expansions 
		 => 1E-6143DL if True


#define IF_USLEEP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_USLEEP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_USLEEP)


#define IF_FEATURE_FDISK_BLKSIZE if True 
	expansions 
		(a) if True


#define IF_SETARCH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETARCH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETARCH)


#define ENABLE_DEBUG_PESSIMIZE if True 
	expansions 
		 => 0 if !def(CONFIG_DEBUG_PESSIMIZE)
		 => 1 if def(CONFIG_DEBUG_PESSIMIZE)


#define IF_FLASH_UNLOCK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FLASH_UNLOCK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FLASH_UNLOCK)


#define IF_WHOAMI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WHOAMI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WHOAMI)


#define IF_NOT_RFKILL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RFKILL)
		(__VA_ARGS__...) if def(CONFIG_RFKILL)


#define IF_NOT_RMMOD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RMMOD)
		(__VA_ARGS__...) if def(CONFIG_RMMOD)


#define L_ctermid if True 
	expansions 
		 => 9 if True


#define arping_full_usage if True 
	expansions 
		 => "\n\n" "Send ARP requests/replies\n" "\nOptions:" "\n	-f		Quit on first ARP reply" "\n	-q		Quiet" "\n	-b		Keep broadcasting, don't go unicast" "\n	-D		Duplicated address detection mode" "\n	-U		Unsolicited ARP mode, update your neighbors" "\n	-A		ARP answer mode, update your neighbors" "\n	-c N		Stop after sending N ARP requests" "\n	-w TIMEOUT	Time to wait for ARP reply, seconds" "\n	-I IFACE	Interface to use (default eth0)" "\n	-s SRC_IP	Sender IP address" "\n	DST_IP		Target IP address" if True


#define IF_FEATURE_FBSET_READMODE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FBSET_READMODE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FBSET_READMODE)


#define run_parts_full_usage if True 
	expansions 
		 => "\n\n" "Run a bunch of scripts in DIRECTORY\n" "\nOptions:" "\n	-t	Print what would be run, but don't actually run anything" "\n	-a ARG	Pass ARG as argument for every program" "\n	-u MASK	Set the umask to MASK before running every program" IF_FEATURE_RUN_PARTS_FANCY( "\n	-l	Print names of all matching files even if they are not executable" ) if True


#define envdir_trivial_usage if True 
	expansions 
		 => "DIR PROG ARGS" if True


#define ENABLE_EXPAND if True 
	expansions 
		 => 0 if !def(CONFIG_EXPAND)
		 => 1 if def(CONFIG_EXPAND)


#define ifup_trivial_usage if True 
	expansions 
		 => "[-an"IF_FEATURE_IFUPDOWN_MAPPING("m")"vf] [-i FILE] IFACE..." if True


#define sysctl_full_usage if True 
	expansions 
		 => "\n\n" "Configure kernel parameters at runtime\n" "\nOptions:" "\n	-n	Don't print key names" "\n	-e	Don't warn about unknown keys" "\n	-w	Change sysctl setting" "\n	-p FILE	Load sysctl settings from FILE (default /etc/sysctl.conf)" "\n	-a	Display all values" "\n	-A	Display all values in table form" if True


#define ipcalc_full_usage if True 
	expansions 
		 => "\n\n" "Calculate IP network settings from a IP address\n" "\nOptions:" IF_FEATURE_IPCALC_LONG_OPTIONS( "\n	-b,--broadcast	Display calculated broadcast address" "\n	-n,--network	Display calculated network address" "\n	-m,--netmask	Display default netmask for IP" IF_FEATURE_IPCALC_FANCY( "\n	-p,--prefix	Display the prefix for IP/NETMASK" "\n	-h,--hostname	Display first resolved host name" "\n	-s,--silent	Don't ever display error messages" ) ) IF_NOT_FEATURE_IPCALC_LONG_OPTIONS( "\n	-b	Display calculated broadcast address" "\n	-n	Display calculated network address" "\n	-m	Display default netmask for IP" IF_FEATURE_IPCALC_FANCY( "\n	-p	Display the prefix for IP/NETMASK" "\n	-h	Display first resolved host name" "\n	-s	Don't ever display error messages" ) ) if True


#define __STD_TYPE if False 
	expansions 
		 => typedef if False


#define ENABLE_HEAD if True 
	expansions 
		 => 0 if !def(CONFIG_HEAD)
		 => 1 if def(CONFIG_HEAD)


#define IF_NOT_FAKEIDENTD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FAKEIDENTD)
		(__VA_ARGS__...) if def(CONFIG_FAKEIDENTD)


#define popmaildir_trivial_usage if True 
	expansions 
		 => "[OPTIONS] MAILDIR [CONN_HELPER ARGS]" if True


#define IF_FEATURE_READLINK_FOLLOW if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_READLINK_FOLLOW)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_READLINK_FOLLOW)


#define hostid_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_USE_BB_PWD_GRP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_USE_BB_PWD_GRP)
		(__VA_ARGS__...) if def(CONFIG_USE_BB_PWD_GRP)


#define IF_UNICODE_USING_LOCALE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_USING_LOCALE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_USING_LOCALE)


#define ENABLE_DUMPKMAP if True 
	expansions 
		 => 0 if !def(CONFIG_DUMPKMAP)
		 => 1 if def(CONFIG_DUMPKMAP)


#define IF_FEATURE_VI_SEARCH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_SEARCH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_SEARCH)


#define ENABLE_FEATURE_WGET_TIMEOUT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_WGET_TIMEOUT)
		 => 1 if def(CONFIG_FEATURE_WGET_TIMEOUT)


#define IF_NOT_UNICODE_COMBINING_WCHARS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_COMBINING_WCHARS)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_COMBINING_WCHARS)


#define ENABLE_FEATURE_MKDIR_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)


#define ENABLE_UNICODE_PRESERVE_BROKEN if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_PRESERVE_BROKEN)
		 => 1 if def(CONFIG_UNICODE_PRESERVE_BROKEN)


#define ENABLE_FEATURE_GZIP_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)


#define IF_NOT_FEATURE_FIND_SIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_SIZE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_SIZE)


#define ENABLE_CONSPY if True 
	expansions 
		 => 0 if !def(CONFIG_CONSPY)
		 => 1 if def(CONFIG_CONSPY)


#define ENABLE_FEATURE_CROND_DIR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CROND_DIR)
		 => 1 if def(CONFIG_FEATURE_CROND_DIR)


#define IF_NOT_FEATURE_TEE_USE_BLOCK_IO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TEE_USE_BLOCK_IO)


#define IF_NOT_ASH_BASH_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_BASH_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_ASH_BASH_COMPAT)


#define IF_FEATURE_TOP_SMP_PROCESS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TOP_SMP_PROCESS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TOP_SMP_PROCESS)


#define ipcrm_trivial_usage if True 
	expansions 
		 => "[-MQS key] [-mqs id]" if True


#define IF_FEATURE_HEXDUMP_REVERSE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HEXDUMP_REVERSE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HEXDUMP_REVERSE)


#define IF_NOT_BUILD_LIBBUSYBOX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BUILD_LIBBUSYBOX)
		(__VA_ARGS__...) if def(CONFIG_BUILD_LIBBUSYBOX)


#define ENABLE_FEATURE_ACPID_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ACPID_COMPAT)
		 => 1 if def(CONFIG_FEATURE_ACPID_COMPAT)


#define __attribute_deprecated__ if True 
	expansions 
		 => __attribute__ ((__deprecated__)) if True


#define IF_FEATURE_XARGS_SUPPORT_ZERO_TERM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)


#define ENABLE_FEATURE_FIND_PATH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_PATH)
		 => 1 if def(CONFIG_FEATURE_FIND_PATH)


#define __attribute_malloc__ if True 
	expansions 
		 => __attribute__ ((__malloc__)) if True


#define IF_SETFILES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETFILES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETFILES)


#define IF_FEATURE_HTTPD_BASIC_AUTH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_BASIC_AUTH)


#define IF_NOT_SUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SUM)
		(__VA_ARGS__...) if def(CONFIG_SUM)


#define IF_NOT_MONOTONIC_SYSCALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MONOTONIC_SYSCALL)
		(__VA_ARGS__...) if def(CONFIG_MONOTONIC_SYSCALL)


#define __GLIBC_HAVE_LONG_LONG if True 
	expansions 
		 => 1 if True


#define usleep_example_usage if True 
	expansions 
		 => "$ usleep 1000000\n" "[pauses for 1 second]\n" if True


#define ENABLE_FEATURE_TAR_FROM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_FROM)
		 => 1 if def(CONFIG_FEATURE_TAR_FROM)


#define IF_NOT_CLEAR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CLEAR)
		(__VA_ARGS__...) if def(CONFIG_CLEAR)


#define IF_NOT_MAKEMIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MAKEMIME)
		(__VA_ARGS__...) if def(CONFIG_MAKEMIME)


#define IF_INSTALL_SH_APPLET_SCRIPT_WRAPPER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)


#define IF_USE_PORTABLE_CODE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_USE_PORTABLE_CODE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_USE_PORTABLE_CODE)


#define IF_USE_BB_CRYPT_SHA if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_USE_BB_CRYPT_SHA)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_USE_BB_CRYPT_SHA)


#define sha512sum_full_usage if True 
	expansions 
		 => "\n\n" "Print" IF_FEATURE_MD5_SHA1_SUM_CHECK(" or check") " SHA512 checksums" IF_FEATURE_MD5_SHA1_SUM_CHECK( "\n" "\nOptions:" "\n	-c	Check sums against given list" "\n	-s	Don't output anything, status code shows success" "\n	-w	Warn about improperly formatted checksum lines" ) if True


#define __stub_gtty if True 
	expansions 
		 if True


#define mdev_full_usage if True 
	expansions 
		 => "\n\n" "	-s	Scan /sys and populate /dev during system boot\n" "\n" "It can be run by kernel as a hotplug helper. To activate it:\n" " echo /sbin/mdev > /proc/sys/kernel/hotplug\n" IF_FEATURE_MDEV_CONF( "It uses /etc/mdev.conf with lines\n" "[-]DEVNAME UID:GID PERM" IF_FEATURE_MDEV_RENAME(" [>|=PATH]") IF_FEATURE_MDEV_EXEC(" [@|$|*PROG]") ) if True


#define __FLT_HAS_DENORM__ if True 
	expansions 
		 => 1 if True


#define add_shell_trivial_usage if True 
	expansions 
		 => "SHELL..." if True


#define ENABLE_FEATURE_UDHCP_PORT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UDHCP_PORT)
		 => 1 if def(CONFIG_FEATURE_UDHCP_PORT)


#define IF_FEATURE_OSF_LABEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_OSF_LABEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_OSF_LABEL)


#define IF_NOT_FEATURE_SUID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SUID)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SUID)


#define IF_FEATURE_VI_COLON if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_COLON)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_COLON)


#define IF_NOT_FEATURE_LOADFONT_PSF2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LOADFONT_PSF2)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LOADFONT_PSF2)


#define IF_NOT_FEATURE_SYSLOGD_DUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SYSLOGD_DUP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SYSLOGD_DUP)


#define vi_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define IF_NOT_FEATURE_RESIZE_PRINT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_RESIZE_PRINT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_RESIZE_PRINT)


#define ENABLE_SETCONSOLE if True 
	expansions 
		 => 0 if !def(CONFIG_SETCONSOLE)
		 => 1 if def(CONFIG_SETCONSOLE)


#define IF_NC_SERVER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NC_SERVER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NC_SERVER)


#define IF_NOT_IP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IP)
		(__VA_ARGS__...) if def(CONFIG_IP)


#define IF_NOT_MKFS_REISER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKFS_REISER)
		(__VA_ARGS__...) if def(CONFIG_MKFS_REISER)


#define IF_NOT_FEATURE_VOLUMEID_UDF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_UDF)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_UDF)


#define IF_FEATURE_REFORMIME_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_REFORMIME_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_REFORMIME_COMPAT)


#define IF_NOT_WHICH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WHICH)
		(__VA_ARGS__...) if def(CONFIG_WHICH)


#define IF_IFENSLAVE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IFENSLAVE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IFENSLAVE)


#define _IO_fpos_t if True 
	expansions 
		 => _G_fpos_t if True


#define _IOS_INPUT if True 
	expansions 
		 => 1 if True


#define IF_LAST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LAST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LAST)


#define pwd_full_usage if True 
	expansions 
		 => "\n\n" "Print the full filename of the current working directory" if True


#define _T_WCHAR if True 
	expansions 
		 if True


#define ENABLE_ARPING if True 
	expansions 
		 => 0 if !def(CONFIG_ARPING)
		 => 1 if def(CONFIG_ARPING)


#define IF_NOT_PS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PS)
		(__VA_ARGS__...) if def(CONFIG_PS)


#define IF_NOT_FEATURE_CROND_D if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CROND_D)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CROND_D)


#define ENABLE_SV if True 
	expansions 
		 => 0 if !def(CONFIG_SV)
		 => 1 if def(CONFIG_SV)


#define ed_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_LONG_OPTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LONG_OPTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LONG_OPTS)


#define IF_FEATURE_EDITING_ASK_TERMINAL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING_ASK_TERMINAL)


#define TMP_MAX if True 
	expansions 
		 => 238328 if True


#define IF_NOT_TIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TIME)
		(__VA_ARGS__...) if def(CONFIG_TIME)


#define IF_NOT_READLINK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_READLINK)
		(__VA_ARGS__...) if def(CONFIG_READLINK)


#define ENABLE_HUSH_CASE if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_CASE)
		 => 1 if def(CONFIG_HUSH_CASE)


#define IF_LAST_SUPPORTED_WCHAR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LAST_SUPPORTED_WCHAR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LAST_SUPPORTED_WCHAR)


#define __suseconds_t_defined if True 
	expansions 
		 if True


#define IF_NOT_SHOWKEY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SHOWKEY)
		(__VA_ARGS__...) if def(CONFIG_SHOWKEY)


#define IF_NOT_FEATURE_INSTALL_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if True


#define ntpd_trivial_usage if True 
	expansions 
		 => "[-dnqNw"IF_FEATURE_NTPD_SERVER("l")"] [-S PROG] [-p PEER]..." if True


#define IF_NOT_FEATURE_HWCLOCK_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)


#define IF_FEATURE_POPMAILDIR_DELIVERY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_POPMAILDIR_DELIVERY)


#define IF_CROND if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CROND)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CROND)


#define expand_trivial_usage if True 
	expansions 
		 => "[-i] [-t N] [FILE]..." if True


#define IF_FSYNC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FSYNC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FSYNC)


#define ENABLE_WC if True 
	expansions 
		 => 0 if !def(CONFIG_WC)
		 => 1 if def(CONFIG_WC)


#define ENABLE_FEATURE_LAST_SMALL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LAST_SMALL)
		 => 1 if def(CONFIG_FEATURE_LAST_SMALL)


#define IF_HUSH_IF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_IF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_IF)


#define logname_example_usage if True 
	expansions 
		 => "$ logname\n" "root\n" if True


#define IF_FEATURE_MKSWAP_UUID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MKSWAP_UUID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MKSWAP_UUID)


#define IF_NOT_FEATURE_FIND_XDEV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_XDEV)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_XDEV)


#define ENABLE_FEATURE_FLOAT_SLEEP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FLOAT_SLEEP)
		 => 1 if def(CONFIG_FEATURE_FLOAT_SLEEP)


#define IF_FEATURE_ADDGROUP_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)


#define IF_LOSETUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOSETUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOSETUP)


#define __GID_T_TYPE if True 
	expansions 
		 => __U32_TYPE if True


#define nice_full_usage if True 
	expansions 
		 => "\n\n" "Change scheduling priority, run PROG\n" "\nOptions:" "\n	-n ADJUST	Adjust priority by ADJUST" if True


#define ENABLE_FEATURE_FIND_SIZE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_SIZE)
		 => 1 if def(CONFIG_FEATURE_FIND_SIZE)


#define ENABLE_FEATURE_LOGREAD_REDUCED_LOCKING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
		 => 1 if def(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)


#define IF_NOT_LOGNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOGNAME)
		(__VA_ARGS__...) if def(CONFIG_LOGNAME)


#define _SVID_SOURCE if True 
	expansions 
		 => 1 if True


#define syslogd_full_usage if True 
	expansions 
		 => "\n\n" "System logging utility.\n" "This version of syslogd ignores /etc/syslog.conf\n" "\nOptions:" "\n	-n		Run in foreground" "\n	-O FILE		Log to given file (default:/var/log/messages)" "\n	-l N		Set local log level" "\n	-S		Smaller logging output" IF_FEATURE_ROTATE_LOGFILE( "\n	-s SIZE		Max size (KB) before rotate (default:200KB, 0=off)" "\n	-b N		N rotated logs to keep (default:1, max=99, 0=purge)") IF_FEATURE_REMOTE_LOG( "\n	-R HOST[:PORT]	Log to IP or hostname on PORT (default PORT=514/UDP)" "\n	-L		Log locally and via network (default is network only if -R)") IF_FEATURE_SYSLOGD_DUP( "\n	-D		Drop duplicates") IF_FEATURE_IPC_SYSLOG( "\n	-C[size(KiB)]	Log to shared mem buffer (read it using logread)") if True


#define IF_MKFS_VFAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKFS_VFAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKFS_VFAT)


#define length_trivial_usage if True 
	expansions 
		 => "STRING" if True


#define IF_FEATURE_CHECK_UNICODE_IN_ENV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)


#define ENABLE_FEATURE_INITRD if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INITRD)
		 => 1 if def(CONFIG_FEATURE_INITRD)


#define IF_ASH_RANDOM_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_RANDOM_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_RANDOM_SUPPORT)


#define ENABLE_SESTATUS if True 
	expansions 
		 => 0 if !def(CONFIG_SESTATUS)
		 => 1 if def(CONFIG_SESTATUS)


#define IF_UDHCP_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) if True


#define zcip_full_usage if True 
	expansions 
		 => "\n\n" "Manage a ZeroConf IPv4 link-local address\n" "\nOptions:" "\n	-f		Run in foreground" "\n	-q		Quit after obtaining address" "\n	-r 169.254.x.x	Request this address first" "\n	-v		Verbose" "\n" "\nWith no -q, runs continuously monitoring for ARP conflicts," "\nexits only on I/O errors (link down etc)" if True


#define IF_NOT_LOADKMAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOADKMAP)
		(__VA_ARGS__...) if def(CONFIG_LOADKMAP)


#define ENABLE_FEATURE_LS_FOLLOWLINKS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_FOLLOWLINKS)
		 => 1 if def(CONFIG_FEATURE_LS_FOLLOWLINKS)


#define IF_NOT_FEATURE_CROND_DIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CROND_DIR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CROND_DIR)


#define __need_wchar_t if False 
	expansions 
		 if False


#define IF_FEATURE_INETD_SUPPORT_BUILTIN_ECHO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)


#define le32toh if True 
	expansions 
		(x) => (x) if True


#define killall_full_usage if True 
	expansions 
		 => "\n\n" "Send a signal (default: TERM) to given processes\n" "\nOptions:" "\n	-l	List all signal names and numbers" "\n	-q	Don't complain if no processes were killed" if True


#define ENABLE_LESS if True 
	expansions 
		 => 0 if !def(CONFIG_LESS)
		 => 1 if def(CONFIG_LESS)


#define ENABLE_RPM if True 
	expansions 
		 => 0 if !def(CONFIG_RPM)
		 => 1 if def(CONFIG_RPM)


#define ENABLE_FEATURE_TOP_DECIMALS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TOP_DECIMALS)
		 => 1 if def(CONFIG_FEATURE_TOP_DECIMALS)


#define fgrep_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define IF_DNSD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DNSD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DNSD)


#define __DBL_EPSILON__ if True 
	expansions 
		 => 2.2204460492503131e-16 if True


#define ENABLE_ASH_MAIL if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_MAIL)
		 => 1 if def(CONFIG_ASH_MAIL)


#define __clockid_time_t if False 
	expansions 



#define lpd_trivial_usage if True 
	expansions 
		 => "SPOOLDIR [HELPER [ARGS]]" if True


#define IF_FEATURE_PS_UNUSUAL_SYSTEMS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)


#define nameif_trivial_usage if True 
	expansions 
		 => "[-s] [-c FILE] [{IFNAME MACADDR}]" if True


#define __extern_always_inline if True 
	expansions 
		 => extern __always_inline __attribute__ ((__gnu_inline__, __artificial__)) if True


#define chown_full_usage if True 
	expansions 
		 => "\n\n" "Change the owner and/or group of each FILE to OWNER and/or GROUP\n" "\nOptions:" "\n	-R	Recurse" "\n	-h	Affect symlinks instead of symlink targets" "\n	-L	Traverse all symlinks to directories" "\n	-H	Traverse symlinks on command line only" "\n	-P	Don't traverse symlinks (default)" IF_DESKTOP( "\n	-c	List changed files" "\n	-v	List all files" "\n	-f	Hide errors" ) if True


#define ENABLE_FEATURE_MIME_CHARSET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MIME_CHARSET)
		 => 1 if def(CONFIG_FEATURE_MIME_CHARSET)


#define IF_UNIQ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNIQ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNIQ)


#define ENABLE_FEATURE_IP_ADDRESS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_ADDRESS)
		 => 1 if def(CONFIG_FEATURE_IP_ADDRESS)


#define ENABLE_RTCWAKE if True 
	expansions 
		 => 0 if !def(CONFIG_RTCWAKE)
		 => 1 if def(CONFIG_RTCWAKE)


#define IF_NOT_FEATURE_PREFER_IPV4_ADDRESS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)


#define flashcp_full_usage if True 
	expansions 
		 => "\n\n" "Copy an image to MTD device\n" "\nOptions:" "\n	-v	Verbose" if True


#define ENABLE_FEATURE_TR_CLASSES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TR_CLASSES)
		 => 1 if def(CONFIG_FEATURE_TR_CLASSES)


#define IF_SYNC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SYNC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SYNC)


#define ENABLE_PGREP if True 
	expansions 
		 => 0 if !def(CONFIG_PGREP)
		 => 1 if def(CONFIG_PGREP)


#define ENABLE_EXPR_MATH_SUPPORT_64 if True 
	expansions 
		 => 0 if !def(CONFIG_EXPR_MATH_SUPPORT_64)
		 => 1 if def(CONFIG_EXPR_MATH_SUPPORT_64)


#define ENABLE_FEATURE_DEVPTS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DEVPTS)
		 => 1 if def(CONFIG_FEATURE_DEVPTS)


#define IF_NOT_NC_EXTRA if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NC_EXTRA)
		(__VA_ARGS__...) if def(CONFIG_NC_EXTRA)


#define tail_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define ENABLE_INSTALL_SH_APPLET_HARDLINK if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_SH_APPLET_HARDLINK)
		 => 1 if def(CONFIG_INSTALL_SH_APPLET_HARDLINK)


#define expr_full_usage if True 
	expansions 
		 => "\n\n" "Print the value of EXPRESSION to stdout\n" "\n" "EXPRESSION may be:\n" "	ARG1 | ARG2	ARG1 if it is neither null nor 0, otherwise ARG2\n" "	ARG1 & ARG2	ARG1 if neither argument is null or 0, otherwise 0\n" "	ARG1 < ARG2	1 if ARG1 is less than ARG2, else 0. Similarly:\n" "	ARG1 <= ARG2\n" "	ARG1 = ARG2\n" "	ARG1 != ARG2\n" "	ARG1 >= ARG2\n" "	ARG1 > ARG2\n" "	ARG1 + ARG2	Sum of ARG1 and ARG2. Similarly:\n" "	ARG1 - ARG2\n" "	ARG1 * ARG2\n" "	ARG1 / ARG2\n" "	ARG1 % ARG2\n" "	STRING : REGEXP		Anchored pattern match of REGEXP in STRING\n" "	match STRING REGEXP	Same as STRING : REGEXP\n" "	substr STRING POS LENGTH Substring of STRING, POS counted from 1\n" "	index STRING CHARS	Index in STRING where any CHARS is found, or 0\n" "	length STRING		Length of STRING\n" "	quote TOKEN		Interpret TOKEN as a string, even if\n" "				it is a keyword like 'match' or an\n" "				operator like '/'\n" "	(EXPRESSION)		Value of EXPRESSION\n" "\n" "Beware that many operators need to be escaped or quoted for shells.\n" "Comparisons are arithmetic if both ARGs are numbers, else\n" "lexicographical. Pattern matches return the string matched between\n" "\\( and \\) or null; if \\( and \\) are not used, they return the number\n" "of characters matched or 0." if True


#define IF_FEATURE_FIND_LINKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_LINKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_LINKS)


#define ENABLE_CTTYHACK if True 
	expansions 
		 => 0 if !def(CONFIG_CTTYHACK)
		 => 1 if def(CONFIG_CTTYHACK)


#define _IO_MAGIC if True 
	expansions 
		 => 0xFBAD0000 if True


#define IF_HEAD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HEAD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HEAD)


#define ENABLE_EFENCE if True 
	expansions 
		 => 0 if !def(CONFIG_EFENCE)
		 => 1 if def(CONFIG_EFENCE)


#define _IO_off_t if True 
	expansions 
		 => _G_off_t if True


#define IF_NOT_FEATURE_LS_SORTFILES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_SORTFILES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_SORTFILES)


#define __S16_TYPE if True 
	expansions 
		 => short int if True


#define ENABLE_TTY if True 
	expansions 
		 => 0 if !def(CONFIG_TTY)
		 => 1 if def(CONFIG_TTY)


#define ENABLE_FEATURE_COMPRESS_BBCONFIG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_COMPRESS_BBCONFIG)
		 => 1 if def(CONFIG_FEATURE_COMPRESS_BBCONFIG)


#define ENABLE_FEATURE_POPMAILDIR_DELIVERY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
		 => 1 if def(CONFIG_FEATURE_POPMAILDIR_DELIVERY)


#define httpd_trivial_usage if True 
	expansions 
		 => "[-ifv[v]]" " [-c CONFFILE]" " [-p [IP:]PORT]" IF_FEATURE_HTTPD_SETUID(" [-u USER[:GRP]]") IF_FEATURE_HTTPD_BASIC_AUTH(" [-r REALM]") " [-h HOME]\n" "or httpd -d/-e" IF_FEATURE_HTTPD_AUTH_MD5("/-m") " STRING" if True


#define IF_NOT_CPIO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CPIO)
		(__VA_ARGS__...) if def(CONFIG_CPIO)


#define IF_NOT_FEATURE_MODUTILS_SYMBOLS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MODUTILS_SYMBOLS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MODUTILS_SYMBOLS)


#define IF_NOT_FEATURE_TAR_UNAME_GNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_UNAME_GNAME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_UNAME_GNAME)


#define IF_FEATURE_INETD_SUPPORT_BUILTIN_TIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)


#define bzip2_full_usage if True 
	expansions 
		 => "\n\n" "Compress FILEs (or stdin) with bzip2 algorithm\n" "\nOptions:" "\n	-1..9	Compression level" "\n	-d	Decompress" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define ENABLE_FEATURE_WTMP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_WTMP)
		 => 1 if def(CONFIG_FEATURE_WTMP)


#define IF_NOT_PING6 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PING6)
		(__VA_ARGS__...) if def(CONFIG_PING6)


#define lzma_trivial_usage if True 
	expansions 
		 => "-d [-cf] [FILE]..." if True


#define IF_UNICODE_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_SUPPORT)


#define IF_NOT_FEATURE_RUN_PARTS_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)


#define IF_IFUPDOWN_UDHCPC_CMD_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)


#define IF_BASE64 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BASE64)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BASE64)


#define IF_DEVFSD_MODLOAD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEVFSD_MODLOAD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEVFSD_MODLOAD)


#define df_trivial_usage if True 
	expansions 
		 => "[-Pk" IF_FEATURE_HUMAN_READABLE("mh") IF_FEATURE_DF_FANCY("ai] [-B SIZE") "] [FILESYSTEM]..." if True


#define tail_full_usage if True 
	expansions 
		 => "\n\n" "Print last 10 lines of each FILE (or stdin) to stdout.\n" "With more than one FILE, precede each with a filename header.\n" "\nOptions:" "\n	-f		Print data as file grows" IF_FEATURE_FANCY_TAIL( "\n	-s SECONDS	Wait SECONDS between reads with -f" ) "\n	-n N[kbm]	Print last N lines" IF_FEATURE_FANCY_TAIL( "\n	-c N[kbm]	Print last N bytes" "\n	-q		Never print headers" "\n	-v		Always print headers" "\n" "\nN may be suffixed by k (x1024), b (x512), or m (x1024^2)." "\nIf N starts with a '+', output begins with the Nth item from the start" "\nof each file, not from the end." ) if True


#define IF_FEATURE_TOP_SMP_CPU if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TOP_SMP_CPU)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TOP_SMP_CPU)


#define __USE_XOPEN2K8XSI if False 
	expansions 



#define IF_FEATURE_INSMOD_TRY_MMAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSMOD_TRY_MMAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSMOD_TRY_MMAP)


#define dnsd_full_usage if True 
	expansions 
		 => "\n\n" "Small static DNS server daemon\n" "\nOptions:" "\n	-c FILE	Config file" "\n	-t SEC	TTL" "\n	-p PORT	Listen on PORT" "\n	-i ADDR	Listen on ADDR" "\n	-d	Daemonize" "\n	-v	Verbose" "\n	-s	Send successful replies only. Use this if you want" "\n		to use /etc/resolv.conf with two nameserver lines:" "\n			nameserver DNSD_SERVER" "\n			nameserver NORNAL_DNS_SERVER" if True


#define ENABLE_DEFAULT_DEPMOD_FILE if True 
	expansions 
		 => 0 if !def(CONFIG_DEFAULT_DEPMOD_FILE)
		 => 1 if def(CONFIG_DEFAULT_DEPMOD_FILE)


#define _SIGSET_NWORDS if True 
	expansions 
		 => (1024 / (8 * sizeof (unsigned long int))) if True


#define IF_NOT_FEATURE_CALL_TELINIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CALL_TELINIT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CALL_TELINIT)


#define ENABLE_FEATURE_INSMOD_VERSION_CHECKING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
		 => 1 if def(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)


#define ENABLE_FEATURE_TASKSET_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TASKSET_FANCY)
		 => 1 if def(CONFIG_FEATURE_TASKSET_FANCY)


#define bunzip2_trivial_usage if True 
	expansions 
		 => "[-cf] [FILE]..." if True


#define IF_RM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RM)


#define IF_SV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SV)


#define IF_NOT_IFCONFIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IFCONFIG)
		(__VA_ARGS__...) if def(CONFIG_IFCONFIG)


#define __FLT_RADIX__ if True 
	expansions 
		 => 2 if True


#define IF_DEFAULT_MODULES_DIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEFAULT_MODULES_DIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEFAULT_MODULES_DIR)


#define IF_NICE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NICE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NICE)


#define IF_NOT_IPROUTE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPROUTE)
		(__VA_ARGS__...) if def(CONFIG_IPROUTE)


#define IF_FEATURE_IFUPDOWN_MAPPING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_MAPPING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_MAPPING)


#define IF_NOT_FEATURE_TAR_OLDGNU_COMPATIBILITY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)


#define runlevel_full_usage if True 
	expansions 
		 => "\n\n" "Find the current and previous system runlevel\n" "\n" "If no utmp FILE exists or if no runlevel record can be found,\n" "print \"unknown\"" if True


#define __LDBL_MIN_EXP__ if True 
	expansions 
		 => (-16381) if True


#define sha1sum_full_usage if True 
	expansions 
		 => "\n\n" "Print" IF_FEATURE_MD5_SHA1_SUM_CHECK(" or check") " SHA1 checksums" IF_FEATURE_MD5_SHA1_SUM_CHECK( "\n" "\nOptions:" "\n	-c	Check sums against given list" "\n	-s	Don't output anything, status code shows success" "\n	-w	Warn about improperly formatted checksum lines" ) if True


#define unix2dos_trivial_usage if True 
	expansions 
		 => "[-ud] [FILE]" if True


#define IF_NOT_HUSH_HELP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_HELP)
		(__VA_ARGS__...) if def(CONFIG_HUSH_HELP)


#define IF_NOT_RUNSVDIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RUNSVDIR)
		(__VA_ARGS__...) if def(CONFIG_RUNSVDIR)


#define ENABLE_FEATURE_HTTPD_CGI if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_CGI)
		 => 1 if def(CONFIG_FEATURE_HTTPD_CGI)


#define __LDBL_EPSILON__ if True 
	expansions 
		 => 1.08420217248550443401e-19L if True


#define IF_FEATURE_INETD_RPC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INETD_RPC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INETD_RPC)


#define IF_NOT_ASH_CMDCMD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_CMDCMD)
		(__VA_ARGS__...) if def(CONFIG_ASH_CMDCMD)


#define IF_NOT_FEATURE_IFUPDOWN_MAPPING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_MAPPING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_MAPPING)


#define FD_CLR if True 
	expansions 
		(fd, fdsetp) => __FD_CLR (fd, fdsetp) if True


#define ENABLE_FEATURE_VOLUMEID_ROMFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_ROMFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_ROMFS)


#define rev_trivial_usage if True 
	expansions 
		 => "[FILE]..." if True


#define _IO_DELETE_DONT_CLOSE if True 
	expansions 
		 => 0x40 if True


#define __DBL_HAS_INFINITY__ if True 
	expansions 
		 => 1 if True


#define ENABLE_ASH_BUILTIN_ECHO if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_BUILTIN_ECHO)
		 => 1 if def(CONFIG_ASH_BUILTIN_ECHO)


#define insmod_trivial_usage if True 
	expansions 
		 => IF_FEATURE_2_4_MODULES("[OPTIONS] MODULE ") IF_NOT_FEATURE_2_4_MODULES("FILE ") "[SYMBOL=VALUE]..." if True


#define ENABLE_RUN_PARTS if True 
	expansions 
		 => 0 if !def(CONFIG_RUN_PARTS)
		 => 1 if def(CONFIG_RUN_PARTS)


#define _IO_BAD_SEEN if True 
	expansions 
		 => 0x4000 if True


#define IF_NOT_FEATURE_INSMOD_LOADINKMEM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSMOD_LOADINKMEM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSMOD_LOADINKMEM)


#define __DEC64_MIN_EXP__ if True 
	expansions 
		 => (-382) if True


#define IF_FEATURE_FIND_PAREN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_PAREN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_PAREN)


#define __USE_POSIX if True 
	expansions 
		 => 1 if True


#define wget_trivial_usage if True 
	expansions 
		 => IF_FEATURE_WGET_LONG_OPTIONS( "[-c|--continue] [-s|--spider] [-q|--quiet] [-O|--output-document FILE]\n" "	[--header 'header: value'] [-Y|--proxy on/off] [-P DIR]\n" "	[--no-check-certificate] [-U|--user-agent AGENT]" IF_FEATURE_WGET_TIMEOUT("[-T SEC] ") " URL" ) IF_NOT_FEATURE_WGET_LONG_OPTIONS( "[-csq] [-O FILE] [-Y on/off] [-P DIR] [-U AGENT]" IF_FEATURE_WGET_TIMEOUT("[-T SEC] ") " URL" ) if True


#define IF_NOT_FEATURE_MDEV_LOAD_FIRMWARE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)


#define ENABLE_UNICODE_NEUTRAL_TABLE if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_NEUTRAL_TABLE)
		 => 1 if def(CONFIG_UNICODE_NEUTRAL_TABLE)


#define IF_NOT_SORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SORT)
		(__VA_ARGS__...) if def(CONFIG_SORT)


#define _IO_cleanup_region_end if True 
	expansions 
		(_Doit) if True


#define IF_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)


#define ENABLE_GETOPT if True 
	expansions 
		 => 0 if !def(CONFIG_GETOPT)
		 => 1 if def(CONFIG_GETOPT)


#define dpkg_deb_trivial_usage if True 
	expansions 
		 => "[-cefxX] FILE [argument]" if True


#define chvt_full_usage if True 
	expansions 
		 => "\n\n" "Change the foreground virtual terminal to /dev/ttyN" if True


#define ENABLE_SETUIDGID if True 
	expansions 
		 => 0 if !def(CONFIG_SETUIDGID)
		 => 1 if def(CONFIG_SETUIDGID)


#define losetup_notes_usage if True 
	expansions 
		 => "No arguments will display all current associations.\n" "One argument (losetup /dev/loop1) will display the current association\n" "(if any), or disassociate it (with -d). The display shows the offset\n" "and filename of the file the loop device is currently bound to.\n\n" "Two arguments (losetup /dev/loop1 file.img) create a new association,\n" "with an optional offset (-o 12345). Encryption is not yet supported.\n" "losetup -f will show the first loop free loop device\n\n" if True


#define setfont_full_usage if True 
	expansions 
		 => "\n\n" "Load a console font\n" "\nOptions:" "\n	-m MAPFILE	Load console screen map" "\n	-C TTY		Affect TTY instead of /dev/tty" if True


#define IF_NOT_RUNLEVEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RUNLEVEL)
		(__VA_ARGS__...) if def(CONFIG_RUNLEVEL)


#define IF_NOT_ASH_EXPAND_PRMT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_EXPAND_PRMT)
		(__VA_ARGS__...) if def(CONFIG_ASH_EXPAND_PRMT)


#define resize_full_usage if True 
	expansions 
		 => "\n\n" "Resize the screen" if True


#define tr_full_usage if True 
	expansions 
		 => "\n\n" "Translate, squeeze, or delete characters from stdin, writing to stdout\n" "\nOptions:" "\n	-c	Take complement of STRING1" "\n	-d	Delete input characters coded STRING1" "\n	-s	Squeeze multiple output characters of STRING2 into one character" if True


#define ENABLE_TRACEROUTE if True 
	expansions 
		 => 0 if !def(CONFIG_TRACEROUTE)
		 => 1 if def(CONFIG_TRACEROUTE)


#define IF_FEATURE_TEE_USE_BLOCK_IO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TEE_USE_BLOCK_IO)


#define ENABLE_FEATURE_EDITING_ASK_TERMINAL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
		 => 1 if def(CONFIG_FEATURE_EDITING_ASK_TERMINAL)


#define ENABLE_HUSH_JOB if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_JOB)
		 => 1 if def(CONFIG_HUSH_JOB)


#define EXIT_FAILURE if True 
	expansions 
		 => 1 if True


#define IF_CHCON if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHCON)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHCON)


#define IF_NOT_REFORMIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_REFORMIME)
		(__VA_ARGS__...) if def(CONFIG_REFORMIME)


#define fuser_trivial_usage if True 
	expansions 
		 => "[OPTIONS] FILE or PORT/PROTO" if True


#define __need_NULL if False 
	expansions 
		 if False


#define kill_full_usage if True 
	expansions 
		 => "\n\n" "Send a signal (default: TERM) to given PIDs\n" "\nOptions:" "\n	-l	List all signal names and numbers" if True


#define IF_NOT_MAKEDEVS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MAKEDEVS)
		(__VA_ARGS__...) if def(CONFIG_MAKEDEVS)


#define ENABLE_UBIATTACH if True 
	expansions 
		 => 0 if !def(CONFIG_UBIATTACH)
		 => 1 if def(CONFIG_UBIATTACH)


#define IF_SETSID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETSID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETSID)


#define IF_NOT_KBD_MODE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_KBD_MODE)
		(__VA_ARGS__...) if def(CONFIG_KBD_MODE)


#define ENABLE_FEATURE_TRACEROUTE_VERBOSE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
		 => 1 if def(CONFIG_FEATURE_TRACEROUTE_VERBOSE)


#define tr_example_usage if True 
	expansions 
		 => "$ echo \"gdkkn vnqkc\" | tr [a-y] [b-z]\n" "hello world\n" if True


#define tar_trivial_usage if True 
	expansions 
		 => "-[" IF_FEATURE_TAR_CREATE("c") "xt" IF_FEATURE_SEAMLESS_GZ("z") IF_FEATURE_SEAMLESS_BZ2("j") IF_FEATURE_SEAMLESS_LZMA("a") IF_FEATURE_SEAMLESS_Z("Z") IF_FEATURE_TAR_NOPRESERVE_TIME("m") "vO] " IF_FEATURE_TAR_FROM("[-X FILE] ") "[-f TARFILE] [-C DIR] [FILE]..." if True


#define _T_WCHAR_ if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_TUNCTL_UG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TUNCTL_UG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TUNCTL_UG)


#define chmod_trivial_usage if True 
	expansions 
		 => "[-R"IF_DESKTOP("cvf")"] MODE[,MODE]... FILE..." if True


#define __bswap_constant_32 if True 
	expansions 
		(x) => ((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | (((x) & 0x0000ff00) << 8) | (((x) & 0x000000ff) << 24)) if True


#define ENABLE_FEATURE_CHCON_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_CHCON_LONG_OPTIONS)


#define IF_NOT_FEATURE_NETSTAT_WIDE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_NETSTAT_WIDE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_NETSTAT_WIDE)


#define IF_FEATURE_CHOWN_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)


#define WNOWAIT if True 
	expansions 
		 => 0x01000000 if True


#define IF_NOT_FEATURE_IPC_SYSLOG_BUFFER_SIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)


#define IF_NOT_FEATURE_CP_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CP_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CP_LONG_OPTIONS)


#define IF_EXTRA_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EXTRA_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EXTRA_COMPAT)


#define IF_NOT_RUN_PARTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RUN_PARTS)
		(__VA_ARGS__...) if def(CONFIG_RUN_PARTS)


#define ENABLE_FEATURE_EDITING_HISTORY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING_HISTORY)
		 => 1 if def(CONFIG_FEATURE_EDITING_HISTORY)


#define hostid_full_usage if True 
	expansions 
		 => "\n\n" "Print out a unique 32-bit identifier for the machine" if True


#define ENABLE_FEATURE_VI_WIN_RESIZE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_WIN_RESIZE)
		 => 1 if def(CONFIG_FEATURE_VI_WIN_RESIZE)


#define IF_FEATURE_GZIP_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_GZIP_LONG_OPTIONS)


#define IF_WERROR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WERROR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WERROR)


#define IF_FEATURE_RUNSVDIR_LOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_RUNSVDIR_LOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_RUNSVDIR_LOG)


#define ENABLE_FEATURE_MAKEDEVS_LEAF if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MAKEDEVS_LEAF)
		 => 1 if def(CONFIG_FEATURE_MAKEDEVS_LEAF)


#define iplink_trivial_usage if True 
	expansions 
		 => "{ set DEVICE { up | down | arp { on | off } | show [DEVICE] }" if True


#define IF_DEVFSD_FG_NP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEVFSD_FG_NP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEVFSD_FG_NP)


#define _G_BUFSIZ if True 
	expansions 
		 => 8192 if True


#define IF_FEATURE_TELNETD_STANDALONE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TELNETD_STANDALONE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TELNETD_STANDALONE)


#define IF_RUNSV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RUNSV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RUNSV)


#define ENABLE_FEATURE_BEEP_FREQ if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BEEP_FREQ)
		 => 1 if def(CONFIG_FEATURE_BEEP_FREQ)


#define IF_NOT_FEATURE_CHECK_NAMES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHECK_NAMES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHECK_NAMES)


#define _G_LSEEK64 if True 
	expansions 
		 => __lseek64 if True


#define IF_NOT_DUMPLEASES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DUMPLEASES)
		(__VA_ARGS__...) if def(CONFIG_DUMPLEASES)


#define IF_NOT_FUSER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FUSER)
		(__VA_ARGS__...) if def(CONFIG_FUSER)


#define ENABLE_SETSID if True 
	expansions 
		 => 0 if !def(CONFIG_SETSID)
		 => 1 if def(CONFIG_SETSID)


#define mkfs_minix_trivial_usage if True 
	expansions 
		 => "[-c | -l FILE] [-nXX] [-iXX] BLOCKDEV [KBYTES]" if True


#define IF_NOT_FEATURE_FIND_PRINT0 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_PRINT0)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_PRINT0)


#define IF_NOT_FEATURE_RUNSVDIR_LOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_RUNSVDIR_LOG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_RUNSVDIR_LOG)


#define ENABLE_RM if True 
	expansions 
		 => 0 if !def(CONFIG_RM)
		 => 1 if def(CONFIG_RM)


#define IF_NOT_EXPAND if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EXPAND)
		(__VA_ARGS__...) if def(CONFIG_EXPAND)


#define ENABLE_CROSS_COMPILER_PREFIX if True 
	expansions 
		 => 0 if !def(CONFIG_CROSS_COMPILER_PREFIX)
		 => 1 if def(CONFIG_CROSS_COMPILER_PREFIX)


#define ENABLE_IFCONFIG if True 
	expansions 
		 => 0 if !def(CONFIG_IFCONFIG)
		 => 1 if def(CONFIG_IFCONFIG)


#define ENABLE_FEATURE_ALLOW_EXEC if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ALLOW_EXEC)
		 => 1 if def(CONFIG_FEATURE_ALLOW_EXEC)


#define ifplugd_full_usage if True 
	expansions 
		 => "\n\n" "Network interface plug detection daemon\n" "\nOptions:" "\n	-n		Don't daemonize" "\n	-s		Don't log to syslog" "\n	-i IFACE	Interface" "\n	-f/-F		Treat link detection error as link down/link up" "\n			(otherwise exit on error)" "\n	-a		Don't up interface at each link probe" "\n	-M		Monitor creation/destruction of interface" "\n			(otherwise it must exist)" "\n	-r PROG		Script to run" "\n	-x ARG		Extra argument for script" "\n	-I		Don't exit on nonzero exit code from script" "\n	-p		Don't run script on daemon startup" "\n	-q		Don't run script on daemon quit" "\n	-l		Run script on startup even if no cable is detected" "\n	-t SECS		Poll time in seconds" "\n	-u SECS		Delay before running script after link up" "\n	-d SECS		Delay after link down" "\n	-m MODE		API mode (mii, priv, ethtool, wlan, iff, auto)" "\n	-k		Kill running daemon" if True


#define ENABLE_LOGNAME if True 
	expansions 
		 => 0 if !def(CONFIG_LOGNAME)
		 => 1 if def(CONFIG_LOGNAME)


#define ENABLE_SETENFORCE if True 
	expansions 
		 => 0 if !def(CONFIG_SETENFORCE)
		 => 1 if def(CONFIG_SETENFORCE)


#define init_full_usage if True 
	expansions 
		 => "\n\n" "Init is the parent of all processes" if True


#define CONFIG_FEATURE_INSTALL_LONG_OPTIONS if False 
	expansions 



#define ENABLE_FEATURE_TAR_UNAME_GNAME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_UNAME_GNAME)
		 => 1 if def(CONFIG_FEATURE_TAR_UNAME_GNAME)


#define __COMPAR_FN_T if True 
	expansions 
		 if True


#define _G_HAVE_BOOL if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_START_STOP_DAEMON_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)


#define ENABLE_EXTRA_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_EXTRA_COMPAT)
		 => 1 if def(CONFIG_EXTRA_COMPAT)


#define ENABLE_FEATURE_IFUPDOWN_IPV4 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_IPV4)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_IPV4)


#define IF_NOT_READAHEAD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_READAHEAD)
		(__VA_ARGS__...) if def(CONFIG_READAHEAD)


#define printf_full_usage if True 
	expansions 
		 => "\n\n" "Format and print ARGUMENT(s) according to FORMAT,\n" "where FORMAT controls the output exactly as in C printf" if True


#define IF_NOT_FEATURE_VOLUMEID_JFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_JFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_JFS)


#define tftpd_trivial_usage if True 
	expansions 
		 => "[-cr] [-u USER] [DIR]" if True


#define devfsd_full_usage if True 
	expansions 
		 => "\n\n" "Manage devfs permissions and old device name symlinks\n" "\nOptions:" "\n	mntpnt	The mount point where devfs is mounted" "\n	-v	Print the protocol version numbers for devfsd" "\n		and the kernel-side protocol version and exit" IF_DEVFSD_FG_NP( "\n	-fg	Run in foreground" "\n	-np	Exit after parsing the configuration file" "\n		and processing synthetic REGISTER events," "\n		don't poll for events" ) if True


#define htobe64 if True 
	expansions 
		(x) => __bswap_64 (x) if True


#define IF_NOT_FEATURE_FIND_TYPE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_TYPE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_TYPE)


#define IF_NOT_FEATURE_HTTPD_CGI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_CGI)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_CGI)


#define IF_NOT_TELNETD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TELNETD)
		(__VA_ARGS__...) if def(CONFIG_TELNETD)


#define IF_FEATURE_SECURETTY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SECURETTY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SECURETTY)


#define IF_FEATURE_ALLOW_EXEC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ALLOW_EXEC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ALLOW_EXEC)


#define IF_NOT_FGCONSOLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FGCONSOLE)
		(__VA_ARGS__...) if def(CONFIG_FGCONSOLE)


#define IF_TRACEROUTE6 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TRACEROUTE6)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TRACEROUTE6)


#define ENABLE_FEATURE_UNIX_LOCAL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UNIX_LOCAL)
		 => 1 if def(CONFIG_FEATURE_UNIX_LOCAL)


#define IF_NOT_TASKSET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TASKSET)
		(__VA_ARGS__...) if def(CONFIG_TASKSET)


#define IF_NOT_FEATURE_VI_8BIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_8BIT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_8BIT)


#define IF_NOT_FEATURE_ACPID_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ACPID_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ACPID_COMPAT)


#define sed_example_usage if True 
	expansions 
		 => "$ echo \"foo\" | sed -e 's/f[a-zA-Z]o/bar/g'\n" "bar\n" if True


#define IF_NOT_FEATURE_INETD_SUPPORT_BUILTIN_ECHO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)


#define ENABLE_FEATURE_MOUNT_VERBOSE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_VERBOSE)
		 => 1 if def(CONFIG_FEATURE_MOUNT_VERBOSE)


#define IF_NOT_UNICODE_BIDI_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNICODE_BIDI_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_UNICODE_BIDI_SUPPORT)


#define ENABLE_FEATURE_SUID_CONFIG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SUID_CONFIG)
		 => 1 if def(CONFIG_FEATURE_SUID_CONFIG)


#define __bswap_constant_64 if True 
	expansions 
		(x) => ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56)) if True


#define IF_PSCAN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PSCAN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PSCAN)


#define ENABLE_FEATURE_HWCLOCK_ADJTIME_FHS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
		 => 1 if def(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)


#define IF_NOT_INSTALL_APPLET_HARDLINKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_APPLET_HARDLINKS)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_APPLET_HARDLINKS)


#define IF_MODPROBE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MODPROBE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MODPROBE)


#define ENABLE_FEATURE_SU_SYSLOG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SU_SYSLOG)
		 => 1 if def(CONFIG_FEATURE_SU_SYSLOG)


#define __TIME_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define IF_NOT_FEATURE_FIND_NEWER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_NEWER)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_NEWER)


#define poweroff_full_usage if True 
	expansions 
		 => "\n\n" "Halt and shut off power\n" "\nOptions:" "\n	-d SEC	Delay interval" "\n	-n	Do not sync" "\n	-f	Force (don't go through init)" if True


#define ENABLE_SCRIPTREPLAY if True 
	expansions 
		 => 0 if !def(CONFIG_SCRIPTREPLAY)
		 => 1 if def(CONFIG_SCRIPTREPLAY)


#define IF_NOT_FTPPUT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FTPPUT)
		(__VA_ARGS__...) if def(CONFIG_FTPPUT)


#define tee_trivial_usage if True 
	expansions 
		 => "[-ai] [FILE]..." if True


#define ENABLE_FEATURE_MOUNT_LOOP_CREATE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
		 => 1 if def(CONFIG_FEATURE_MOUNT_LOOP_CREATE)


#define IF_NOT_FEATURE_EDITING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING)


#define IF_NOT_CHCON if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHCON)
		(__VA_ARGS__...) if def(CONFIG_CHCON)


#define pidof_example_usage if True 
	expansions 
		 => "$ pidof init\n" "1\n" IF_FEATURE_PIDOF_OMIT( "$ pidof /bin/sh\n20351 5973 5950\n") IF_FEATURE_PIDOF_OMIT( "$ pidof /bin/sh -o %PPID\n20351 5950") if True


#define ENABLE_FEATURE_CPIO_P if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CPIO_P)
		 => 1 if def(CONFIG_FEATURE_CPIO_P)


#define fdisk_full_usage if True 
	expansions 
		 => "\n\n" "Change partition table\n" "\nOptions:" "\n	-u		Start and End are in sectors (instead of cylinders)" "\n	-l		Show partition table for each DISK, then exit" IF_FEATURE_FDISK_BLKSIZE( "\n	-s		Show partition sizes in kb for each DISK, then exit" ) "\n	-b 2048		(for certain MO disks) use 2048-byte sectors" "\n	-C CYLINDERS	Set number of cylinders/heads/sectors" "\n	-H HEADS" "\n	-S SECTORS" if True


#define IF_FEATURE_CHAT_CLR_ABORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_CLR_ABORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_CLR_ABORT)


#define crond_trivial_usage if True 
	expansions 
		 => "-fbS -l N " IF_FEATURE_CROND_D("-d N ") "-L LOGFILE -c DIR" if True


#define IF_CKSUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CKSUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CKSUM)


#define IF_NOT_FEATURE_FANCY_SLEEP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FANCY_SLEEP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FANCY_SLEEP)


#define IF_FEATURE_IP_RULE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_RULE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_RULE)


#define ENABLE_BBCONFIG if True 
	expansions 
		 => 0 if !def(CONFIG_BBCONFIG)
		 => 1 if def(CONFIG_BBCONFIG)


#define _G_va_list if True 
	expansions 
		 => __gnuc_va_list if True


#define IF_NOT_FEATURE_REMOTE_LOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_REMOTE_LOG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_REMOTE_LOG)


#define ENABLE_MDEV if True 
	expansions 
		 => 0 if !def(CONFIG_MDEV)
		 => 1 if def(CONFIG_MDEV)


#define IF_FEATURE_RESIZE_PRINT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_RESIZE_PRINT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_RESIZE_PRINT)


#define __SIZEOF_PTHREAD_MUTEXATTR_T if True 
	expansions 
		 => 4 if True


#define IF_DEPMOD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEPMOD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEPMOD)


#define ls_trivial_usage if True 
	expansions 
		 => "[-1Aa" IF_FEATURE_LS_TIMESTAMPS("c") "Cd" IF_FEATURE_LS_TIMESTAMPS("e") IF_FEATURE_LS_FILETYPES("F") "iln" IF_FEATURE_LS_FILETYPES("p") IF_FEATURE_LS_FOLLOWLINKS("L") IF_FEATURE_LS_RECURSIVE("R") IF_FEATURE_LS_SORTFILES("rS") "s" IF_FEATURE_AUTOWIDTH("T") IF_FEATURE_LS_TIMESTAMPS("tu") IF_FEATURE_LS_SORTFILES("v") IF_FEATURE_AUTOWIDTH("w") "x" IF_FEATURE_LS_SORTFILES("X") IF_FEATURE_HUMAN_READABLE("h") "k" IF_SELINUX("K") "] [FILE]..." if True


#define tac_full_usage if True 
	expansions 
		 => "\n\n" "Concatenate FILEs and print them in reverse" if True


#define ENABLE_FEATURE_MOUNT_FAKE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_FAKE)
		 => 1 if def(CONFIG_FEATURE_MOUNT_FAKE)


#define ENABLE_FEATURE_HWCLOCK_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)


#define vlock_trivial_usage if True 
	expansions 
		 => "[-a]" if True


#define __lldiv_t_defined if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_NTPD_SERVER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_NTPD_SERVER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_NTPD_SERVER)


#define lpr_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-P	lp service to connect to (else uses $PRINTER)" "\n	-m	Send mail on completion" "\n	-h	Print banner page too" "\n	-V	Verbose" if True


#define IF_NOT_IPRULE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPRULE)
		(__VA_ARGS__...) if def(CONFIG_IPRULE)


#define IF_NOT_LAST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LAST)
		(__VA_ARGS__...) if def(CONFIG_LAST)


#define ENABLE_MPSTAT if True 
	expansions 
		 => 0 if !def(CONFIG_MPSTAT)
		 => 1 if def(CONFIG_MPSTAT)


#define runsv_full_usage if True 
	expansions 
		 => "\n\n" "Start and monitor a service and optionally an appendant log service" if True


#define ENABLE_FEATURE_LS_TIMESTAMPS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_TIMESTAMPS)
		 => 1 if def(CONFIG_FEATURE_LS_TIMESTAMPS)


#define IF_NOT_LOCALE_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOCALE_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_LOCALE_SUPPORT)


#define IF_LOGIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOGIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOGIN)


#define IF_NOT_FEATURE_IP_RULE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_RULE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_RULE)


#define ENABLE_HUSH_BASH_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_BASH_COMPAT)
		 => 1 if def(CONFIG_HUSH_BASH_COMPAT)


#define ENABLE_FEATURE_FIND_NEWER if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_NEWER)
		 => 1 if def(CONFIG_FEATURE_FIND_NEWER)


#define IF_NOT_FEATURE_LESS_LINENUMS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_LINENUMS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_LINENUMS)


#define IF_FEATURE_MAKEDEVS_TABLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MAKEDEVS_TABLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MAKEDEVS_TABLE)


#define ENABLE_FEATURE_TAR_TO_COMMAND if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_TO_COMMAND)
		 => 1 if def(CONFIG_FEATURE_TAR_TO_COMMAND)


#define __WORDSIZE if True 
	expansions 
		 => 64 if True


#define IF_FEATURE_MDEV_RENAME_REGEXP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MDEV_RENAME_REGEXP)


#define ENABLE_FEATURE_SGI_LABEL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SGI_LABEL)
		 => 1 if def(CONFIG_FEATURE_SGI_LABEL)


#define __LDBL_MAX_EXP__ if True 
	expansions 
		 => 16384 if True


#define __SSE2__ if True 
	expansions 
		 => 1 if True


#define ENABLE_INSTALL_SH_APPLET_SYMLINK if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_SH_APPLET_SYMLINK)
		 => 1 if def(CONFIG_INSTALL_SH_APPLET_SYMLINK)


#define IF_FEATURE_COMPRESS_USAGE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_COMPRESS_USAGE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_COMPRESS_USAGE)


#define ENABLE_RMMOD if True 
	expansions 
		 => 0 if !def(CONFIG_RMMOD)
		 => 1 if def(CONFIG_RMMOD)


#define IF_FEATURE_KILL_REMOVED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_KILL_REMOVED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_KILL_REMOVED)


#define IF_DELUSER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DELUSER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DELUSER)


#define __bswap_64 if True 
	expansions 
		(x) => (__extension__ ({ register unsigned long __v, __x = (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_64 (__x); else __asm__ ("bswap %q0" : "=r" (__v) : "0" (__x)); __v; })) if True


#define ENABLE_FEATURE_USE_INITTAB if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_USE_INITTAB)
		 => 1 if def(CONFIG_FEATURE_USE_INITTAB)


#define IF_NOT_NETSTAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NETSTAT)
		(__VA_ARGS__...) if def(CONFIG_NETSTAT)


#define IF_FEATURE_VI_OPTIMIZE_CURSOR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)


#define IF_TELINIT_PATH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TELINIT_PATH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TELINIT_PATH)


#define ENABLE_ASH_ALIAS if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_ALIAS)
		 => 1 if def(CONFIG_ASH_ALIAS)


#define lsusb_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_ASH_GETOPTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_GETOPTS)
		(__VA_ARGS__...) if def(CONFIG_ASH_GETOPTS)


#define IF_FEATURE_TAR_GNU_EXTENSIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)


#define IF_NOT_FEATURE_WC_LARGE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_WC_LARGE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_WC_LARGE)


#define __JCPP__ if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_RUNCON_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)


#define ENABLE_ADJTIMEX if True 
	expansions 
		 => 0 if !def(CONFIG_ADJTIMEX)
		 => 1 if def(CONFIG_ADJTIMEX)


#define softlimit_trivial_usage if True 
	expansions 
		 => "[-a BYTES] [-m BYTES] [-d BYTES] [-s BYTES] [-l BYTES]\n" "	[-f BYTES] [-c BYTES] [-r BYTES] [-o N] [-p N] [-t N]\n" "	PROG ARGS" if True


#define ENABLE_FEATURE_LESS_DASHCMD if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_DASHCMD)
		 => 1 if def(CONFIG_FEATURE_LESS_DASHCMD)


#define ENABLE_TASKSET if True 
	expansions 
		 => 0 if !def(CONFIG_TASKSET)
		 => 1 if def(CONFIG_TASKSET)


#define IF_NANDWRITE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NANDWRITE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NANDWRITE)


#define true_full_usage if True 
	expansions 
		 => "\n\n" "Return an exit code of TRUE (0)" if True


#define IF_NOT_FEATURE_LESS_DASHCMD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_DASHCMD)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_DASHCMD)


#define sulogin_full_usage if True 
	expansions 
		 => "\n\n" "Single user login\n" "\nOptions:" "\n	-t N	Timeout" if True


#define tar_example_usage if True 
	expansions 
		 => "$ zcat /tmp/tarball.tar.gz | tar -xf -\n" "$ tar -cf /tmp/tarball.tar /usr/local\n" if True


#define nslookup_full_usage if True 
	expansions 
		 => "\n\n" "Query the nameserver for the IP address of the given HOST\n" "optionally using a specified DNS server" if True


#define __DEC64_MAX_EXP__ if True 
	expansions 
		 => 385 if True


#define remove_shell_trivial_usage if True 
	expansions 
		 => "SHELL..." if True


#define IF_FEATURE_MOUNT_NFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_NFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_NFS)


#define IF_FEATURE_TFTP_PROGRESS_BAR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TFTP_PROGRESS_BAR)


#define IF_HOSTNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HOSTNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HOSTNAME)


#define IF_NOT_USLEEP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_USLEEP)
		(__VA_ARGS__...) if def(CONFIG_USLEEP)


#define IF_NOT_SLEEP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SLEEP)
		(__VA_ARGS__...) if def(CONFIG_SLEEP)


#define SEEK_SET if True 
	expansions 
		 => 0 if True


#define IF_NOT_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)


#define IF_FEATURE_VOLUMEID_NTFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_NTFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_NTFS)


#define ENABLE_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
		 => 1 if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)


#define IF_FEATURE_SUN_LABEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SUN_LABEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SUN_LABEL)


#define unlzop_trivial_usage if True 
	expansions 
		 => "[-cfvCF] [FILE]..." if True


#define IF_FEATURE_USE_INITTAB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_USE_INITTAB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_USE_INITTAB)


#define ENABLE_FEATURE_SYSLOGD_DUP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SYSLOGD_DUP)
		 => 1 if def(CONFIG_FEATURE_SYSLOGD_DUP)


#define __FLT_MAX__ if True 
	expansions 
		 => 3.40282347e+38F if True


#define ENABLE_FEATURE_HTTPD_PROXY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_PROXY)
		 => 1 if def(CONFIG_FEATURE_HTTPD_PROXY)


#define IF_NOT_FEATURE_TELNETD_STANDALONE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TELNETD_STANDALONE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TELNETD_STANDALONE)


#define ENABLE_ASH_BUILTIN_TEST if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_BUILTIN_TEST)
		 => 1 if def(CONFIG_ASH_BUILTIN_TEST)


#define IF_TEST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TEST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TEST)


#define IF_LSUSB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LSUSB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LSUSB)


#define IF_NOT_MODPROBE_SMALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MODPROBE_SMALL)
		(__VA_ARGS__...) if def(CONFIG_MODPROBE_SMALL)


#define _ALLOCA_H if True 
	expansions 
		 => 1 if True


#define ENABLE_ENV if True 
	expansions 
		 => 0 if !def(CONFIG_ENV)
		 => 1 if def(CONFIG_ENV)


#define ENABLE_FEATURE_IFCONFIG_BROADCAST_PLUS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
		 => 1 if def(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)


#define loadfont_full_usage if True 
	expansions 
		 => "\n\n" "Load a console font from stdin" if True


#define __REDIRECT if True 
	expansions 
		(name, proto, alias) => name proto __asm__ (__ASMNAME (#alias)) if True


#define IF_FEATURE_VOLUMEID_EXT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_EXT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_EXT)


#define IF_FEATURE_TRACEROUTE_SOURCE_ROUTE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)


#define IF_NOT_FEATURE_START_STOP_DAEMON_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)


#define ENABLE_UNXZ if True 
	expansions 
		 => 0 if !def(CONFIG_UNXZ)
		 => 1 if def(CONFIG_UNXZ)


#define IF_NOT_DU if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DU)
		(__VA_ARGS__...) if def(CONFIG_DU)


#define IF_NOT_FEATURE_TAR_FROM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_FROM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_FROM)


#define IF_NOT_FEATURE_IFUPDOWN_IPV6 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_IPV6)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_IPV6)


#define IF_NOT_INSTALL_APPLET_SYMLINKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_APPLET_SYMLINKS)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_APPLET_SYMLINKS)


#define IF_NOT_NAMEIF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NAMEIF)
		(__VA_ARGS__...) if def(CONFIG_NAMEIF)


#define ENABLE_AR if True 
	expansions 
		 => 0 if !def(CONFIG_AR)
		 => 1 if def(CONFIG_AR)


#define IF_FEATURE_MOUNT_FAKE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_FAKE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_FAKE)


#define IF_NOT_FEATURE_VERBOSE_USAGE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VERBOSE_USAGE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VERBOSE_USAGE)


#define ENABLE_FEATURE_FIND_MAXDEPTH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_MAXDEPTH)
		 => 1 if def(CONFIG_FEATURE_FIND_MAXDEPTH)


#define watch_example_usage if True 
	expansions 
		 => "$ watch date\n" "Mon Dec 17 10:31:40 GMT 2000\n" "Mon Dec 17 10:31:42 GMT 2000\n" "Mon Dec 17 10:31:44 GMT 2000" if True


#define lsmod_trivial_usage if True 
	expansions 
		 => "" if True


#define freeramdisk_example_usage if True 
	expansions 
		 => "$ freeramdisk /dev/ram2\n" if True


#define _IO_USER_BUF if True 
	expansions 
		 => 1 if True


#define IF_ROUTE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ROUTE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ROUTE)


#define reformime_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define __errordecl if True 
	expansions 
		(name, msg) => extern void name (void) __attribute__((__error__ (msg))) if True


#define ps_full_usage if True 
	expansions 
		 => "\n\n" "Show list of processes\n" USAGE_PS IF_SELINUX( "\n	-Z	Show selinux context" ) IF_FEATURE_PS_WIDE( "\n	w	Wide output" ) if !def(CONFIG_DESKTOP)
		 => "\n\n" "Show list of processes\n" "\nOptions:" "\n	-o COL1,COL2=HEADER	Select columns for display" IF_FEATURE_SHOW_THREADS( "\n	-T			Show threads" ) if def(CONFIG_DESKTOP)


#define IF_UDHCP_DEBUG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UDHCP_DEBUG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UDHCP_DEBUG)


#define IF_CHPASSWD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHPASSWD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHPASSWD)


#define __need_malloc_and_calloc if False 
	expansions 



#define IF_FEATURE_WTMP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_WTMP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_WTMP)


#define ENABLE_INCLUDE_SUSv2 if True 
	expansions 
		 => 0 if !def(CONFIG_INCLUDE_SUSv2)
		 => 1 if def(CONFIG_INCLUDE_SUSv2)


#define IF_NOT_FEATURE_VI_SEARCH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_SEARCH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_SEARCH)


#define __WCHAR_MAX__ if True 
	expansions 
		 => 2147483647 if True


#define ENABLE_FEATURE_BRCTL_SHOW if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BRCTL_SHOW)
		 => 1 if def(CONFIG_FEATURE_BRCTL_SHOW)


#define IF_NOT_TRUE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TRUE)
		(__VA_ARGS__...) if def(CONFIG_TRUE)


#define IF_NOT_STTY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_STTY)
		(__VA_ARGS__...) if def(CONFIG_STTY)


#define IF_AWK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_AWK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_AWK)


#define IF_NOT_MKTEMP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKTEMP)
		(__VA_ARGS__...) if def(CONFIG_MKTEMP)


#define ENABLE_FEATURE_IP_ROUTE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_ROUTE)
		 => 1 if def(CONFIG_FEATURE_IP_ROUTE)


#define mkdir_trivial_usage if True 
	expansions 
		 => "[OPTIONS] DIRECTORY..." if True


#define IF_FEATURE_CROND_D if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CROND_D)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CROND_D)


#define IF_SWAPONOFF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SWAPONOFF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SWAPONOFF)


#define IF_UNZIP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNZIP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNZIP)


#define ENABLE_NSLOOKUP if True 
	expansions 
		 => 0 if !def(CONFIG_NSLOOKUP)
		 => 1 if def(CONFIG_NSLOOKUP)


#define remove_shell_full_usage if True 
	expansions 
		 => "\n\n" "Remove SHELLs from /etc/shells" if True


#define ENABLE_MORE if True 
	expansions 
		 => 0 if !def(CONFIG_MORE)
		 => 1 if def(CONFIG_MORE)


#define tunctl_full_usage if True 
	expansions 
		 => "\n\n" "Create or delete tun interfaces\n" "\nOptions:" "\n	-f name		tun device (/dev/net/tun)" "\n	-t name		Create iface 'name'" "\n	-d name		Delete iface 'name'" IF_FEATURE_TUNCTL_UG( "\n	-u owner	Set iface owner" "\n	-g group	Set iface group" "\n	-b		Brief output" ) if True


#define IF_NOT_LZOP_COMPR_HIGH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LZOP_COMPR_HIGH)
		(__VA_ARGS__...) if def(CONFIG_LZOP_COMPR_HIGH)


#define ENABLE_FEATURE_CALL_TELINIT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CALL_TELINIT)
		 => 1 if def(CONFIG_FEATURE_CALL_TELINIT)


#define ENABLE_FEATURE_RUNSVDIR_LOG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_RUNSVDIR_LOG)
		 => 1 if def(CONFIG_FEATURE_RUNSVDIR_LOG)


#define IF_NOT_FEATURE_IPC_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IPC_SYSLOG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IPC_SYSLOG)


#define IF_NOT_CP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CP)
		(__VA_ARGS__...) if def(CONFIG_CP)


#define IF_FEATURE_CP_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CP_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CP_LONG_OPTIONS)


#define IF_FEATURE_AUTOWIDTH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_AUTOWIDTH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_AUTOWIDTH)


#define __wur if True 
	expansions 
		 if True


#define __SIZEOF_PTHREAD_RWLOCKATTR_T if True 
	expansions 
		 => 8 if True


#define IF_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)


#define __USE_LARGEFILE64 if False 
	expansions 



#define ENABLE_USE_BB_CRYPT if True 
	expansions 
		 => 0 if !def(CONFIG_USE_BB_CRYPT)
		 => 1 if def(CONFIG_USE_BB_CRYPT)


#define IF_NOT_FEATURE_TELNET_AUTOLOGIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TELNET_AUTOLOGIN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TELNET_AUTOLOGIN)


#define __GNU_LIBRARY__ if True 
	expansions 
		 => 6 if True


#define IF_NOT_FDFLUSH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FDFLUSH)
		(__VA_ARGS__...) if def(CONFIG_FDFLUSH)


#define IF_DATE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DATE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DATE)


#define ENABLE_UUENCODE if True 
	expansions 
		 => 0 if !def(CONFIG_UUENCODE)
		 => 1 if def(CONFIG_UUENCODE)


#define IF_NOT_WGET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WGET)
		(__VA_ARGS__...) if def(CONFIG_WGET)


#define IF_UNICODE_BIDI_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_BIDI_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_BIDI_SUPPORT)


#define ENABLE_INIT if True 
	expansions 
		 => 0 if !def(CONFIG_INIT)
		 => 1 if def(CONFIG_INIT)


#define ENABLE_DIRNAME if True 
	expansions 
		 => 0 if !def(CONFIG_DIRNAME)
		 => 1 if def(CONFIG_DIRNAME)


#define ENABLE_FEATURE_BASH_IS_NONE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BASH_IS_NONE)
		 => 1 if def(CONFIG_FEATURE_BASH_IS_NONE)


#define IF_FEATURE_PS_TIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PS_TIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PS_TIME)


#define loadkmap_trivial_usage if True 
	expansions 
		 => "< keymap" if True


#define ENABLE_FEATURE_MDEV_CONF if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MDEV_CONF)
		 => 1 if def(CONFIG_FEATURE_MDEV_CONF)


#define IF_TIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TIME)


#define IF_NOT_CRYPTPW if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CRYPTPW)
		(__VA_ARGS__...) if def(CONFIG_CRYPTPW)


#define IF_FEATURE_LS_COLOR_IS_DEFAULT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)


#define IF_FBSPLASH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FBSPLASH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FBSPLASH)


#define __stub_stty if True 
	expansions 
		 if True


#define runcon_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG in a different security context\n" "\n	CONTEXT		Complete security context\n" IF_FEATURE_RUNCON_LONG_OPTIONS( "\n	-c,--compute	Compute process transition context before modifying" "\n	-t,--type=TYPE	Type (for same role as parent)" "\n	-u,--user=USER	User identity" "\n	-r,--role=ROLE	Role" "\n	-l,--range=RNG	Levelrange" ) IF_NOT_FEATURE_RUNCON_LONG_OPTIONS( "\n	-c	Compute process transition context before modifying" "\n	-t TYPE	Type (for same role as parent)" "\n	-u USER	User identity" "\n	-r ROLE	Role" "\n	-l RNG	Levelrange" ) if True


#define IF_UNLZMA if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNLZMA)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNLZMA)


#define IF_IPROUTE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPROUTE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPROUTE)


#define _IO_BUFSIZ if True 
	expansions 
		 => _G_BUFSIZ if True


#define IF_NOT_ASH_BUILTIN_ECHO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_BUILTIN_ECHO)
		(__VA_ARGS__...) if def(CONFIG_ASH_BUILTIN_ECHO)


#define IF_FEATURE_IFCONFIG_STATUS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFCONFIG_STATUS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFCONFIG_STATUS)


#define ENABLE_UNICODE_BIDI_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_BIDI_SUPPORT)
		 => 1 if def(CONFIG_UNICODE_BIDI_SUPPORT)


#define adjtimex_full_usage if True 
	expansions 
		 => "\n\n" "Read and optionally set system timebase parameters. See adjtimex(2)\n" "\nOptions:" "\n	-q	Quiet" "\n	-o OFF	Time offset, microseconds" "\n	-f FREQ	Frequency adjust, integer kernel units (65536 is 1ppm)" "\n		(positive values make clock run faster)" "\n	-t TICK	Microseconds per tick, usually 10000" "\n	-p TCONST" if True


#define ENABLE_FEATURE_SH_IS_NONE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SH_IS_NONE)
		 => 1 if def(CONFIG_FEATURE_SH_IS_NONE)


#define ENABLE_MKFS_EXT2 if True 
	expansions 
		 => 0 if !def(CONFIG_MKFS_EXT2)
		 => 1 if def(CONFIG_MKFS_EXT2)


#define ENABLE_TAIL if True 
	expansions 
		 => 0 if !def(CONFIG_TAIL)
		 => 1 if def(CONFIG_TAIL)


#define inotifyd_trivial_usage if True 
	expansions 
		 => "PROG FILE1[:MASK]..." if True


#define _IO_INTERNAL if True 
	expansions 
		 => 010 if True


#define ENABLE_HAVE_DOT_CONFIG if True 
	expansions 
		 => 0 if !def(CONFIG_HAVE_DOT_CONFIG)
		 => 1 if def(CONFIG_HAVE_DOT_CONFIG)


#define IF_NOT_FEATURE_TAR_OLDSUN_COMPATIBILITY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)


#define ENABLE_BEEP if True 
	expansions 
		 => 0 if !def(CONFIG_BEEP)
		 => 1 if def(CONFIG_BEEP)


#define inetd_full_usage if True 
	expansions 
		 => "\n\n" "Listen for network connections and launch programs\n" "\nOptions:" "\n	-f	Run in foreground" "\n	-e	Log to stderr" "\n	-q N    Socket listen queue (default: 128)" "\n	-R N	Pause services after N connects/min" "\n		(default: 0 - disabled)" if True


#define watchdog_trivial_usage if True 
	expansions 
		 => "[-t N[ms]] [-T N[ms]] [-F] DEV" if True


#define test_example_usage if True 
	expansions 
		 => "$ test 1 -eq 2\n" "$ echo $?\n" "1\n" "$ test 1 -eq 1\n" "$ echo $?\n" "0\n" "$ [ -d /etc ]\n" "$ echo $?\n" "0\n" "$ [ -d /junk ]\n" "$ echo $?\n" "1\n" if True


#define IF_NOT_FEATURE_INETD_RPC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INETD_RPC)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INETD_RPC)


#define IF_FEATURE_TELNETD_INETD_WAIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TELNETD_INETD_WAIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TELNETD_INETD_WAIT)


#define __ASMNAME if True 
	expansions 
		(cname) => __ASMNAME2 (__USER_LABEL_PREFIX__, cname) if True


#define IF_FBSET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FBSET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FBSET)


#define IF_FEATURE_VOLUMEID_REISERFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_REISERFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_REISERFS)


#define IF_FALSE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FALSE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FALSE)


#define ENABLE_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
		 => 1 if def(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)


#define IF_NOT_FEATURE_FANCY_ECHO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FANCY_ECHO)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FANCY_ECHO)


#define IF_NOT_FEATURE_TASKSET_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TASKSET_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TASKSET_FANCY)


#define __LDBL_DENORM_MIN__ if True 
	expansions 
		 => 3.64519953188247460253e-4951L if True


#define ENABLE_PLATFORM_LINUX if True 
	expansions 
		 => 0 if !def(CONFIG_PLATFORM_LINUX)
		 => 1 if def(CONFIG_PLATFORM_LINUX)


#define IF_NOT_FEATURE_SH_IS_NONE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SH_IS_NONE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SH_IS_NONE)


#define ENABLE_SUBST_WCHAR if True 
	expansions 
		 => 0 if !def(CONFIG_SUBST_WCHAR)
		 => 1 if def(CONFIG_SUBST_WCHAR)


#define __SWORD_TYPE if True 
	expansions 
		 => long int if True


#define _G_ARGS if True 
	expansions 
		(ARGLIST) => ARGLIST if True


#define ENABLE_ASH_CMDCMD if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_CMDCMD)
		 => 1 if def(CONFIG_ASH_CMDCMD)


#define IF_ARP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ARP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ARP)


#define ENABLE_TOP if True 
	expansions 
		 => 0 if !def(CONFIG_TOP)
		 => 1 if def(CONFIG_TOP)


#define IF_NOT_FEATURE_SEAMLESS_GZ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SEAMLESS_GZ)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SEAMLESS_GZ)


#define __always_inline if True 
	expansions 
		 => __inline __attribute__ ((__always_inline__)) if True


#define ENABLE_RESIZE if True 
	expansions 
		 => 0 if !def(CONFIG_RESIZE)
		 => 1 if def(CONFIG_RESIZE)


#define __SIZEOF_FLOAT__ if True 
	expansions 
		 => 4 if True


#define IF_NOT_FEATURE_MDEV_EXEC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MDEV_EXEC)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MDEV_EXEC)


#define __stub_sigreturn if True 
	expansions 
		 if True


#define ENABLE_FEATURE_REMOTE_LOG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_REMOTE_LOG)
		 => 1 if def(CONFIG_FEATURE_REMOTE_LOG)


#define IF_NOT_RUNSV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RUNSV)
		(__VA_ARGS__...) if def(CONFIG_RUNSV)


#define mkfs_ext2_trivial_usage if True 
	expansions 
		 => "[-Fn] " "[-b BLK_SIZE] " "[-i INODE_RATIO] [-I INODE_SIZE] " "[-m RESERVED_PERCENT] " "[-L LABEL] " "BLOCKDEV [KBYTES]" if True


#define _G_HAVE_SYS_WAIT if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_UDHCP_PORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UDHCP_PORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UDHCP_PORT)


#define IF_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)


#define ENABLE_FEATURE_CHECK_TAINTED_MODULE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
		 => 1 if def(CONFIG_FEATURE_CHECK_TAINTED_MODULE)


#define ENABLE_FEATURE_FIND_PRINT0 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_PRINT0)
		 => 1 if def(CONFIG_FEATURE_FIND_PRINT0)


#define ENABLE_FEATURE_INIT_SYSLOG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INIT_SYSLOG)
		 => 1 if def(CONFIG_FEATURE_INIT_SYSLOG)


#define __SIZEOF_WCHAR_T__ if True 
	expansions 
		 => 4 if True


#define _IO_wint_t if True 
	expansions 
		 => _G_wint_t if True


#define _IO_UPPERCASE if True 
	expansions 
		 => 01000 if True


#define ENABLE_MOUNT if True 
	expansions 
		 => 0 if !def(CONFIG_MOUNT)
		 => 1 if def(CONFIG_MOUNT)


#define ENABLE_FEATURE_PS_TIME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PS_TIME)
		 => 1 if def(CONFIG_FEATURE_PS_TIME)


#define mpstat_trivial_usage if True 
	expansions 
		 => "[-A] [-I SUM|CPU|ALL|SCPU] [-u] [-P num|ALL] [INTERVAL [COUNT]]" if True


#define __FLT_MIN_EXP__ if True 
	expansions 
		 => (-125) if True


#define patch_example_usage if True 
	expansions 
		 => "$ patch -p1 < example.diff\n" "$ patch -p0 -i example.diff" if True


#define IF_FEATURE_WC_LARGE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_WC_LARGE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_WC_LARGE)


#define false_example_usage if True 
	expansions 
		 => "$ false\n" "$ echo $?\n" "1\n" if True


#define IF_NOT_FEATURE_SH_IS_ASH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SH_IS_ASH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SH_IS_ASH)


#define __PID_T_TYPE if True 
	expansions 
		 => __S32_TYPE if True


#define ENABLE_CKSUM if True 
	expansions 
		 => 0 if !def(CONFIG_CKSUM)
		 => 1 if def(CONFIG_CKSUM)


#define IF_NOT_SETFONT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETFONT)
		(__VA_ARGS__...) if def(CONFIG_SETFONT)


#define IF_NOT_FEATURE_INSMOD_TRY_MMAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSMOD_TRY_MMAP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSMOD_TRY_MMAP)


#define losetup_trivial_usage if True 
	expansions 
		 => "[-o OFS] LOOPDEV FILE - associate loop devices\n" "	losetup -d LOOPDEV - disassociate\n" "	losetup [-f] - show" if True


#define ENABLE_FEATURE_MKSWAP_UUID if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MKSWAP_UUID)
		 => 1 if def(CONFIG_FEATURE_MKSWAP_UUID)


#define ENABLE_ECHO if True 
	expansions 
		 => 0 if !def(CONFIG_ECHO)
		 => 1 if def(CONFIG_ECHO)


#define IF_NOT_BUSYBOX_EXEC_PATH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BUSYBOX_EXEC_PATH)
		(__VA_ARGS__...) if def(CONFIG_BUSYBOX_EXEC_PATH)


#define fdisk_trivial_usage if True 
	expansions 
		 => "[-ul" IF_FEATURE_FDISK_BLKSIZE("s") "] " "[-C CYLINDERS] [-H HEADS] [-S SECTORS] [-b SSZ] DISK" if True


#define IF_NOT_USE_BB_SHADOW if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_USE_BB_SHADOW)
		(__VA_ARGS__...) if def(CONFIG_USE_BB_SHADOW)


#define tune2fs_full_usage if True 
	expansions 
		 => "\n\n" "Adjust filesystem options on ext[23] filesystems" if True


#define grep_full_usage if True 
	expansions 
		 => "\n\n" "Search for PATTERN in FILEs (or stdin)\n" "\nOptions:" "\n	-H	Add 'filename:' prefix" "\n	-h	Do not add 'filename:' prefix" "\n	-n	Add 'line_no:' prefix" "\n	-l	Show only names of files that match" "\n	-L	Show only names of files that don't match" "\n	-c	Show only count of matching lines" "\n	-o	Show only the matching part of line" "\n	-q	Quiet. Return 0 if PATTERN is found, 1 otherwise" "\n	-v	Select non-matching lines" "\n	-s	Suppress open and read errors" "\n	-r	Recurse" "\n	-i	Ignore case" "\n	-w	Match whole words only" "\n	-F	PATTERN is a literal (not regexp)" IF_FEATURE_GREP_EGREP_ALIAS( "\n	-E	PATTERN is an extended regexp" ) IF_EXTRA_COMPAT( "\n	-z	Input is NUL terminated" ) "\n	-m N	Match up to N times per file" IF_FEATURE_GREP_CONTEXT( "\n	-A N	Print N lines of trailing context" "\n	-B N	Print N lines of leading context" "\n	-C N	Same as '-A N -B N'" ) "\n	-e PTRN	Pattern to match" "\n	-f FILE	Read pattern from file" if True


#define dirname_trivial_usage if True 
	expansions 
		 => "FILENAME" if True


#define _SIGSET_H_types if True 
	expansions 
		 => 1 if True


#define devmem_full_usage if True 
	expansions 
		 => "\n\n" "Read/write from physical address\n" "\n	ADDRESS	Address to act upon" "\n	WIDTH	Width (8/16/...)" "\n	VALUE	Data to be written" if True


#define IF_DEBUG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEBUG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEBUG)


#define __NFDBITS if True 
	expansions 
		 => (8 * (int) sizeof (__fd_mask)) if True


#define FD_SET if True 
	expansions 
		(fd, fdsetp) => __FD_SET (fd, fdsetp) if True


#define _IO_SCIENTIFIC if True 
	expansions 
		 => 04000 if True


#define IF_NOT_UDPSVD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UDPSVD)
		(__VA_ARGS__...) if def(CONFIG_UDPSVD)


#define __DBL_MAX__ if True 
	expansions 
		 => 1.7976931348623157e+308 if True


#define ENABLE_FEATURE_EJECT_SCSI if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EJECT_SCSI)
		 => 1 if def(CONFIG_FEATURE_EJECT_SCSI)


#define IF_NOT_FEATURE_IFUPDOWN_EXTERNAL_DHCP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)


#define IF_NOT_ASH_BUILTIN_TEST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_BUILTIN_TEST)
		(__VA_ARGS__...) if def(CONFIG_ASH_BUILTIN_TEST)


#define ENABLE_FEATURE_MOUNT_FSTAB if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_FSTAB)
		 => 1 if def(CONFIG_FEATURE_MOUNT_FSTAB)


#define __fsfilcnt_t_defined if True 
	expansions 
		 if True


#define IF_FEATURE_ADDUSER_TO_GROUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ADDUSER_TO_GROUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ADDUSER_TO_GROUP)


#define IF_FEATURE_BASH_IS_HUSH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BASH_IS_HUSH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BASH_IS_HUSH)


#define IF_FEATURE_VI_USE_SIGNALS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_USE_SIGNALS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_USE_SIGNALS)


#define IF_FDFLUSH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FDFLUSH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FDFLUSH)


#define IF_FEATURE_VOLUMEID_LINUXRAID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_LINUXRAID)


#define touch_trivial_usage if True 
	expansions 
		 => "[-c] [-d DATE] [-r FILE] FILE [FILE]..." if True


#define IF_NOT_NC_SERVER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NC_SERVER)
		(__VA_ARGS__...) if def(CONFIG_NC_SERVER)


#define brctl_full_usage if True 
	expansions 
		 => "\n\n" "Manage ethernet bridges\n" "\nCommands:" IF_FEATURE_BRCTL_SHOW( "\n	show			Show a list of bridges" ) "\n	addbr BRIDGE		Create BRIDGE" "\n	delbr BRIDGE		Delete BRIDGE" "\n	addif BRIDGE IFACE	Add IFACE to BRIDGE" "\n	delif BRIDGE IFACE	Delete IFACE from BRIDGE" IF_FEATURE_BRCTL_FANCY( "\n	setageing BRIDGE TIME		Set ageing time" "\n	setfd BRIDGE TIME		Set bridge forward delay" "\n	sethello BRIDGE TIME		Set hello time" "\n	setmaxage BRIDGE TIME		Set max message age" "\n	setpathcost BRIDGE COST		Set path cost" "\n	setportprio BRIDGE PRIO		Set port priority" "\n	setbridgeprio BRIDGE PRIO	Set bridge priority" "\n	stp BRIDGE [1/yes/on|0/no/off]	STP on/off" ) if True


#define IF_VI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_VI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_VI)


#define __attribute_used__ if True 
	expansions 
		 => __attribute__ ((__used__)) if True


#define rdate_trivial_usage if True 
	expansions 
		 => "[-sp] HOST" if True


#define IF_FEATURE_INDIVIDUAL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INDIVIDUAL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INDIVIDUAL)


#define ENABLE_GUNZIP if True 
	expansions 
		 => 0 if !def(CONFIG_GUNZIP)
		 => 1 if def(CONFIG_GUNZIP)


#define slattach_full_usage if True 
	expansions 
		 => "\n\n" "Attach network interface(s) to serial line(s)\n" "\nOptions:" "\n	-p PROT	Set protocol (slip, cslip, slip6, clisp6 or adaptive)" "\n	-s SPD	Set line speed" "\n	-e	Exit after initializing device" "\n	-h	Exit when the carrier is lost" "\n	-c PROG	Run PROG when the line is hung up" "\n	-m	Do NOT initialize the line in raw 8 bits mode" "\n	-L	Enable 3-wire operation" "\n	-F	Disable RTS/CTS flow control" if True


#define IF_NOT_HWCLOCK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HWCLOCK)
		(__VA_ARGS__...) if def(CONFIG_HWCLOCK)


#define IF_NOT_FEATURE_CHAT_SWALLOW_OPTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)


#define ENABLE_FEATURE_CHECK_UNICODE_IN_ENV if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
		 => 1 if def(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)


#define which_full_usage if True 
	expansions 
		 => "\n\n" "Locate a COMMAND" if True


#define IF_NOT_FEATURE_FTPGETPUT_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)


#define iprule_full_usage if True 
	expansions 
		 => "\n\n" "iprule [list | add | del] SELECTOR ACTION\n" "	SELECTOR := [from PREFIX] [to PREFIX] [tos TOS] [fwmark FWMARK]\n" "			[dev STRING] [pref NUMBER]\n" "	ACTION := [table TABLE_ID] [nat ADDRESS]\n" "			[prohibit | reject | unreachable]\n" "			[realms [SRCREALM/]DSTREALM]\n" "	TABLE_ID := [local | main | default | NUMBER]" if True


#define IF_FEATURE_RUN_PARTS_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_RUN_PARTS_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_RUN_PARTS_FANCY)


#define nameif_full_usage if True 
	expansions 
		 => "\n\n" "Rename network interface while it in the down state\n" "\nOptions:" "\n	-c FILE		Use configuration file (default: /etc/mactab)" "\n	-s		Use syslog (LOCAL0 facility)" "\n	IFNAME MACADDR	new_interface_name interface_mac_address" if True


#define __SIZEOF_SHORT__ if True 
	expansions 
		 => 2 if True


#define realpath_full_usage if True 
	expansions 
		 => "\n\n" "Return the absolute pathnames of given FILE" if True


#define IF_NOT_GETTY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GETTY)
		(__VA_ARGS__...) if def(CONFIG_GETTY)


#define fbset_full_usage if True 
	expansions 
		 => "\n\n" "Show and modify frame buffer settings" if True


#define ip_full_usage if True 
	expansions 
		 => "\n\n" "ip [OPTIONS] OBJECT {COMMAND}\n" "where OBJECT := {" IF_FEATURE_IP_ADDRESS("address | ") IF_FEATURE_IP_ROUTE("route | ") IF_FEATURE_IP_LINK("link | ") IF_FEATURE_IP_TUNNEL("tunnel | ") IF_FEATURE_IP_RULE("rule") "}\n" "OPTIONS := { -f[amily] { inet | inet6 | link } | -o[neline] }" if True


#define IF_FEATURE_LOADFONT_PSF2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LOADFONT_PSF2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LOADFONT_PSF2)


#define ENABLE_MKFS_REISER if True 
	expansions 
		 => 0 if !def(CONFIG_MKFS_REISER)
		 => 1 if def(CONFIG_MKFS_REISER)


#define __P if True 
	expansions 
		(args) => args if True


#define IF_DF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DF)


#define modprobe_trivial_usage if True 
	expansions 
		 => "[-qfwrsv] MODULE [symbol=value]..." if def(CONFIG_MODPROBE_SMALL)
		 => "[-alrqvs" IF_FEATURE_MODPROBE_BLACKLIST("b") "] MODULE [symbol=value]..." if !def(CONFIG_MODPROBE_SMALL)


#define ENABLE_FEATURE_SH_STANDALONE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SH_STANDALONE)
		 => 1 if def(CONFIG_FEATURE_SH_STANDALONE)


#define IF_GZIP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GZIP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GZIP)


#define IF_NOT_MKSWAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKSWAP)
		(__VA_ARGS__...) if def(CONFIG_MKSWAP)


#define IF_NOT_EXTRA_CFLAGS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EXTRA_CFLAGS)
		(__VA_ARGS__...) if def(CONFIG_EXTRA_CFLAGS)


#define __stub_lchmod if True 
	expansions 
		 if True


#define dmesg_full_usage if True 
	expansions 
		 => "\n\n" "Print or control the kernel ring buffer\n" "\nOptions:" "\n	-c		Clear ring buffer after printing" "\n	-n LEVEL	Set console logging level" "\n	-s SIZE		Buffer size" if True


#define IF_NOT_FEATURE_MINIX2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MINIX2)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MINIX2)


#define IF_NOT_DEALLOCVT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEALLOCVT)
		(__VA_ARGS__...) if def(CONFIG_DEALLOCVT)


#define sync_full_usage if True 
	expansions 
		 => "\n\n" "Write all buffered blocks to disk" if True


#define runcon_trivial_usage if True 
	expansions 
		 => "[-c] [-u USER] [-r ROLE] [-t TYPE] [-l RANGE] PROG ARGS\n" "runcon CONTEXT PROG ARGS" if True


#define WCONTINUED if True 
	expansions 
		 => 8 if True


#define setfiles_full_usage if True 
	expansions 
		 => "\n\n" "Reset file contexts under pathname according to spec_file\n" IF_FEATURE_SETFILES_CHECK_OPTION( "\n	-c FILE	Check the validity of the contexts against the specified binary policy" ) "\n	-d	Show which specification matched each file" "\n	-l	Log changes in file labels to syslog" "\n	-n	Don't change any file labels" "\n	-q	Suppress warnings" "\n	-r DIR	Use an alternate root path" "\n	-e DIR	Exclude DIR" "\n	-F	Force reset of context to match file_context for customizable files" "\n	-o FILE	Save list of files with incorrect context" "\n	-s	Take a list of files from stdin (instead of command line)" "\n	-v	Show changes in file labels, if type or role are changing" "\n	-vv	Show changes in file labels, if type, role, or user are changing" "\n	-W	Display warnings about entries that had no matching files" if True


#define IF_BZIP2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BZIP2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BZIP2)


#define free_example_usage if True 
	expansions 
		 => "$ free\n" "              total         used         free       shared      buffers\n" "  Mem:       257628       248724         8904        59644        93124\n" " Swap:       128516         8404       120112\n" "Total:       386144       257128       129016\n" if True


#define IF_NOT_HUSH_FUNCTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_FUNCTIONS)
		(__VA_ARGS__...) if def(CONFIG_HUSH_FUNCTIONS)


#define IF_ASH_BUILTIN_PRINTF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_BUILTIN_PRINTF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_BUILTIN_PRINTF)


#define ENABLE_FEATURE_FIND_DELETE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_DELETE)
		 => 1 if def(CONFIG_FEATURE_FIND_DELETE)


#define ENABLE_FREE if True 
	expansions 
		 => 0 if !def(CONFIG_FREE)
		 => 1 if def(CONFIG_FREE)


#define ed_full_usage if True 
	expansions 
		 => "" if True


#define __W_CONTINUED if True 
	expansions 
		 => 0xffff if True


#define IF_FEATURE_UDHCP_RFC3397 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UDHCP_RFC3397)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UDHCP_RFC3397)


#define __ID_T_TYPE if True 
	expansions 
		 => __U32_TYPE if True


#define seq_full_usage if True 
	expansions 
		 => "\n\n" "Print numbers from FIRST to LAST, in steps of INC.\n" "FIRST, INC default to 1.\n" "\nOptions:" "\n	-w	Pad to last with leading zeros" "\n	-s SEP	String separator" if True


#define tee_full_usage if True 
	expansions 
		 => "\n\n" "Copy stdin to each FILE, and also to stdout\n" "\nOptions:" "\n	-a	Append to the given FILEs, don't overwrite" "\n	-i	Ignore interrupt signals (SIGINT)" if True


#define du_trivial_usage if True 
	expansions 
		 => "[-aHLdclsx" IF_FEATURE_HUMAN_READABLE("hm") "k] [FILE]..." if True


#define ifenslave_full_usage if True 
	expansions 
		 => "\n\n" "Configure network interfaces for parallel routing\n" "\nOptions:" "\n	-c,--change-active	Change active slave" "\n	-d,--detach		Remove slave interface from bonding device" "\n	-f,--force		Force, even if interface is not Ethernet" if True


#define __mbstate_t_defined if True 
	expansions 
		 => 1 if True


#define grep_example_usage if True 
	expansions 
		 => "$ grep root /etc/passwd\n" "root:x:0:0:root:/root:/bin/bash\n" "$ grep ^[rR]oo. /etc/passwd\n" "root:x:0:0:root:/root:/bin/bash\n" if True


#define IF_BUNZIP2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BUNZIP2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BUNZIP2)


#define ENABLE_FEATURE_PREFER_APPLETS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PREFER_APPLETS)
		 => 1 if def(CONFIG_FEATURE_PREFER_APPLETS)


#define IF_FEATURE_FIND_TYPE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_TYPE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_TYPE)


#define ENABLE_FEATURE_PREFER_IPV4_ADDRESS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
		 => 1 if def(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)


#define IF_NOT_FEATURE_HUMAN_READABLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HUMAN_READABLE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HUMAN_READABLE)


#define ENABLE_FEATURE_EDITING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING)
		 => 1 if def(CONFIG_FEATURE_EDITING)


#define IF_NOT_FEATURE_INITRD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INITRD)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INITRD)


#define makemime_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define IF_FGCONSOLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FGCONSOLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FGCONSOLE)


#define IF_FEATURE_SEAMLESS_BZ2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SEAMLESS_BZ2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SEAMLESS_BZ2)


#define __BLKCNT64_T_TYPE if True 
	expansions 
		 => __SQUAD_TYPE if True


#define IF_PIDOF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PIDOF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PIDOF)


#define ENABLE_FEATURE_TR_EQUIV if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TR_EQUIV)
		 => 1 if def(CONFIG_FEATURE_TR_EQUIV)


#define ENABLE_NOMMU if True 
	expansions 
		 => 0 if !def(CONFIG_NOMMU)
		 => 1 if def(CONFIG_NOMMU)


#define NULL if True 
	expansions 
		 => ((void *)0) if True


#define IF_FEATURE_SGI_LABEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SGI_LABEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SGI_LABEL)


#define ENABLE_BUNZIP2 if True 
	expansions 
		 => 0 if !def(CONFIG_BUNZIP2)
		 => 1 if def(CONFIG_BUNZIP2)


#define __nonnull if True 
	expansions 
		(params) => __attribute__ ((__nonnull__ params)) if True


#define __RLIM_T_TYPE if True 
	expansions 
		 => __ULONGWORD_TYPE if True


#define fgconsole_full_usage if True 
	expansions 
		 => "\n\n" "Get active console" if True


#define ENABLE_FEATURE_VOLUMEID_LINUXSWAP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)


#define ENABLE_WALL if True 
	expansions 
		 => 0 if !def(CONFIG_WALL)
		 => 1 if def(CONFIG_WALL)


#define __pid_t_defined if True 
	expansions 
		 if True


#define _G_stat64 if True 
	expansions 
		 => stat64 if True


#define IF_NOT_FEATURE_TOP_SMP_PROCESS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TOP_SMP_PROCESS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TOP_SMP_PROCESS)


#define IF_FEATURE_LESS_MAXLINES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_MAXLINES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_MAXLINES)


#define IF_NOT_FEATURE_VI_ASK_TERMINAL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_ASK_TERMINAL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_ASK_TERMINAL)


#define tee_example_usage if True 
	expansions 
		 => "$ echo \"Hello\" | tee /tmp/foo\n" "$ cat /tmp/foo\n" "Hello\n" if True


#define IF_FEATURE_PIDOF_OMIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PIDOF_OMIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PIDOF_OMIT)


#define loadfont_example_usage if True 
	expansions 
		 => "$ loadfont < /etc/i18n/fontname\n" if True


#define _OLD_STDIO_MAGIC if True 
	expansions 
		 => 0xFABC0000 if True


#define ENABLE_EJECT if True 
	expansions 
		 => 0 if !def(CONFIG_EJECT)
		 => 1 if def(CONFIG_EJECT)


#define ENABLE_FEATURE_FBSET_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FBSET_FANCY)
		 => 1 if def(CONFIG_FEATURE_FBSET_FANCY)


#define IF_NOT_FEATURE_DD_SIGNAL_HANDLING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DD_SIGNAL_HANDLING)


#define nandwrite_full_usage if True 
	expansions 
		 => "\n\n" "Write to the specified MTD device\n" "\nOptions:" "\n	-p	Pad to page size" "\n	-s ADDR	Start address" if True


#define __gid_t_defined if True 
	expansions 
		 if True


#define tty_example_usage if True 
	expansions 
		 => "$ tty\n" "/dev/tty2\n" if True


#define IF_FEATURE_SH_EXTRA_QUIET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SH_EXTRA_QUIET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SH_EXTRA_QUIET)


#define IF_CATV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CATV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CATV)


#define __USING_NAMESPACE_STD if True 
	expansions 
		(name) if True


#define killall5_full_usage if True 
	expansions 
		 => "\n\n" "Send a signal (default: TERM) to all processes outside current session\n" "\nOptions:" "\n	-l	List all signal names and numbers" "\n	-o PID	Don't signal this PID" if True


#define ENABLE_FIND if True 
	expansions 
		 => 1 if True


#define IF_SHOW_USAGE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SHOW_USAGE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SHOW_USAGE)


#define rmdir_trivial_usage if True 
	expansions 
		 => "[OPTIONS] DIRECTORY..." if True


#define chrt_example_usage if True 
	expansions 
		 => "$ chrt -r 4 sleep 900; x=$!\n" "$ chrt -f -p 3 $x\n" "You need CAP_SYS_NICE privileges to set scheduling attributes of a process" if True


#define ENABLE_UNAME if True 
	expansions 
		 => 0 if !def(CONFIG_UNAME)
		 => 1 if def(CONFIG_UNAME)


#define nc_full_usage if True 
	expansions 
		 => "\n\n" "Open a pipe to IP:PORT" IF_NC_EXTRA(" or FILE") NC_OPTIONS_STR IF_NC_EXTRA( "\n	-e PROG	Run PROG after connect" IF_NC_SERVER( "\n	-l	Listen mode, for inbound connects" IF_NC_EXTRA( "\n		(use -l twice with -e for persistent server)") "\n	-p PORT	Local port" ) "\n	-w SEC	Timeout for connect" "\n	-i SEC	Delay interval for lines sent" "\n	-f FILE	Use file (ala /dev/ttyS0) instead of network" ) if !def(CONFIG_NC_110_COMPAT)
		 => "\n\n" "Options:" "\n	-e PROG	Run PROG after connect (must be last)" IF_NC_SERVER( "\n	-l	Listen mode, for inbound connects" ) "\n	-p PORT	Local port" "\n	-s ADDR	Local address" "\n	-w SEC	Timeout for connects and final net reads" IF_NC_EXTRA( "\n	-i SEC	Delay interval for lines sent" ) "\n	-n	Don't do DNS resolution" "\n	-u	UDP mode" "\n	-v	Verbose" IF_NC_EXTRA( "\n	-o FILE	Hex dump traffic" "\n	-z	Zero-I/O mode (scanning)" ) if def(CONFIG_NC_110_COMPAT)


#define IF_FEATURE_IFCONFIG_SLIP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFCONFIG_SLIP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFCONFIG_SLIP)


#define IF_LSPCI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LSPCI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LSPCI)


#define IF_FEATURE_MIME_CHARSET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MIME_CHARSET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MIME_CHARSET)


#define __need_timer_t if False 
	expansions 
		 if False


#define IF_NOT_READPROFILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_READPROFILE)
		(__VA_ARGS__...) if def(CONFIG_READPROFILE)


#define ftpget_full_usage if True 
	expansions 
		 => "\n\n" "Retrieve a remote file via FTP\n" "\nOptions:" IF_FEATURE_FTPGETPUT_LONG_OPTIONS( "\n	-c,--continue	Continue previous transfer" "\n	-v,--verbose	Verbose" "\n	-u,--username	Username" "\n	-p,--password	Password" "\n	-P,--port	Port number" ) IF_NOT_FEATURE_FTPGETPUT_LONG_OPTIONS( "\n	-c	Continue previous transfer" "\n	-v	Verbose" "\n	-u	Username" "\n	-p	Password" "\n	-P	Port number" ) if True


#define IF_NOT_FEATURE_DPKG_DEB_EXTRACT_ONLY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)


#define nslookup_trivial_usage if True 
	expansions 
		 => "[HOST] [SERVER]" if True


#define IF_RUNLEVEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RUNLEVEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RUNLEVEL)


#define IF_FEATURE_TAR_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_LONG_OPTIONS)


#define IF_NOT_SETENFORCE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETENFORCE)
		(__VA_ARGS__...) if def(CONFIG_SETENFORCE)


#define IF_FEATURE_IPV6 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IPV6)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IPV6)


#define IF_UUENCODE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UUENCODE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UUENCODE)


#define ENABLE_FEATURE_SETFILES_CHECK_OPTION if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
		 => 1 if def(CONFIG_FEATURE_SETFILES_CHECK_OPTION)


#define klogd_trivial_usage if True 
	expansions 
		 => "[-c N] [-n]" if True


#define WIFEXITED if True 
	expansions 
		(status) => __WIFEXITED (__WAIT_INT (status)) if True


#define IF_NOT_LPR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LPR)
		(__VA_ARGS__...) if def(CONFIG_LPR)


#define ENABLE_NANDWRITE if True 
	expansions 
		 => 0 if !def(CONFIG_NANDWRITE)
		 => 1 if def(CONFIG_NANDWRITE)


#define ENABLE_SETSEBOOL if True 
	expansions 
		 => 0 if !def(CONFIG_SETSEBOOL)
		 => 1 if def(CONFIG_SETSEBOOL)


#define IF_FEATURE_BASH_IS_ASH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BASH_IS_ASH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BASH_IS_ASH)


#define ENABLE_FEATURE_LOADFONT_PSF2 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LOADFONT_PSF2)
		 => 1 if def(CONFIG_FEATURE_LOADFONT_PSF2)


#define IF_STTY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_STTY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_STTY)


#define IF_NOT_SHA256SUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SHA256SUM)
		(__VA_ARGS__...) if def(CONFIG_SHA256SUM)


#define IF_LZMA if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LZMA)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LZMA)


#define IF_NOT_FEATURE_FIND_INUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_INUM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_INUM)


#define basename_trivial_usage if True 
	expansions 
		 => "FILE [SUFFIX]" if True


#define __SIZEOF_PTRDIFF_T__ if True 
	expansions 
		 => 8 if True


#define FILENAME_MAX if True 
	expansions 
		 => 4096 if True


#define mkfs_vfat_trivial_usage if True 
	expansions 
		 => "[-v] [-n LABEL] BLOCKDEV [KBYTES]" if True


#define __SIZEOF_PTHREAD_ATTR_T if True 
	expansions 
		 => 56 if True


#define IF_NOT_FEATURE_UDHCPC_ARPING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UDHCPC_ARPING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UDHCPC_ARPING)


#define __GNUC_STDC_INLINE__ if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_HDPARM_HDIO_DRIVE_RESET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)


#define _IO_UNBUFFERED if True 
	expansions 
		 => 2 if True


#define _IO_TIED_PUT_GET if True 
	expansions 
		 => 0x400 if True


#define ENABLE_FEATURE_VERBOSE_CP_MESSAGE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
		 => 1 if def(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)


#define __amd64 if True 
	expansions 
		 => 1 if True


#define IF_EXTRA_CFLAGS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EXTRA_CFLAGS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EXTRA_CFLAGS)


#define IF_FEATURE_PRESERVE_HARDLINKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PRESERVE_HARDLINKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PRESERVE_HARDLINKS)


#define IF_NOT_FEATURE_BEEP_FREQ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BEEP_FREQ)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BEEP_FREQ)


#define selinuxenabled_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define length_full_usage if True 
	expansions 
		 => "\n\n" "Print STRING's length" if True


#define IF_NOT_SED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SED)
		(__VA_ARGS__...) if def(CONFIG_SED)


#define lzop_trivial_usage if True 
	expansions 
		 => "[-cfvd123456789CF] [FILE]..." if True


#define _IO_STDIO_H if True 
	expansions 
		 if True


#define ENABLE_KILLALL5 if True 
	expansions 
		 => 0 if !def(CONFIG_KILLALL5)
		 => 1 if def(CONFIG_KILLALL5)


#define IF_ASH_BUILTIN_TEST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_BUILTIN_TEST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_BUILTIN_TEST)


#define ENABLE_FEATURE_XARGS_SUPPORT_QUOTES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
		 => 1 if def(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)


#define ps_trivial_usage if True 
	expansions 
		 => "" if !def(CONFIG_DESKTOP)
		 => "[-o COL1,COL2=HEADER]" IF_FEATURE_SHOW_THREADS(" [-T]") if def(CONFIG_DESKTOP)


#define IF_READLINK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_READLINK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_READLINK)


#define ENABLE_FSCK_MINIX if True 
	expansions 
		 => 0 if !def(CONFIG_FSCK_MINIX)
		 => 1 if def(CONFIG_FSCK_MINIX)


#define ENABLE_PIPE_PROGRESS if True 
	expansions 
		 => 0 if !def(CONFIG_PIPE_PROGRESS)
		 => 1 if def(CONFIG_PIPE_PROGRESS)


#define true_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_RM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RM)
		(__VA_ARGS__...) if def(CONFIG_RM)


#define _G_wint_t if True 
	expansions 
		 => wint_t if True


#define __USE_MISC if True 
	expansions 
		 => 1 if True


#define putc if True 
	expansions 
		(_ch, _fp) => _IO_putc (_ch, _fp) if True


#define ionice_trivial_usage if True 
	expansions 
		 => "[-c 1-3] [-n 0-7] [-p PID] [PROG]" if True


#define ENABLE_FEATURE_TOP_CPU_USAGE_PERCENTAGE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
		 => 1 if def(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)


#define IF_CMP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CMP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CMP)


#define runsv_trivial_usage if True 
	expansions 
		 => "DIR" if True


#define IF_NOT_RTCWAKE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RTCWAKE)
		(__VA_ARGS__...) if def(CONFIG_RTCWAKE)


#define IF_INSTALL_NO_USR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_NO_USR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_NO_USR)


#define __MODE_T_TYPE if True 
	expansions 
		 => __U32_TYPE if True


#define IF_SCRIPTREPLAY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SCRIPTREPLAY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SCRIPTREPLAY)


#define IF_NOT_TEE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TEE)
		(__VA_ARGS__...) if def(CONFIG_TEE)


#define ENABLE_LFS if True 
	expansions 
		 => 0 if !def(CONFIG_LFS)
		 => 1 if def(CONFIG_LFS)


#define htole32 if True 
	expansions 
		(x) => (x) if True


#define IF_ACPID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ACPID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ACPID)


#define flash_unlock_trivial_usage if True 
	expansions 
		 => "MTD_DEVICE" if True


#define IF_NOT_FEATURE_TFTP_BLOCKSIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TFTP_BLOCKSIZE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TFTP_BLOCKSIZE)


#define timeout_full_usage if True 
	expansions 
		 => "\n\n" "Runs PROG. Sends SIG to it if it is not gone in SECS seconds.\n" "Defaults: SECS: 10, SIG: TERM." if True


#define IF_NOT_DATE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DATE)
		(__VA_ARGS__...) if def(CONFIG_DATE)


#define ENABLE_DATE if True 
	expansions 
		 => 0 if !def(CONFIG_DATE)
		 => 1 if def(CONFIG_DATE)


#define _IO_LINE_BUF if True 
	expansions 
		 => 0x200 if True


#define IF_FEATURE_FIND_NEWER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_NEWER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_NEWER)


#define IF_WHICH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WHICH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WHICH)


#define hostname_example_usage if True 
	expansions 
		 => "$ hostname\n" "sage\n" if True


#define IF_NOT_DUMPKMAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DUMPKMAP)
		(__VA_ARGS__...) if def(CONFIG_DUMPKMAP)


#define IF_HDPARM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HDPARM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HDPARM)


#define IF_FEATURE_UNIX_LOCAL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UNIX_LOCAL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UNIX_LOCAL)


#define IF_NOT_IOCTL_HEX2STR_ERROR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IOCTL_HEX2STR_ERROR)
		(__VA_ARGS__...) if def(CONFIG_IOCTL_HEX2STR_ERROR)


#define ENABLE_FEATURE_VI_SET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_SET)
		 => 1 if def(CONFIG_FEATURE_VI_SET)


#define IF_NOT_FEATURE_TEST_64 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TEST_64)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TEST_64)


#define IF_MD5_SIZE_VS_SPEED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MD5_SIZE_VS_SPEED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MD5_SIZE_VS_SPEED)


#define ping6_full_usage if True 
	expansions 
		 => "\n\n" "Send ICMP ECHO_REQUEST packets to network hosts\n" "\nOptions:" "\n	-c CNT		Send only CNT pings" "\n	-s SIZE		Send SIZE data bytes in packets (default:56)" "\n	-I IFACE/IP	Use interface or IP address as source" "\n	-q		Quiet, only displays output at start" "\n			and when finished" if def(CONFIG_FEATURE_FANCY_PING)
		 => "\n\n" "Send ICMP ECHO_REQUEST packets to network hosts" if !def(CONFIG_FEATURE_FANCY_PING)


#define IF_NOT_FEATURE_VOLUMEID_BTRFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_BTRFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_BTRFS)


#define __GNUC_PATCHLEVEL__ if True 
	expansions 
		 => 4 if True


#define IF_NOT_FEATURE_DATE_NANO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DATE_NANO)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DATE_NANO)


#define IF_NOT_STATIC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_STATIC)
		(__VA_ARGS__...) if def(CONFIG_STATIC)


#define md5sum_full_usage if True 
	expansions 
		 => "\n\n" "Print" IF_FEATURE_MD5_SHA1_SUM_CHECK(" or check") " MD5 checksums" IF_FEATURE_MD5_SHA1_SUM_CHECK( "\n" "\nOptions:" "\n	-c	Check sums against given list" "\n	-s	Don't output anything, status code shows success" "\n	-w	Warn about improperly formatted checksum lines" ) if True


#define chmod_full_usage if True 
	expansions 
		 => "\n\n" "Each MODE is one or more of the letters ugoa, one of the\n" "symbols +-= and one or more of the letters rwxst\n" "\nOptions:" "\n	-R	Recurse" IF_DESKTOP( "\n	-c	List changed files" "\n	-v	List all files" "\n	-f	Hide errors" ) if True


#define xz_trivial_usage if True 
	expansions 
		 => "-d [-cf] [FILE]..." if True


#define IF_SORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SORT)


#define ENABLE_FEATURE_LESS_REGEXP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_REGEXP)
		 => 1 if def(CONFIG_FEATURE_LESS_REGEXP)


#define __malloc_and_calloc_defined if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_TRACEROUTE_USE_ICMP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)


#define IF_NOT_ZCIP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ZCIP)
		(__VA_ARGS__...) if def(CONFIG_ZCIP)


#define IF_STRINGS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_STRINGS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_STRINGS)


#define IF_BLOCKDEV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BLOCKDEV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BLOCKDEV)


#define IF_LZOP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LZOP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LZOP)


#define EOF if True 
	expansions 
		 => (-1) if True


#define IF_FEATURE_TUNCTL_UG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TUNCTL_UG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TUNCTL_UG)


#define ENABLE_FEATURE_TELNETD_INETD_WAIT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TELNETD_INETD_WAIT)
		 => 1 if def(CONFIG_FEATURE_TELNETD_INETD_WAIT)


#define IF_NOT_FEATURE_KILL_DELAY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_KILL_DELAY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_KILL_DELAY)


#define _BITS_TYPES_H if True 
	expansions 
		 => 1 if True


#define IF_BLKID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BLKID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BLKID)


#define ENABLE_FEATURE_MDEV_EXEC if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MDEV_EXEC)
		 => 1 if def(CONFIG_FEATURE_MDEV_EXEC)


#define clear_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_BLKID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BLKID)
		(__VA_ARGS__...) if def(CONFIG_BLKID)


#define IF_NOT_FEATURE_VI_DOT_CMD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_DOT_CMD)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_DOT_CMD)


#define ENABLE_UNIQ if True 
	expansions 
		 => 0 if !def(CONFIG_UNIQ)
		 => 1 if def(CONFIG_UNIQ)


#define IF_NOT_SVLOGD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SVLOGD)
		(__VA_ARGS__...) if def(CONFIG_SVLOGD)


#define restorecon_full_usage if True 
	expansions 
		 => "\n\n" "Reset security contexts of files in pathname\n" "\n	-i	Ignore files that don't exist" "\n	-f FILE	File with list of files to process" "\n	-e DIR	Directory to exclude" "\n	-R,-r	Recurse" "\n	-n	Don't change any file labels" "\n	-o FILE	Save list of files with incorrect context" "\n	-v	Verbose" "\n	-vv	Show changed labels" "\n	-F	Force reset of context to match file_context" "\n		for customizable files, or the user section," "\n		if it has changed" if True


#define IF_FEATURE_NETSTAT_WIDE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_NETSTAT_WIDE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_NETSTAT_WIDE)


#define IF_NOT_FEATURE_HDPARM_GET_IDENTITY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HDPARM_GET_IDENTITY)


#define ENABLE_UNICODE_USING_LOCALE if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_USING_LOCALE)
		 => 1 if def(CONFIG_UNICODE_USING_LOCALE)


#define IF_MAN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MAN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MAN)


#define IF_REALPATH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_REALPATH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_REALPATH)


#define ENABLE_FDFORMAT if True 
	expansions 
		 => 0 if !def(CONFIG_FDFORMAT)
		 => 1 if def(CONFIG_FDFORMAT)


#define IF_NOT_FEATURE_MOUNT_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_VERBOSE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_VERBOSE)


#define rtcwake_trivial_usage if True 
	expansions 
		 => "[-a | -l | -u] [-d DEV] [-m MODE] [-s SEC | -t TIME]" if True


#define IF_RAIDAUTORUN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RAIDAUTORUN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RAIDAUTORUN)


#define IF_NOT_ENVDIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ENVDIR)
		(__VA_ARGS__...) if def(CONFIG_ENVDIR)


#define __SLONG32_TYPE if True 
	expansions 
		 => int if True


#define ENABLE_FEATURE_XARGS_SUPPORT_TERMOPT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
		 => 1 if def(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)


#define __DEV_T_TYPE if True 
	expansions 
		 => __UQUAD_TYPE if True


#define depmod_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define strings_trivial_usage if True 
	expansions 
		 => "[-afo] [-n LEN] [FILE]..." if True


#define ____FILE_defined if True 
	expansions 
		 => 1 if True


#define IF_NOT_DEFAULT_MODULES_DIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEFAULT_MODULES_DIR)
		(__VA_ARGS__...) if def(CONFIG_DEFAULT_MODULES_DIR)


#define __stub_setlogin if True 
	expansions 
		 if True


#define IF_FEATURE_IFUPDOWN_IP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_IP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_IP)


#define hwclock_trivial_usage if True 
	expansions 
		 => IF_FEATURE_HWCLOCK_LONG_OPTIONS( "[-r|--show] [-s|--hctosys] [-w|--systohc]" " [-l|--localtime] [-u|--utc]" " [-f FILE]" ) IF_NOT_FEATURE_HWCLOCK_LONG_OPTIONS( "[-r] [-s] [-w] [-l] [-u] [-f FILE]" ) if True


#define ENABLE_CATV if True 
	expansions 
		 => 0 if !def(CONFIG_CATV)
		 => 1 if def(CONFIG_CATV)


#define IF_NOT_FEATURE_HTTPD_AUTH_MD5 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_AUTH_MD5)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_AUTH_MD5)


#define IF_NOT_FEATURE_ENV_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ENV_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ENV_LONG_OPTIONS)


#define ENABLE_FEATURE_TELNET_TTYPE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TELNET_TTYPE)
		 => 1 if def(CONFIG_FEATURE_TELNET_TTYPE)


#define IF_BASENAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BASENAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BASENAME)


#define IF_FEATURE_MOUNT_LOOP_CREATE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_LOOP_CREATE)


#define IF_SETFONT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETFONT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETFONT)


#define ENABLE_SHOW_USAGE if True 
	expansions 
		 => 0 if !def(CONFIG_SHOW_USAGE)
		 => 1 if def(CONFIG_SHOW_USAGE)


#define ENABLE_DMESG if True 
	expansions 
		 => 0 if !def(CONFIG_DMESG)
		 => 1 if def(CONFIG_DMESG)


#define IF_NOT_FEATURE_INSMOD_KSYMOOPS_SYMBOLS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)


#define IF_VOLUMEID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_VOLUMEID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_VOLUMEID)


#define ENABLE_SH_MATH_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_SH_MATH_SUPPORT)
		 => 1 if def(CONFIG_SH_MATH_SUPPORT)


#define __int8_t_defined if True 
	expansions 
		 if True


#define ENABLE_PMAP if True 
	expansions 
		 => 0 if !def(CONFIG_PMAP)
		 => 1 if def(CONFIG_PMAP)


#define ENABLE_ASH_EXPAND_PRMT if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_EXPAND_PRMT)
		 => 1 if def(CONFIG_ASH_EXPAND_PRMT)


#define IF_FTPPUT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FTPPUT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FTPPUT)


#define __USE_FILE_OFFSET64 if False 
	expansions 



#define unlzma_full_usage if True 
	expansions 
		 => "\n\n" "Decompress FILE (or stdin)\n" "\nOptions:" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define egrep_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define sendmail_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [RECIPIENT_EMAIL]..." if True


#define IF_FEATURE_CALL_TELINIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CALL_TELINIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CALL_TELINIT)


#define IF_NOT_CAL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CAL)
		(__VA_ARGS__...) if def(CONFIG_CAL)


#define IF_NOT_FEATURE_TFTP_PUT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TFTP_PUT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TFTP_PUT)


#define IF_FEATURE_VOLUMEID_FAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_FAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_FAT)


#define IF_NOT_FEATURE_MIME_CHARSET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MIME_CHARSET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MIME_CHARSET)


#define IF_FEATURE_NETSTAT_PRG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_NETSTAT_PRG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_NETSTAT_PRG)


#define ENABLE_FEATURE_IPC_SYSLOG_BUFFER_SIZE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
		 => 1 if def(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)


#define gunzip_example_usage if True 
	expansions 
		 => "$ ls -la /tmp/BusyBox*\n" "-rw-rw-r--    1 andersen andersen   557009 Apr 11 10:55 /tmp/BusyBox-0.43.tar.gz\n" "$ gunzip /tmp/BusyBox-0.43.tar.gz\n" "$ ls -la /tmp/BusyBox*\n" "-rw-rw-r--    1 andersen andersen  1761280 Apr 14 17:47 /tmp/BusyBox-0.43.tar\n" if True


#define _SIZE_T_DEFINED_ if True 
	expansions 
		 if True


#define IF_NOT_CHROOT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHROOT)
		(__VA_ARGS__...) if def(CONFIG_CHROOT)


#define cpio_trivial_usage if True 
	expansions 
		 => "[-dmvu] [-F FILE]" IF_FEATURE_CPIO_O(" [-H newc]") " [-ti"IF_FEATURE_CPIO_O("o")"]" IF_FEATURE_CPIO_P(" [-p DIR]") if True


#define IF_NOT_TELNET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TELNET)
		(__VA_ARGS__...) if def(CONFIG_TELNET)


#define IF_NTPD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NTPD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NTPD)


#define ENABLE_ASH_BASH_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_BASH_COMPAT)
		 => 1 if def(CONFIG_ASH_BASH_COMPAT)


#define IF_NOT_FEATURE_TAR_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_LONG_OPTIONS)


#define ENABLE_TAR if True 
	expansions 
		 => 0 if !def(CONFIG_TAR)
		 => 1 if def(CONFIG_TAR)


#define IF_NOT_FEATURE_AR_LONG_FILENAMES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_AR_LONG_FILENAMES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_AR_LONG_FILENAMES)


#define __DEC64_MIN__ if True 
	expansions 
		 => 1E-383DD if True


#define IF_UDHCPC_DEFAULT_SCRIPT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UDHCPC_DEFAULT_SCRIPT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UDHCPC_DEFAULT_SCRIPT)


#define IF_NOT_FEATURE_TAR_AUTODETECT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_AUTODETECT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_AUTODETECT)


#define ENABLE_BB_SYSCTL if True 
	expansions 
		 => 0 if !def(CONFIG_BB_SYSCTL)
		 => 1 if def(CONFIG_BB_SYSCTL)


#define IF_FEATURE_FANCY_PING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FANCY_PING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FANCY_PING)


#define IF_FEATURE_EJECT_SCSI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EJECT_SCSI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EJECT_SCSI)


#define dumpleases_full_usage if True 
	expansions 
		 => "\n\n" "Display DHCP leases granted by udhcpd\n" "\nOptions:" IF_LONG_OPTS( "\n	-f,--file=FILE	Lease file" "\n	-r,--remaining	Show remaining time" "\n	-a,--absolute	Show expiration time" ) IF_NOT_LONG_OPTS( "\n	-f FILE	Lease file" "\n	-r	Show remaining time" "\n	-a	Show expiration time" ) if True


#define IF_NOT_CHAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHAT)
		(__VA_ARGS__...) if def(CONFIG_CHAT)


#define ENABLE_TELNETD if True 
	expansions 
		 => 0 if !def(CONFIG_TELNETD)
		 => 1 if def(CONFIG_TELNETD)


#define uniq_trivial_usage if True 
	expansions 
		 => "[-cdu][-f,s,w N] [INPUT [OUTPUT]]" if True


#define ENABLE_IPTUNNEL if True 
	expansions 
		 => 0 if !def(CONFIG_IPTUNNEL)
		 => 1 if def(CONFIG_IPTUNNEL)


#define IF_KBD_MODE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_KBD_MODE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_KBD_MODE)


#define sh_full_usage if True 
	expansions 
		 => "" if True


#define linux64_full_usage if True 
	expansions 
		 => "" if True


#define IF_FEATURE_HTTPD_GZIP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_GZIP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_GZIP)


#define IF_FEATURE_LESS_WINCH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_WINCH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_WINCH)


#define iostat_trivial_usage if True 
	expansions 
		 => "[-c] [-d] [-t] [-z] [-k|-m] [ALL|BLOCKDEV...] [INTERVAL [COUNT]]" if True


#define __UQUAD_TYPE if True 
	expansions 
		 => unsigned long int if True


#define IF_FEATURE_IP_ROUTE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_ROUTE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_ROUTE)


#define IF_LOADKMAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOADKMAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOADKMAP)


#define ENABLE_FEATURE_FIND_MTIME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_MTIME)
		 => 1 if def(CONFIG_FEATURE_FIND_MTIME)


#define IF_FEATURE_CHECK_NAMES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHECK_NAMES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHECK_NAMES)


#define IF_NOT_HUSH_INTERACTIVE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_INTERACTIVE)
		(__VA_ARGS__...) if def(CONFIG_HUSH_INTERACTIVE)


#define IF_NOT_STRINGS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_STRINGS)
		(__VA_ARGS__...) if def(CONFIG_STRINGS)


#define IF_NOT_FEATURE_TR_EQUIV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TR_EQUIV)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TR_EQUIV)


#define IF_NOT_TELINIT_PATH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TELINIT_PATH)
		(__VA_ARGS__...) if def(CONFIG_TELINIT_PATH)


#define nanddump_trivial_usage if True 
	expansions 
		 => "[-o] [-b] [-s ADDR] [-f FILE] MTD_DEVICE" if True


#define IF_COMM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_COMM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_COMM)


#define __attribute_format_strfmon__ if True 
	expansions 
		(a, b) => __attribute__ ((__format__ (__strfmon__, a, b))) if True


#define IF_DELGROUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DELGROUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DELGROUP)


#define __PMT if True 
	expansions 
		(args) => args if True


#define ENABLE_UNLZMA if True 
	expansions 
		 => 0 if !def(CONFIG_UNLZMA)
		 => 1 if def(CONFIG_UNLZMA)


#define __SIZEOF_WINT_T__ if True 
	expansions 
		 => 4 if True


#define IF_ASH_ALIAS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_ALIAS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_ALIAS)


#define ENABLE_FEATURE_INSMOD_KSYMOOPS_SYMBOLS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
		 => 1 if def(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)


#define IF_NOT_FEATURE_VI_SETOPTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_SETOPTS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_SETOPTS)


#define IF_NOT_FEATURE_HTTPD_GZIP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_GZIP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_GZIP)


#define ENABLE_PRINTENV if True 
	expansions 
		 => 0 if !def(CONFIG_PRINTENV)
		 => 1 if def(CONFIG_PRINTENV)


#define IF_CLEAR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CLEAR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CLEAR)


#define IF_FEATURE_IP_SHORT_FORMS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_SHORT_FORMS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_SHORT_FORMS)


#define tail_example_usage if True 
	expansions 
		 => "$ tail -n 1 /etc/resolv.conf\n" "nameserver 10.0.0.1\n" if True


#define ENABLE_GETTY if True 
	expansions 
		 => 0 if !def(CONFIG_GETTY)
		 => 1 if def(CONFIG_GETTY)


#define setfiles_trivial_usage if True 
	expansions 
		 => "[-dnpqsvW] [-e DIR]... [-o FILE] [-r alt_root_path]" IF_FEATURE_SETFILES_CHECK_OPTION( " [-c policyfile] spec_file" ) " pathname" if True


#define IF_NOT_FLASH_UNLOCK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FLASH_UNLOCK)
		(__VA_ARGS__...) if def(CONFIG_FLASH_UNLOCK)


#define IF_NOT_TAIL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TAIL)
		(__VA_ARGS__...) if def(CONFIG_TAIL)


#define IF_NOT_FEATURE_TFTP_PROGRESS_BAR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TFTP_PROGRESS_BAR)


#define fsck_minix_trivial_usage if True 
	expansions 
		 => "[-larvsmf] BLOCKDEV" if True


#define IF_FEATURE_MDEV_LOAD_FIRMWARE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)


#define IF_NOT_LOGIN_SCRIPTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOGIN_SCRIPTS)
		(__VA_ARGS__...) if def(CONFIG_LOGIN_SCRIPTS)


#define IF_NOT_INSTALL_APPLET_SCRIPT_WRAPPERS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)


#define rx_trivial_usage if True 
	expansions 
		 => "FILE" if True


#define ENABLE_RUNSVDIR if True 
	expansions 
		 => 0 if !def(CONFIG_RUNSVDIR)
		 => 1 if def(CONFIG_RUNSVDIR)


#define IF_NOT_FEATURE_LOGREAD_REDUCED_LOCKING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)


#define ENABLE_UNCOMPRESS if True 
	expansions 
		 => 0 if !def(CONFIG_UNCOMPRESS)
		 => 1 if def(CONFIG_UNCOMPRESS)


#define ENABLE_WATCHDOG if True 
	expansions 
		 => 0 if !def(CONFIG_WATCHDOG)
		 => 1 if def(CONFIG_WATCHDOG)


#define dpkg_full_usage if True 
	expansions 
		 => "\n\n" "Install, remove and manage Debian packages\n" "\nOptions:" IF_LONG_OPTS( "\n	-i,--install	Install the package" "\n	-l,--list	List of installed packages" "\n	--configure	Configure an unpackaged package" "\n	-P,--purge	Purge all files of a package" "\n	-r,--remove	Remove all but the configuration files for a package" "\n	--unpack	Unpack a package, but don't configure it" "\n	--force-depends	Ignore dependency problems" "\n	--force-confnew	Overwrite existing config files when installing" "\n	--force-confold	Keep old config files when installing" ) IF_NOT_LONG_OPTS( "\n	-i		Install the package" "\n	-l		List of installed packages" "\n	-C		Configure an unpackaged package" "\n	-P		Purge all files of a package" "\n	-r		Remove all but the configuration files for a package" "\n	-u		Unpack a package, but don't configure it" "\n	-F depends	Ignore dependency problems" "\n	-F confnew	Overwrite existing config files when installing" "\n	-F confold	Keep old config files when installing" ) if True


#define IF_NOT_FEATURE_DD_THIRD_STATUS_LINE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)


#define __fsblkcnt_t_defined if True 
	expansions 
		 if True


#define vi_full_usage if True 
	expansions 
		 => "\n\n" "Edit FILE\n" "\nOptions:" IF_FEATURE_VI_COLON( "\n	-c	Initial command to run ($EXINIT also available)" ) IF_FEATURE_VI_READONLY( "\n	-R	Read-only" ) "\n	-H	Short help regarding available features" if True


#define IF_FEATURE_TEST_64 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TEST_64)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TEST_64)


#define IF_NC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NC)


#define flock_full_usage if True 
	expansions 
		 => "\n\n" "[Un]lock file descriptor, or lock FILE, run PROG\n" "\nOptions:" "\n	-s	Shared lock" "\n	-x	Exclusive lock (default)" "\n	-u	Unlock FD" "\n	-n	Fail rather than wait" if True


#define ENABLE_DEALLOCVT if True 
	expansions 
		 => 0 if !def(CONFIG_DEALLOCVT)
		 => 1 if def(CONFIG_DEALLOCVT)


#define ENABLE_FEATURE_EDITING_SAVEHISTORY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING_SAVEHISTORY)
		 => 1 if def(CONFIG_FEATURE_EDITING_SAVEHISTORY)


#define IF_FEATURE_IFUPDOWN_IPV6 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_IPV6)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_IPV6)


#define ENABLE_NTPD if True 
	expansions 
		 => 0 if !def(CONFIG_NTPD)
		 => 1 if def(CONFIG_NTPD)


#define _SIZE_T_DEFINED if True 
	expansions 
		 if True


#define IF_NOT_REV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_REV)
		(__VA_ARGS__...) if def(CONFIG_REV)


#define IF_VLOCK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_VLOCK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_VLOCK)


#define mt_trivial_usage if True 
	expansions 
		 => "[-f device] opcode value" if True


#define setenforce_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FEATURE_LAST_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LAST_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LAST_FANCY)


#define IF_PING6 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PING6)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PING6)


#define uptime_full_usage if True 
	expansions 
		 => "\n\n" "Display the time since the last boot" if True


#define IF_FEATURE_ADDUSER_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)


#define ENABLE_FEATURE_BUFFERS_USE_MALLOC if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
		 => 1 if def(CONFIG_FEATURE_BUFFERS_USE_MALLOC)


#define ifconfig_trivial_usage if True 
	expansions 
		 => IF_FEATURE_IFCONFIG_STATUS("[-a]") " interface [address]" if True


#define IF_FEATURE_VI_READONLY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_READONLY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_READONLY)


#define bzip2_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define ENABLE_BASENAME if True 
	expansions 
		 => 0 if !def(CONFIG_BASENAME)
		 => 1 if def(CONFIG_BASENAME)


#define IF_FEATURE_MOUNT_FLAGS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_FLAGS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_FLAGS)


#define IF_ADDUSER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ADDUSER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ADDUSER)


#define IF_NOT_FEATURE_FIND_DELETE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_DELETE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_DELETE)


#define lzopcat_trivial_usage if True 
	expansions 
		 => "[-vCF] [FILE]..." if True


#define tunctl_trivial_usage if True 
	expansions 
		 => "[-f device] ([-t name] | -d name)" IF_FEATURE_TUNCTL_UG(" [-u owner] [-g group] [-b]") if True


#define __STDC__ if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_VI_MAX_LEN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_MAX_LEN)
		 => 1 if def(CONFIG_FEATURE_VI_MAX_LEN)


#define ENABLE_SWITCH_ROOT if True 
	expansions 
		 => 0 if !def(CONFIG_SWITCH_ROOT)
		 => 1 if def(CONFIG_SWITCH_ROOT)


#define ENABLE_LOSETUP if True 
	expansions 
		 => 0 if !def(CONFIG_LOSETUP)
		 => 1 if def(CONFIG_LOSETUP)


#define rx_example_usage if True 
	expansions 
		 => "$ rx /tmp/foo\n" if True


#define __stub_sstk if True 
	expansions 
		 if True


#define setsid_trivial_usage if True 
	expansions 
		 => "PROG ARGS" if True


#define patch_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [ORIGFILE [PATCHFILE]]" if True


#define setlogcons_trivial_usage if True 
	expansions 
		 => "N" if True


#define _SIZE_T if True 
	expansions 
		 if True


#define ENABLE_FEATURE_SHOW_THREADS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SHOW_THREADS)
		 => 1 if def(CONFIG_FEATURE_SHOW_THREADS)


#define logname_full_usage if True 
	expansions 
		 => "\n\n" "Print the name of the current user" if True


#define IF_LZOP_COMPR_HIGH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LZOP_COMPR_HIGH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LZOP_COMPR_HIGH)


#define ENABLE_FEATURE_FIND_NOT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_NOT)
		 => 1 if def(CONFIG_FEATURE_FIND_NOT)


#define IF_NOT_FEATURE_FIND_MAXDEPTH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_MAXDEPTH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_MAXDEPTH)


#define ubiattach_full_usage if True 
	expansions 
		 => "\n\n" "Attach MTD device to UBI\n" "\nOptions:" "\n	-m MTD_NUM	MTD device number to attach" "\n	-d UBI_NUM	UBI device number to assign" if True


#define __CHAR16_TYPE__ if True 
	expansions 
		 => short unsigned int if True


#define IF_NOT_FEATURE_FIND_MMIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_MMIN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_MMIN)


#define IF_NOT_HUSH_SAVEHISTORY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_SAVEHISTORY)
		(__VA_ARGS__...) if def(CONFIG_HUSH_SAVEHISTORY)


#define IF_NOT_IFENSLAVE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IFENSLAVE)
		(__VA_ARGS__...) if def(CONFIG_IFENSLAVE)


#define BB_USAGE_H if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_SUID_CONFIG_QUIET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SUID_CONFIG_QUIET)
		 => 1 if def(CONFIG_FEATURE_SUID_CONFIG_QUIET)


#define ENABLE_SENDMAIL if True 
	expansions 
		 => 0 if !def(CONFIG_SENDMAIL)
		 => 1 if def(CONFIG_SENDMAIL)


#define ENABLE_REFORMIME if True 
	expansions 
		 => 0 if !def(CONFIG_REFORMIME)
		 => 1 if def(CONFIG_REFORMIME)


#define stty_full_usage if True 
	expansions 
		 => "\n\n" "Without arguments, prints baud rate, line discipline,\n" "and deviations from stty sane\n" "\nOptions:" "\n	-F DEVICE	Open device instead of stdin" "\n	-a		Print all current settings in human-readable form" "\n	-g		Print in stty-readable form" "\n	[SETTING]	See manpage" if True


#define loadkmap_full_usage if True 
	expansions 
		 => "\n\n" "Load a binary keyboard translation table from stdin\n" if True


#define ENABLE_IPCRM if True 
	expansions 
		 => 0 if !def(CONFIG_IPCRM)
		 => 1 if def(CONFIG_IPCRM)


#define IF_MD5SUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MD5SUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MD5SUM)


#define _POSIX_C_SOURCE if True 
	expansions 
		 => 200809L if True


#define IF_CTTYHACK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CTTYHACK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CTTYHACK)


#define ENABLE_TRUE if True 
	expansions 
		 => 0 if !def(CONFIG_TRUE)
		 => 1 if def(CONFIG_TRUE)


#define IF_FEATURE_FANCY_HEAD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FANCY_HEAD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FANCY_HEAD)


#define IF_NOT_FEATURE_XARGS_SUPPORT_QUOTES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)


#define WEXITSTATUS if True 
	expansions 
		(status) => __WEXITSTATUS (__WAIT_INT (status)) if True


#define __STDC_ISO_10646__ if True 
	expansions 
		 => 200009L if True


#define ENABLE_HUSH_EXPORT_N if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_EXPORT_N)
		 => 1 if def(CONFIG_HUSH_EXPORT_N)


#define nslookup_example_usage if True 
	expansions 
		 => "$ nslookup localhost\n" "Server:     default\n" "Address:    default\n" "\n" "Name:       debian\n" "Address:    127.0.0.1\n" if True


#define hd_trivial_usage if True 
	expansions 
		 => "FILE..." if True


#define IF_NOT_HUSH_EXPORT_N if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_EXPORT_N)
		(__VA_ARGS__...) if def(CONFIG_HUSH_EXPORT_N)


#define IF_DEFAULT_DEPMOD_FILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEFAULT_DEPMOD_FILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEFAULT_DEPMOD_FILE)


#define IF_INSTALL_SH_APPLET_HARDLINK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_SH_APPLET_HARDLINK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_SH_APPLET_HARDLINK)


#define __PDP_ENDIAN if True 
	expansions 
		 => 3412 if True


#define ENABLE_FEATURE_KILL_REMOVED if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_KILL_REMOVED)
		 => 1 if def(CONFIG_FEATURE_KILL_REMOVED)


#define ENABLE_FEATURE_KLOGD_KLOGCTL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_KLOGD_KLOGCTL)
		 => 1 if def(CONFIG_FEATURE_KLOGD_KLOGCTL)


#define IF_LN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LN)


#define ipaddr_trivial_usage if True 
	expansions 
		 => "{ {add|del} IFADDR dev STRING | {show|flush}\n" "		[dev STRING] [to PREFIX] }" if True


#define ENABLE_LOADKMAP if True 
	expansions 
		 => 0 if !def(CONFIG_LOADKMAP)
		 => 1 if def(CONFIG_LOADKMAP)


#define IF_NOT_LN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LN)
		(__VA_ARGS__...) if def(CONFIG_LN)


#define IF_NOT_FEATURE_LESS_BRACKETS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_BRACKETS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_BRACKETS)


#define ENABLE_FEATURE_RUN_PARTS_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)


#define __DEC32_MIN_EXP__ if True 
	expansions 
		 => (-94) if True


#define __uid_t_defined if True 
	expansions 
		 if True


#define __nlink_t_defined if True 
	expansions 
		 if True


#define IF_NOT_CHPST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHPST)
		(__VA_ARGS__...) if def(CONFIG_CHPST)


#define IF_FEATURE_FIND_PATH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_PATH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_PATH)


#define base64_trivial_usage if True 
	expansions 
		 => "[-d] [FILE]" if True


#define ENABLE_GREP if True 
	expansions 
		 => 0 if !def(CONFIG_GREP)
		 => 1 if def(CONFIG_GREP)


#define IF_FEATURE_FIND_DEPTH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_DEPTH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_DEPTH)


#define IF_YES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_YES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_YES)


#define ENABLE_NC if True 
	expansions 
		 => 0 if !def(CONFIG_NC)
		 => 1 if def(CONFIG_NC)


#define ENABLE_FEATURE_IFCONFIG_SLIP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFCONFIG_SLIP)
		 => 1 if def(CONFIG_FEATURE_IFCONFIG_SLIP)


#define setconsole_full_usage if True 
	expansions 
		 => "\n\n" "Redirect system console output to DEVICE (default: /dev/tty)\n" "\nOptions:" "\n	-r	Reset output to /dev/console" if True


#define ENABLE_FEATURE_FANCY_TAIL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FANCY_TAIL)
		 => 1 if def(CONFIG_FEATURE_FANCY_TAIL)


#define IF_FEATURE_BUFFERS_USE_MALLOC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BUFFERS_USE_MALLOC)


#define IF_NOT_RPM2CPIO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RPM2CPIO)
		(__VA_ARGS__...) if def(CONFIG_RPM2CPIO)


#define ENABLE_FEATURE_SYSLOG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SYSLOG)
		 => 1 if def(CONFIG_FEATURE_SYSLOG)


#define login_trivial_usage if True 
	expansions 
		 => "[-p] [-h HOST] [[-f] USER]" if True


#define IF_FEATURE_MV_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MV_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MV_LONG_OPTIONS)


#define fgconsole_trivial_usage if True 
	expansions 
		 => "" if True


#define dc_trivial_usage if True 
	expansions 
		 => "EXPRESSION..." if True


#define cut_full_usage if True 
	expansions 
		 => "\n\n" "Print selected fields from each input FILE to stdout\n" "\nOptions:" "\n	-b LIST	Output only bytes from LIST" "\n	-c LIST	Output only characters from LIST" "\n	-d CHAR	Use CHAR instead of tab as the field delimiter" "\n	-s	Output only the lines containing delimiter" "\n	-f N	Print only these fields" "\n	-n	Ignored" if True


#define IF_OD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_OD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_OD)


#define ENABLE_LN if True 
	expansions 
		 => 0 if !def(CONFIG_LN)
		 => 1 if def(CONFIG_LN)


#define IF_NOT_SETSEBOOL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETSEBOOL)
		(__VA_ARGS__...) if def(CONFIG_SETSEBOOL)


#define __WORDSIZE_COMPAT32 if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_SU_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SU_SYSLOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SU_SYSLOG)


#define IF_READAHEAD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_READAHEAD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_READAHEAD)


#define ENABLE_FEATURE_ROTATE_LOGFILE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ROTATE_LOGFILE)
		 => 1 if def(CONFIG_FEATURE_ROTATE_LOGFILE)


#define chgrp_full_usage if True 
	expansions 
		 => "\n\n" "Change the group membership of each FILE to GROUP\n" "\nOptions:" "\n	-R	Recurse" "\n	-h	Affect symlinks instead of symlink targets" "\n	-L	Traverse all symlinks to directories" "\n	-H	Traverse symlinks on command line only" "\n	-P	Don't traverse symlinks (default)" IF_DESKTOP( "\n	-c	List changed files" "\n	-v	Verbose" "\n	-f	Hide errors" ) if True


#define linuxrc_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define __FLOAT_WORD_ORDER if True 
	expansions 
		 => __BYTE_ORDER if True


#define IF_FEATURE_IFUPDOWN_EXTERNAL_DHCP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)


#define IF_WGET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WGET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WGET)


#define __REDIRECT_NTH_LDBL if True 
	expansions 
		(name, proto, alias) => __REDIRECT_NTH (name, proto, alias) if True


#define be64toh if True 
	expansions 
		(x) => __bswap_64 (x) if True


#define IF_NOT_SETARCH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETARCH)
		(__VA_ARGS__...) if def(CONFIG_SETARCH)


#define IF_NOT_FEATURE_IPCALC_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)


#define sha512sum_trivial_usage if True 
	expansions 
		 => "[FILE]..." IF_FEATURE_MD5_SHA1_SUM_CHECK("\n   or: sha512sum -c [-sw] [FILE]") if True


#define openvt_full_usage if True 
	expansions 
		 => "\n\n" "Start PROG on a new virtual terminal\n" "\nOptions:" "\n	-c N	Use specified VT" "\n	-s	Switch to the VT" "\n	-w	Wait for PROG to exit" if True


#define PDP_ENDIAN if True 
	expansions 
		 => __PDP_ENDIAN if True


#define ENABLE_FEATURE_BOOTCHARTD_BLOATED_HEADER if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
		 => 1 if def(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)


#define IF_FEATURE_SEAMLESS_Z if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SEAMLESS_Z)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SEAMLESS_Z)


#define crontab_trivial_usage if True 
	expansions 
		 => "[-c DIR] [-u USER] [-ler]|[FILE]" if True


#define IF_TAC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TAC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TAC)


#define IF_NOT_FEATURE_IP_RARE_PROTOCOLS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_RARE_PROTOCOLS)


#define ENABLE_CHPASSWD if True 
	expansions 
		 => 0 if !def(CONFIG_CHPASSWD)
		 => 1 if def(CONFIG_CHPASSWD)


#define __SQUAD_TYPE if True 
	expansions 
		 => long int if True


#define IF_FEATURE_PIDOF_SINGLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PIDOF_SINGLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PIDOF_SINGLE)


#define _IO_IS_FILEBUF if True 
	expansions 
		 => 0x2000 if True


#define IF_INSTALL_APPLET_SCRIPT_WRAPPERS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)


#define _IO_pid_t if True 
	expansions 
		 => _G_pid_t if True


#define __STDC_HOSTED__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_RMDIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RMDIR)
		(__VA_ARGS__...) if def(CONFIG_RMDIR)


#define IF_DUMPKMAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DUMPKMAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DUMPKMAP)


#define __FLT_MIN__ if True 
	expansions 
		 => 1.17549435e-38F if True


#define pwd_example_usage if True 
	expansions 
		 => "$ pwd\n" "/root\n" if True


#define split_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-b N[k|m]	Split by N (kilo|mega)bytes" "\n	-l N		Split by N lines" "\n	-a N		Use N letters as suffix" if True


#define IF_DEVMEM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEVMEM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEVMEM)


#define IF_NOT_EXTRA_COMPAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EXTRA_COMPAT)
		(__VA_ARGS__...) if def(CONFIG_EXTRA_COMPAT)


#define dos2unix_trivial_usage if True 
	expansions 
		 => "[-ud] [FILE]" if True


#define ENABLE_FEATURE_FANCY_SLEEP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FANCY_SLEEP)
		 => 1 if def(CONFIG_FEATURE_FANCY_SLEEP)


#define IF_NOT_FTPGET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FTPGET)
		(__VA_ARGS__...) if def(CONFIG_FTPGET)


#define IF_FEATURE_TFTP_PUT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TFTP_PUT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TFTP_PUT)


#define false_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FEATURE_PASSWD_WEAK_CHECK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PASSWD_WEAK_CHECK)


#define __ldiv_t_defined if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_ADDUSER_TO_GROUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ADDUSER_TO_GROUP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ADDUSER_TO_GROUP)


#define __FLT_DIG__ if True 
	expansions 
		 => 6 if True


#define IF_UDPSVD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UDPSVD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UDPSVD)


#define IF_NOT_KILL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_KILL)
		(__VA_ARGS__...) if def(CONFIG_KILL)


#define ENABLE_FEATURE_CLEAN_UP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CLEAN_UP)
		 => 1 if def(CONFIG_FEATURE_CLEAN_UP)


#define __BIT_TYPES_DEFINED__ if True 
	expansions 
		 => 1 if True


#define ENABLE_SHA512SUM if True 
	expansions 
		 => 0 if !def(CONFIG_SHA512SUM)
		 => 1 if def(CONFIG_SHA512SUM)


#define gunzip_trivial_usage if True 
	expansions 
		 => "[-cft] [FILE]..." if True


#define ENABLE_FEATURE_UTMP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UTMP)
		 => 1 if def(CONFIG_FEATURE_UTMP)


#define IF_FEATURE_VI_WIN_RESIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_WIN_RESIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_WIN_RESIZE)


#define rdev_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FEATURE_VI_OPTIMIZE_CURSOR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)


#define ENABLE_TOUCH if True 
	expansions 
		 => 0 if !def(CONFIG_TOUCH)
		 => 1 if def(CONFIG_TOUCH)


#define IF_RENICE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RENICE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RENICE)


#define addgroup_full_usage if True 
	expansions 
		 => "\n\n" "Add a group " IF_FEATURE_ADDUSER_TO_GROUP("or add a user to a group") "\n" "\nOptions:" "\n	-g GID	Group id" "\n	-S	Create a system group" if True


#define IF_NOT_CAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CAT)
		(__VA_ARGS__...) if def(CONFIG_CAT)


#define IF_NOT_LOAD_POLICY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOAD_POLICY)
		(__VA_ARGS__...) if def(CONFIG_LOAD_POLICY)


#define stdin if True 
	expansions 
		 => stdin if True


#define ENABLE_DOS2UNIX if True 
	expansions 
		 => 0 if !def(CONFIG_DOS2UNIX)
		 => 1 if def(CONFIG_DOS2UNIX)


#define __USE_XOPEN2K8 if True 
	expansions 
		 => 1 if True


#define echo_full_usage if True 
	expansions 
		 => "\n\n" "Print the specified ARGs to stdout" IF_FEATURE_FANCY_ECHO( "\n" "\nOptions:" "\n	-n	Suppress trailing newline" "\n	-e	Interpret backslash escapes (i.e., \\t=tab)" "\n	-E	Don't interpret backslash escapes (default)" ) if True


#define IF_DHCPD_LEASES_FILE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DHCPD_LEASES_FILE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DHCPD_LEASES_FILE)


#define ENABLE_HUSH_INTERACTIVE if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_INTERACTIVE)
		 => 1 if def(CONFIG_HUSH_INTERACTIVE)


#define msh_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define IF_TUNE2FS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TUNE2FS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TUNE2FS)


#define hwclock_full_usage if True 
	expansions 
		 => "\n\n" "Query and set hardware clock (RTC)\n" "\nOptions:" "\n	-r	Show hardware clock time" "\n	-s	Set system time from hardware clock" "\n	-w	Set hardware clock to system time" "\n	-u	Hardware clock is in UTC" "\n	-l	Hardware clock is in local time" "\n	-f FILE	Use specified device (e.g. /dev/rtc2)" if True


#define lsattr_trivial_usage if True 
	expansions 
		 => "[-Radlv] [FILE]..." if True


#define __need_size_t if False 
	expansions 
		 if False


#define IF_FLASH_ERASEALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FLASH_ERASEALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FLASH_ERASEALL)


#define IF_FEATURE_VOLUMEID_LUKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_LUKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_LUKS)


#define IF_FEATURE_IPC_SYSLOG_BUFFER_SIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)


#define IF_NOT_FIRST_SYSTEM_ID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FIRST_SYSTEM_ID)
		(__VA_ARGS__...) if def(CONFIG_FIRST_SYSTEM_ID)


#define id_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [USER]" if True


#define ENABLE_INOTIFYD if True 
	expansions 
		 => 0 if !def(CONFIG_INOTIFYD)
		 => 1 if def(CONFIG_INOTIFYD)


#define IF_FEATURE_LS_FILETYPES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_FILETYPES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_FILETYPES)


#define IF_FEATURE_CHECK_TAINTED_MODULE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHECK_TAINTED_MODULE)


#define ENABLE_FEATURE_FIND_MMIN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_MMIN)
		 => 1 if def(CONFIG_FEATURE_FIND_MMIN)


#define fsync_full_usage if True 
	expansions 
		 => "\n\n" "Write files' buffered blocks to disk\n" "\nOptions:" "\n	-d	Avoid syncing metadata" if True


#define ENABLE_FEATURE_MDEV_RENAME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MDEV_RENAME)
		 => 1 if def(CONFIG_FEATURE_MDEV_RENAME)


#define ENABLE_IPCALC if True 
	expansions 
		 => 0 if !def(CONFIG_IPCALC)
		 => 1 if def(CONFIG_IPCALC)


#define IF_NOT_SH_MATH_SUPPORT_64 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SH_MATH_SUPPORT_64)
		(__VA_ARGS__...) if def(CONFIG_SH_MATH_SUPPORT_64)


#define __SWBLK_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define load_policy_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_HUSH_JOB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_JOB)
		(__VA_ARGS__...) if def(CONFIG_HUSH_JOB)


#define inotifyd_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG on filesystem changes." "\nWhen a filesystem event matching MASK occurs on FILEn," "\nPROG ACTUAL_EVENTS FILEn [SUBFILE] is run." "\nEvents:" "\n	a	File is accessed" "\n	c	File is modified" "\n	e	Metadata changed" "\n	w	Writable file is closed" "\n	0	Unwritable file is closed" "\n	r	File is opened" "\n	D	File is deleted" "\n	M	File is moved" "\n	u	Backing fs is unmounted" "\n	o	Event queue overflowed" "\n	x	File can't be watched anymore" "\nIf watching a directory:" "\n	m	Subfile is moved into dir" "\n	y	Subfile is moved out of dir" "\n	n	Subfile is created" "\n	d	Subfile is deleted" "\n" "\ninotifyd waits for PROG to exit." "\nWhen x event happens for all FILEs, inotifyd exits." if True


#define ENABLE_UPTIME if True 
	expansions 
		 => 0 if !def(CONFIG_UPTIME)
		 => 1 if def(CONFIG_UPTIME)


#define IF_FEATURE_KLOGD_KLOGCTL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_KLOGD_KLOGCTL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_KLOGD_KLOGCTL)


#define getopt_full_usage if True 
	expansions 
		 => "\n\n" "Options:" IF_LONG_OPTS( "\n	-a,--alternative		Allow long options starting with single -" "\n	-l,--longoptions=longopts	Long options to be recognized" "\n	-n,--name=progname		The name under which errors are reported" "\n	-o,--options=optstring		Short options to be recognized" "\n	-q,--quiet			Disable error reporting by getopt(3)" "\n	-Q,--quiet-output		No normal output" "\n	-s,--shell=shell		Set shell quoting conventions" "\n	-T,--test			Test for getopt(1) version" "\n	-u,--unquoted			Don't quote the output" ) IF_NOT_LONG_OPTS( "\n	-a		Allow long options starting with single -" "\n	-l longopts	Long options to be recognized" "\n	-n progname	The name under which errors are reported" "\n	-o optstring	Short options to be recognized" "\n	-q		Disable error reporting by getopt(3)" "\n	-Q		No normal output" "\n	-s shell	Set shell quoting conventions" "\n	-T		Test for getopt(1) version" "\n	-u		Don't quote the output" ) if True


#define IF_NOT_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)


#define ipcs_trivial_usage if True 
	expansions 
		 => "[[-smq] -i shmid] | [[-asmq] [-tcplu]]" if True


#define wall_sample_usage if True 
	expansions 
		 => "echo foo | wall\n" "wall ./mymessage" if True


#define ENABLE_KILL if True 
	expansions 
		 => 0 if !def(CONFIG_KILL)
		 => 1 if def(CONFIG_KILL)


#define IF_FEATURE_DC_LIBM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DC_LIBM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DC_LIBM)


#define IF_NOT_MICROCOM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MICROCOM)
		(__VA_ARGS__...) if def(CONFIG_MICROCOM)


#define _IO_ferror_unlocked if True 
	expansions 
		(__fp) => (((__fp)->_flags & _IO_ERR_SEEN) != 0) if True


#define IF_NOT_PASSWORD_MINLEN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PASSWORD_MINLEN)
		(__VA_ARGS__...) if def(CONFIG_PASSWORD_MINLEN)


#define mount_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [-o OPTS] DEVICE NODE" if True


#define IF_FEATURE_START_STOP_DAEMON_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)


#define IF_NOT_ETHER_WAKE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ETHER_WAKE)
		(__VA_ARGS__...) if def(CONFIG_ETHER_WAKE)


#define __stub_putmsg if True 
	expansions 
		 if True


#define raidautorun_trivial_usage if True 
	expansions 
		 => "DEVICE" if True


#define ENABLE_ED if True 
	expansions 
		 => 0 if !def(CONFIG_ED)
		 => 1 if def(CONFIG_ED)


#define mesg_trivial_usage if True 
	expansions 
		 => "[y|n]" if True


#define _G_VTABLE_LABEL_PREFIX_ID if True 
	expansions 
		 => __vt_ if True


#define mv_example_usage if True 
	expansions 
		 => "$ mv /tmp/foo /bin/bar\n" if True


#define __key_t_defined if True 
	expansions 
		 if True


#define __va_arg_pack_len if True 
	expansions 
		() => __builtin_va_arg_pack_len () if True


#define IF_NOT_DEVFSD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEVFSD)
		(__VA_ARGS__...) if def(CONFIG_DEVFSD)


#define IF_NOT_FEATURE_INIT_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INIT_SYSLOG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INIT_SYSLOG)


#define IF_NOT_INETD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INETD)
		(__VA_ARGS__...) if def(CONFIG_INETD)


#define BIG_ENDIAN if True 
	expansions 
		 => __BIG_ENDIAN if True


#define IF_NOT_FTPD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FTPD)
		(__VA_ARGS__...) if def(CONFIG_FTPD)


#define USAGE_PS if ((!def(CONFIG_SELINUX)&!def(CONFIG_FEATURE_PS_WIDE)&!def(CONFIG_DESKTOP))|(!def(CONFIG_DESKTOP)&(def(CONFIG_SELINUX)|def(CONFIG_FEATURE_PS_WIDE)))) 
	expansions 
		 => "\nOptions:" if (!def(CONFIG_DESKTOP)&(def(CONFIG_SELINUX)|def(CONFIG_FEATURE_PS_WIDE)))
		 => "\nThis version of ps accepts no options" if (!def(CONFIG_SELINUX)&!def(CONFIG_FEATURE_PS_WIDE)&!def(CONFIG_DESKTOP)&(def(CONFIG_DESKTOP)|(!def(CONFIG_SELINUX)&!def(CONFIG_FEATURE_PS_WIDE))))


#define find_example_usage if True 
	expansions 
		 => "$ find / -name passwd\n" "/etc/passwd\n" if True


#define __LONG_LONG_PAIR if True 
	expansions 
		(HI, LO) => LO, HI if True


#define IF_NOT_FEATURE_EXPAND_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)


#define __STRING if True 
	expansions 
		(x) => #x if True


#define IF_FEATURE_EDITING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING)


#define __mode_t_defined if True 
	expansions 
		 if True


#define IF_FEATURE_HTTPD_AUTH_MD5 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_AUTH_MD5)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_AUTH_MD5)


#define WIFCONTINUED if True 
	expansions 
		(status) => __WIFCONTINUED (__WAIT_INT (status)) if True


#define __LDBL_HAS_INFINITY__ if True 
	expansions 
		 => 1 if True


#define __INTMAX_MAX__ if True 
	expansions 
		 => 9223372036854775807L if True


#define _IOS_BIN if True 
	expansions 
		 => 128 if True


#define IF_NOT_PREFIX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PREFIX)
		(__VA_ARGS__...) if def(CONFIG_PREFIX)


#define _WCHAR_T_DEFINED_ if True 
	expansions 
		 if True


#define fold_full_usage if True 
	expansions 
		 => "\n\n" "Wrap input lines in each FILE (or stdin), writing to stdout\n" "\nOptions:" "\n	-b	Count bytes rather than columns" "\n	-s	Break at spaces" "\n	-w	Use WIDTH columns instead of 80" if True


#define __bswap_32 if True 
	expansions 
		(x) => (__extension__ ({ register unsigned int __v, __x = (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_32 (__x); else __asm__ ("bswap %0" : "=r" (__v) : "0" (__x)); __v; })) if True


#define IF_NOT_FEATURE_EDITING_SAVEHISTORY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING_SAVEHISTORY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING_SAVEHISTORY)


#define ENABLE_UDHCPC if True 
	expansions 
		 => 0 if !def(CONFIG_UDHCPC)
		 => 1 if def(CONFIG_UDHCPC)


#define ENABLE_CHMOD if True 
	expansions 
		 => 0 if !def(CONFIG_CHMOD)
		 => 1 if def(CONFIG_CHMOD)


#define __DEC32_EPSILON__ if True 
	expansions 
		 => 1E-6DF if True


#define IF_NOT_FEATURE_LESS_REGEXP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_REGEXP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_REGEXP)


#define awk_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [AWK_PROGRAM] [FILE]..." if True


#define ENABLE_SHA1SUM if True 
	expansions 
		 => 0 if !def(CONFIG_SHA1SUM)
		 => 1 if def(CONFIG_SHA1SUM)


#define IF_NOT_MODINFO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MODINFO)
		(__VA_ARGS__...) if def(CONFIG_MODINFO)


#define IF_NOT_AR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_AR)
		(__VA_ARGS__...) if def(CONFIG_AR)


#define ifenslave_example_usage if True 
	expansions 
		 => "To create a bond device, simply follow these three steps:\n" "- ensure that the required drivers are properly loaded:\n" "  # modprobe bonding ; modprobe <3c59x|eepro100|pcnet32|tulip|...>\n" "- assign an IP address to the bond device:\n" "  # ifconfig bond0 <addr> netmask <mask> broadcast <bcast>\n" "- attach all the interfaces you need to the bond device:\n" "  # ifenslave bond0 eth0 eth1 eth2\n" "  If bond0 didn't have a MAC address, it will take eth0's. Then, all\n" "  interfaces attached AFTER this assignment will get the same MAC addr.\n\n" "  To detach a dead interface without setting the bond device down:\n" "  # ifenslave -d bond0 eth1\n\n" "  To set the bond device down and automatically release all the slaves:\n" "  # ifconfig bond0 down\n\n" "  To change active slave:\n" "  # ifenslave -c bond0 eth0\n" if True


#define IF_NOT_FEATURE_DEVFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DEVFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DEVFS)


#define __SIZEOF_POINTER__ if True 
	expansions 
		 => 8 if True


#define IF_NOT_DEBUG_PESSIMIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEBUG_PESSIMIZE)
		(__VA_ARGS__...) if def(CONFIG_DEBUG_PESSIMIZE)


#define ENABLE_FEATURE_DD_IBS_OBS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DD_IBS_OBS)
		 => 1 if def(CONFIG_FEATURE_DD_IBS_OBS)


#define IF_NOT_INSTALL_SH_APPLET_SCRIPT_WRAPPER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)


#define _IO_IN_BACKUP if True 
	expansions 
		 => 0x100 if True


#define __wchar_t__ if True 
	expansions 
		 if True


#define ENABLE_CHAT if True 
	expansions 
		 => 0 if !def(CONFIG_CHAT)
		 => 1 if def(CONFIG_CHAT)


#define ENABLE_DNSD if True 
	expansions 
		 => 0 if !def(CONFIG_DNSD)
		 => 1 if def(CONFIG_DNSD)


#define IF_EJECT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EJECT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EJECT)


#define logname_trivial_usage if True 
	expansions 
		 => "" if True


#define makedevs_trivial_usage if (def(CONFIG_FEATURE_MAKEDEVS_LEAF)|def(CONFIG_FEATURE_MAKEDEVS_TABLE)) 
	expansions 
		 => "[-d device_table] rootdir" if def(CONFIG_FEATURE_MAKEDEVS_TABLE)
		 => "NAME TYPE MAJOR MINOR FIRST LAST [s]" if (def(CONFIG_FEATURE_MAKEDEVS_LEAF)&!def(CONFIG_FEATURE_MAKEDEVS_TABLE))


#define IF_INSTALL_APPLET_HARDLINKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_APPLET_HARDLINKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_APPLET_HARDLINKS)


#define nmeter_full_usage if True 
	expansions 
		 => "\n\n" "Monitor system in real time\n\n" "Format specifiers:\n" " %Nc or %[cN]	Monitor CPU. N - bar size, default 10\n" "		(displays: S:system U:user N:niced D:iowait I:irq i:softirq)\n" " %[niface]	Monitor network interface 'iface'\n" " %m		Monitor allocated memory\n" " %[mf]		Monitor free memory\n" " %[mt]		Monitor total memory\n" " %s		Monitor allocated swap\n" " %f		Monitor number of used file descriptors\n" " %Ni		Monitor total/specific IRQ rate\n" " %x		Monitor context switch rate\n" " %p		Monitor forks\n" " %[pn]		Monitor # of processes\n" " %b		Monitor block io\n" " %Nt		Show time (with N decimal points)\n" " %Nd		Milliseconds between updates (default:1000)\n" " %r		Print <cr> instead of <lf> at EOL" if True


#define IF_NOT_MD5SUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MD5SUM)
		(__VA_ARGS__...) if def(CONFIG_MD5SUM)


#define __GNUC_MINOR__ if True 
	expansions 
		 => 4 if True


#define ENABLE_FEATURE_FIND_PRUNE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_PRUNE)
		 => 1 if def(CONFIG_FEATURE_FIND_PRUNE)


#define IF_NOT_FEATURE_SEAMLESS_BZ2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SEAMLESS_BZ2)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SEAMLESS_BZ2)


#define nohup_example_usage if True 
	expansions 
		 => "$ nohup make &" if True


#define blockdev_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	--setro		Set ro" "\n	--setrw		Set rw" "\n	--getro		Get ro" "\n	--getss		Get sector size" "\n	--getbsz	Get block size" "\n	--setbsz BYTES	Set block size" "\n	--getsize	Get device size in 512-byte sectors" "\n	--getsize64	Get device size in bytes" "\n	--flushbufs	Flush buffers" "\n	--rereadpt	Reread partition table" if True


#define ENABLE_FEATURE_TAR_CREATE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_CREATE)
		 => 1 if def(CONFIG_FEATURE_TAR_CREATE)


#define IF_NOT_ED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ED)
		(__VA_ARGS__...) if def(CONFIG_ED)


#define IF_NOT_FEATURE_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SYSLOG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SYSLOG)


#define IF_NOT_FEATURE_TELNET_TTYPE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TELNET_TTYPE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TELNET_TTYPE)


#define IF_ASH_CMDCMD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_CMDCMD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_CMDCMD)


#define htole16 if True 
	expansions 
		(x) => (x) if True


#define start_stop_daemon_full_usage if True 
	expansions 
		 => "\n\n" "Search for matching processes, and then\n" "-K: stop all matching processes.\n" "-S: start a process unless a matching process is found.\n" IF_FEATURE_START_STOP_DAEMON_LONG_OPTIONS( "\nProcess matching:" "\n	-u,--user USERNAME|UID	Match only this user's processes" "\n	-n,--name NAME		Match processes with NAME" "\n				in comm field in /proc/PID/stat" "\n	-x,--exec EXECUTABLE	Match processes with this command" "\n				in /proc/PID/cmdline" "\n	-p,--pidfile FILE	Match a process with PID from the file" "\n	All specified conditions must match" "\n-S only:" "\n	-x,--exec EXECUTABLE	Program to run" "\n	-a,--startas NAME	Zeroth argument" "\n	-b,--background		Background" IF_FEATURE_START_STOP_DAEMON_FANCY( "\n	-N,--nicelevel N	Change nice level" ) "\n	-c,--chuid USER[:[GRP]]	Change to user/group" "\n	-m,--make-pidfile	Write PID to the pidfile specified by -p" "\n-K only:" "\n	-s,--signal SIG		Signal to send" "\n	-t,--test		Match only, exit with 0 if a process is found" "\nOther:" IF_FEATURE_START_STOP_DAEMON_FANCY( "\n	-o,--oknodo		Exit with status 0 if nothing is done" "\n	-v,--verbose		Verbose" ) "\n	-q,--quiet		Quiet" ) IF_NOT_FEATURE_START_STOP_DAEMON_LONG_OPTIONS( "\nProcess matching:" "\n	-u USERNAME|UID	Match only this user's processes" "\n	-n NAME		Match processes with NAME" "\n			in comm field in /proc/PID/stat" "\n	-x EXECUTABLE	Match processes with this command" "\n			command in /proc/PID/cmdline" "\n	-p FILE		Match a process with PID from the file" "\n	All specified conditions must match" "\n-S only:" "\n	-x EXECUTABLE	Program to run" "\n	-a NAME		Zeroth argument" "\n	-b		Background" IF_FEATURE_START_STOP_DAEMON_FANCY( "\n	-N N		Change nice level" ) "\n	-c USER[:[GRP]]	Change to user/group" "\n	-m		Write PID to the pidfile specified by -p" "\n-K only:" "\n	-s SIG		Signal to send" "\n	-t		Match only, exit with 0 if a process is found" "\nOther:" IF_FEATURE_START_STOP_DAEMON_FANCY( "\n	-o		Exit with status 0 if nothing is done" "\n	-v		Verbose" ) "\n	-q		Quiet" ) if True


#define IF_NOT_START_STOP_DAEMON if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_START_STOP_DAEMON)
		(__VA_ARGS__...) if def(CONFIG_START_STOP_DAEMON)


#define ENABLE_MKNOD if True 
	expansions 
		 => 0 if !def(CONFIG_MKNOD)
		 => 1 if def(CONFIG_MKNOD)


#define IF_IPLINK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPLINK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPLINK)


#define _IO_LEFT if True 
	expansions 
		 => 02 if True


#define ENABLE_FEATURE_USE_TERMIOS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_USE_TERMIOS)
		 => 1 if def(CONFIG_FEATURE_USE_TERMIOS)


#define IF_DEALLOCVT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEALLOCVT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEALLOCVT)


#define IF_NOT_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)


#define IF_FEATURE_VI_8BIT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_8BIT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_8BIT)


#define IF_NOT_FEATURE_HWIB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HWIB)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HWIB)


#define rdev_example_usage if True 
	expansions 
		 => "$ rdev\n" "/dev/mtdblock9 /\n" if True


#define ENABLE_INETD if True 
	expansions 
		 => 0 if !def(CONFIG_INETD)
		 => 1 if def(CONFIG_INETD)


#define killall_example_usage if True 
	expansions 
		 => "$ killall apache\n" if True


#define mkfs_reiser_full_usage if True 
	expansions 
		 => "\n\n" "Make a ReiserFS V3 filesystem\n" "\nOptions:" "\n	-f	Force" "\n	-l LBL	Volume label" if True


#define ENABLE_FEATURE_VI_READONLY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_READONLY)
		 => 1 if def(CONFIG_FEATURE_VI_READONLY)


#define IF_NOT_FEATURE_UDHCPD_WRITE_LEASES_EARLY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)


#define tftp_full_usage if True 
	expansions 
		 => "\n\n" "Transfer a file from/to tftp server\n" "\nOptions:" "\n	-l FILE	Local FILE" "\n	-r FILE	Remote FILE" IF_FEATURE_TFTP_GET( "\n	-g	Get file" ) IF_FEATURE_TFTP_PUT( "\n	-p	Put file" ) IF_FEATURE_TFTP_BLOCKSIZE( "\n	-b SIZE	Transfer blocks of SIZE octets" ) if True


#define ENABLE_FEATURE_LS_SORTFILES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_SORTFILES)
		 => 1 if def(CONFIG_FEATURE_LS_SORTFILES)


#define IF_NOT_SWAPONOFF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SWAPONOFF)
		(__VA_ARGS__...) if def(CONFIG_SWAPONOFF)


#define envuidgid_full_usage if True 
	expansions 
		 => "\n\n" "Set $UID to USER's uid and $GID to USER's gid, run PROG" if True


#define IF_WC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WC)


#define iprule_trivial_usage if True 
	expansions 
		 => "{[list | add | del] RULE}" if True


#define __FD_ZERO if True 
	expansions 
		(fdsp) => do { int __d0, __d1; __asm__ __volatile__ ("cld; rep; " __FD_ZERO_STOS : "=c" (__d0), "=D" (__d1) : "a" (0), "0" (sizeof (fd_set) / sizeof (__fd_mask)), "1" (&__FDS_BITS (fdsp)[0]) : "memory"); } while (0) if True


#define ENABLE_FEATURE_DMESG_PRETTY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DMESG_PRETTY)
		 => 1 if def(CONFIG_FEATURE_DMESG_PRETTY)


#define IF_FEATURE_MTAB_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MTAB_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MTAB_SUPPORT)


#define _IO_size_t if True 
	expansions 
		 => _G_size_t if True


#define fsck_trivial_usage if True 
	expansions 
		 => "[-ANPRTV] [-C FD] [-t FSTYPE] [FS_OPTS] [BLOCKDEV]..." if True


#define IF_FEATURE_FAST_TOP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FAST_TOP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FAST_TOP)


#define _SIZET_ if True 
	expansions 
		 if True


#define IF_FEATURE_INITRD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INITRD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INITRD)


#define __ELF__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_MD5_SIZE_VS_SPEED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MD5_SIZE_VS_SPEED)
		(__VA_ARGS__...) if def(CONFIG_MD5_SIZE_VS_SPEED)


#define IF_FEATURE_VOLUMEID_JFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_JFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_JFS)


#define IF_NOT_FEATURE_FBSET_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FBSET_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FBSET_FANCY)


#define IF_NOT_FEATURE_HWCLOCK_ADJTIME_FHS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)


#define ENABLE_DC if True 
	expansions 
		 => 0 if !def(CONFIG_DC)
		 => 1 if def(CONFIG_DC)


#define fdformat_full_usage if True 
	expansions 
		 => "\n\n" "Format floppy disk\n" "\nOptions:" "\n	-n	Don't verify after format" if True


#define ENABLE_FEATURE_FIND_REGEX if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_REGEX)
		 => 1 if def(CONFIG_FEATURE_FIND_REGEX)


#define ENABLE_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
		 => 1 if def(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)


#define date_full_usage if True 
	expansions 
		 => "\n\n" "Display time (using +FMT), or set time\n" "\nOptions:" IF_NOT_LONG_OPTS( "\n	[-s] TIME	Set time to TIME" "\n	-u		Work in UTC (don't convert to local time)" "\n	-R		Output RFC-2822 compliant date string" ) IF_LONG_OPTS( "\n	[-s,--set] TIME	Set time to TIME" "\n	-u,--utc	Work in UTC (don't convert to local time)" "\n	-R,--rfc-2822	Output RFC-2822 compliant date string" ) IF_FEATURE_DATE_ISOFMT( "\n	-I[SPEC]	Output ISO-8601 compliant date string" "\n			SPEC='date' (default) for date only," "\n			'hours', 'minutes', or 'seconds' for date and" "\n			time to the indicated precision" ) IF_NOT_LONG_OPTS( "\n	-r FILE		Display last modification time of FILE" "\n	-d TIME		Display TIME, not 'now'" ) IF_LONG_OPTS( "\n	-r,--reference FILE	Display last modification time of FILE" "\n	-d,--date TIME	Display TIME, not 'now'" ) IF_FEATURE_DATE_ISOFMT( "\n	-D FMT		Use FMT for -d TIME conversion" ) "\n" "\nRecognized TIME formats:" "\n	hh:mm[:ss]" "\n	[YYYY.]MM.DD-hh:mm[:ss]" "\n	YYYY-MM-DD hh:mm[:ss]" "\n	[[[[[YY]YY]MM]DD]hh]mm[.ss]" if True


#define IF_FEATURE_LS_RECURSIVE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LS_RECURSIVE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LS_RECURSIVE)


#define ENABLE_FEATURE_FIND_EXEC if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_EXEC)
		 => 1 if def(CONFIG_FEATURE_FIND_EXEC)


#define IF_FEATURE_FANCY_SLEEP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FANCY_SLEEP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FANCY_SLEEP)


#define _IO_USER_LOCK if True 
	expansions 
		 => 0x8000 if True


#define ENABLE_MOUNTPOINT if True 
	expansions 
		 => 0 if !def(CONFIG_MOUNTPOINT)
		 => 1 if def(CONFIG_MOUNTPOINT)


#define IF_NC_110_COMPAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NC_110_COMPAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NC_110_COMPAT)


#define IF_NOT_FEATURE_DATE_ISOFMT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DATE_ISOFMT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DATE_ISOFMT)


#define gzip_full_usage if True 
	expansions 
		 => "\n\n" "Compress FILEs (or stdin)\n" "\nOptions:" "\n	-d	Decompress" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define fsck_full_usage if True 
	expansions 
		 => "\n\n" "Check and repair filesystems\n" "\nOptions:" "\n	-A	Walk /etc/fstab and check all filesystems" "\n	-N	Don't execute, just show what would be done" "\n	-P	With -A, check filesystems in parallel" "\n	-R	With -A, skip the root filesystem" "\n	-T	Don't show title on startup" "\n	-V	Verbose" "\n	-C n	Write status information to specified filedescriptor" "\n	-t TYPE	List of filesystem types to check" if True


#define sleep_example_usage if True 
	expansions 
		 => "$ sleep 2\n" "[2 second delay results]\n" IF_FEATURE_FANCY_SLEEP( "$ sleep 1d 3h 22m 8s\n" "[98528 second delay results]\n") if True


#define ENABLE_FEATURE_SU_CHECKS_SHELLS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SU_CHECKS_SHELLS)
		 => 1 if def(CONFIG_FEATURE_SU_CHECKS_SHELLS)


#define IF_NOT_FEATURE_COMPRESS_BBCONFIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_COMPRESS_BBCONFIG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_COMPRESS_BBCONFIG)


#define hush_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FEATURE_HTTPD_ERROR_PAGES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_ERROR_PAGES)


#define IF_FEATURE_UDHCPD_WRITE_LEASES_EARLY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)


#define IF_NOT_FEATURE_VOLUMEID_REISERFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_REISERFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_REISERFS)


#define IF_FEATURE_TOP_CPU_USAGE_PERCENTAGE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)


#define ENABLE_FEATURE_UNEXPAND_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)


#define IF_FEATURE_SETCONSOLE_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)


#define uname_example_usage if True 
	expansions 
		 => "$ uname -a\n" "Linux debian 2.4.23 #2 Tue Dec 23 17:09:10 MST 2003 i686 GNU/Linux\n" if True


#define ENABLE_FGCONSOLE if True 
	expansions 
		 => 0 if !def(CONFIG_FGCONSOLE)
		 => 1 if def(CONFIG_FGCONSOLE)


#define ENABLE_FEATURE_SH_EXTRA_QUIET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SH_EXTRA_QUIET)
		 => 1 if def(CONFIG_FEATURE_SH_EXTRA_QUIET)


#define ENABLE_BLOCKDEV if True 
	expansions 
		 => 0 if !def(CONFIG_BLOCKDEV)
		 => 1 if def(CONFIG_BLOCKDEV)


#define ENABLE_UNZIP if True 
	expansions 
		 => 0 if !def(CONFIG_UNZIP)
		 => 1 if def(CONFIG_UNZIP)


#define IF_FEATURE_COMPRESS_BBCONFIG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_COMPRESS_BBCONFIG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_COMPRESS_BBCONFIG)


#define IF_EXPAND if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EXPAND)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EXPAND)


#define IF_MKFS_MINIX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKFS_MINIX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKFS_MINIX)


#define ENABLE_FEATURE_INDIVIDUAL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INDIVIDUAL)
		 => 1 if def(CONFIG_FEATURE_INDIVIDUAL)


#define FD_ZERO if True 
	expansions 
		(fdsetp) => __FD_ZERO (fdsetp) if True


#define volname_full_usage if True 
	expansions 
		 => "\n\n" "Show CD volume name of the DEVICE (default /dev/cdrom)" if True


#define __attribute_pure__ if True 
	expansions 
		 => __attribute__ ((__pure__)) if True


#define ENABLE_FEATURE_BEEP_LENGTH_MS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BEEP_LENGTH_MS)
		 => 1 if def(CONFIG_FEATURE_BEEP_LENGTH_MS)


#define _IO_getc_unlocked if True 
	expansions 
		(_fp) => (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++) if True


#define __WCLONE if True 
	expansions 
		 => 0x80000000 if True


#define setkeycodes_trivial_usage if True 
	expansions 
		 => "SCANCODE KEYCODE..." if True


#define _G_MMAP64 if True 
	expansions 
		 => __mmap64 if True


#define ENABLE_FEATURE_SPLIT_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SPLIT_FANCY)
		 => 1 if def(CONFIG_FEATURE_SPLIT_FANCY)


#define IF_NOT_FEATURE_MDEV_RENAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MDEV_RENAME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MDEV_RENAME)


#define ENABLE_DELGROUP if True 
	expansions 
		 => 0 if !def(CONFIG_DELGROUP)
		 => 1 if def(CONFIG_DELGROUP)


#define top_full_usage if True 
	expansions 
		 => "\n\n" "Provide a view of process activity in real time.\n" "Read the status of all processes from /proc each SECONDS\n" "and display a screenful of them." if True


#define IF_NOT_FEATURE_CPIO_P if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CPIO_P)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CPIO_P)


#define ENABLE_EXPR if True 
	expansions 
		 => 0 if !def(CONFIG_EXPR)
		 => 1 if def(CONFIG_EXPR)


#define __FSFILCNT64_T_TYPE if True 
	expansions 
		 => __UQUAD_TYPE if True


#define ENABLE_DPKG if True 
	expansions 
		 => 0 if !def(CONFIG_DPKG)
		 => 1 if def(CONFIG_DPKG)


#define ENABLE_FEATURE_TAR_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_TAR_LONG_OPTIONS)


#define IF_SULOGIN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SULOGIN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SULOGIN)


#define _IO_ssize_t if True 
	expansions 
		 => _G_ssize_t if True


#define telnet_full_usage if True 
	expansions 
		 => "\n\n" "Connect to telnet server" if !def(CONFIG_FEATURE_TELNET_AUTOLOGIN)
		 => "\n\n" "Connect to telnet server\n" "\nOptions:" "\n	-a	Automatic login with $USER variable" "\n	-l USER	Automatic login as USER" if def(CONFIG_FEATURE_TELNET_AUTOLOGIN)


#define IF_XZ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_XZ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_XZ)


#define __WAIT_INT if True 
	expansions 
		(status) => (__extension__ (((union { __typeof(status) __in; int __i; }) { .__in = (status) }).__i)) if True


#define ENABLE_CPIO if True 
	expansions 
		 => 0 if !def(CONFIG_CPIO)
		 => 1 if def(CONFIG_CPIO)


#define __WIFEXITED if True 
	expansions 
		(status) => (__WTERMSIG(status) == 0) if True


#define _IOS_NOCREATE if True 
	expansions 
		 => 32 if True


#define setfont_example_usage if True 
	expansions 
		 => "$ setfont -m koi8-r /etc/i18n/fontname\n" if True


#define SEEK_END if True 
	expansions 
		 => 2 if True


#define _IO_SHOWPOINT if True 
	expansions 
		 => 0400 if True


#define IF_LOGNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOGNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOGNAME)


#define sv_trivial_usage if True 
	expansions 
		 => "[-v] [-w SEC] CMD SERVICE_DIR..." if True


#define cp_full_usage if True 
	expansions 
		 => "\n\n" "Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY\n" "\nOptions:" "\n	-a	Same as -dpR" IF_SELINUX( "\n	-c	Preserve security context" ) "\n	-R,-r	Recurse" "\n	-d,-P	Preserve symlinks (default if -R)" "\n	-L	Follow all symlinks" "\n	-H	Follow symlinks on command line" "\n	-p	Preserve file attributes if possible" "\n	-f	Overwrite" "\n	-i	Prompt before overwrite" "\n	-l,-s	Create (sym)links" if True


#define IF_LSATTR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LSATTR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LSATTR)


#define IF_NOT_FEATURE_SU_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SU_SYSLOG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SU_SYSLOG)


#define mkpasswd_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [PASSWORD] [SALT]" if True


#define w_coredump if True 
	expansions 
		 => __wait_terminated.__w_coredump if True


#define IF_NOT_FEATURE_MOUNT_LOOP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_LOOP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_LOOP)


#define IF_SLATTACH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SLATTACH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SLATTACH)


#define IF_NOT_VI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_VI)
		(__VA_ARGS__...) if def(CONFIG_VI)


#define script_trivial_usage if True 
	expansions 
		 => "[-afq" IF_SCRIPTREPLAY("t") "] [-c PROG] [OUTFILE]" if True


#define ENABLE_SWAPONOFF if True 
	expansions 
		 => 0 if !def(CONFIG_SWAPONOFF)
		 => 1 if def(CONFIG_SWAPONOFF)


#define env_trivial_usage if True 
	expansions 
		 => "[-iu] [-] [name=value]... [PROG ARGS]" if True


#define ENABLE_DHCPD_LEASES_FILE if True 
	expansions 
		 => 0 if !def(CONFIG_DHCPD_LEASES_FILE)
		 => 1 if def(CONFIG_DHCPD_LEASES_FILE)


#define ENABLE_ASH_OPTIMIZE_FOR_SIZE if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
		 => 1 if def(CONFIG_ASH_OPTIMIZE_FOR_SIZE)


#define IF_SEQ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SEQ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SEQ)


#define IF_NOT_FEATURE_MV_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MV_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MV_LONG_OPTIONS)


#define ENABLE_LOGREAD if True 
	expansions 
		 => 0 if !def(CONFIG_LOGREAD)
		 => 1 if def(CONFIG_LOGREAD)


#define __clockid_t_defined if True 
	expansions 
		 => 1 if True


#define IF_PREFIX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PREFIX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PREFIX)


#define ENABLE_FEATURE_BRCTL_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BRCTL_FANCY)
		 => 1 if def(CONFIG_FEATURE_BRCTL_FANCY)


#define rmdir_example_usage if True 
	expansions 
		 => "# rmdir /tmp/foo\n" if True


#define test_full_usage if True 
	expansions 
		 => "\n\n" "Check file types, compare values etc. Return a 0/1 exit code\n" "depending on logical value of EXPRESSION" if True


#define IF_NOT_DF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DF)
		(__VA_ARGS__...) if def(CONFIG_DF)


#define IF_FEATURE_INSMOD_VERSION_CHECKING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)


#define IF_INETD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INETD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INETD)


#define ENABLE_FLASH_ERASEALL if True 
	expansions 
		 => 0 if !def(CONFIG_FLASH_ERASEALL)
		 => 1 if def(CONFIG_FLASH_ERASEALL)


#define ENABLE_FEATURE_PIDOF_OMIT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PIDOF_OMIT)
		 => 1 if def(CONFIG_FEATURE_PIDOF_OMIT)


#define __USE_BSD if True 
	expansions 
		 => 1 if True


#define httpd_full_usage if True 
	expansions 
		 => "\n\n" "Listen for incoming HTTP requests\n" "\nOptions:" "\n	-i		Inetd mode" "\n	-f		Don't daemonize" "\n	-v[v]		Verbose" "\n	-p [IP:]PORT	Bind to IP:PORT (default *:80)" IF_FEATURE_HTTPD_SETUID( "\n	-u USER[:GRP]	Set uid/gid after binding to port") IF_FEATURE_HTTPD_BASIC_AUTH( "\n	-r REALM	Authentication Realm for Basic Authentication") "\n	-h HOME		Home directory (default .)" "\n	-c FILE		Configuration file (default {/etc,HOME}/httpd.conf)" IF_FEATURE_HTTPD_AUTH_MD5( "\n	-m STRING	MD5 crypt STRING") "\n	-e STRING	HTML encode STRING" "\n	-d STRING	URL decode STRING" if True


#define __TIME__ if True 
	expansions 
		 if True


#define gzip_example_usage if True 
	expansions 
		 => "$ ls -la /tmp/busybox*\n" "-rw-rw-r--    1 andersen andersen  1761280 Apr 14 17:47 /tmp/busybox.tar\n" "$ gzip /tmp/busybox.tar\n" "$ ls -la /tmp/busybox*\n" "-rw-rw-r--    1 andersen andersen   554058 Apr 14 17:49 /tmp/busybox.tar.gz\n" if True


#define more_example_usage if True 
	expansions 
		 => "$ dmesg | more\n" if True


#define IF_UDHCPC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UDHCPC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UDHCPC)


#define __GLIBC__ if True 
	expansions 
		 => 2 if True


#define __WEXITSTATUS if True 
	expansions 
		(status) => (((status) & 0xff00) >> 8) if True


#define linux if True 
	expansions 
		 => 1 if True


#define IF_NOT_GETOPT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GETOPT)
		(__VA_ARGS__...) if def(CONFIG_GETOPT)


#define IF_UBIATTACH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UBIATTACH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UBIATTACH)


#define IF_NOT_FEATURE_DEL_USER_FROM_GROUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DEL_USER_FROM_GROUP)


#define ENABLE_IP if True 
	expansions 
		 => 0 if !def(CONFIG_IP)
		 => 1 if def(CONFIG_IP)


#define ENABLE_DMALLOC if True 
	expansions 
		 => 0 if !def(CONFIG_DMALLOC)
		 => 1 if def(CONFIG_DMALLOC)


#define __VERSION__ if True 
	expansions 
		 => "4.4.4 20100630 (Red Hat 4.4.4-10)" if True


#define ENABLE_TFTP if True 
	expansions 
		 => 0 if !def(CONFIG_TFTP)
		 => 1 if def(CONFIG_TFTP)


#define IF_CRONTAB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CRONTAB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CRONTAB)


#define ENABLE_IPLINK if True 
	expansions 
		 => 0 if !def(CONFIG_IPLINK)
		 => 1 if def(CONFIG_IPLINK)


#define IF_ADJTIMEX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ADJTIMEX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ADJTIMEX)


#define IF_NOT_UNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNAME)
		(__VA_ARGS__...) if def(CONFIG_UNAME)


#define uniq_full_usage if True 
	expansions 
		 => "\n\n" "Discard duplicate lines\n" "\nOptions:" "\n	-c	Prefix lines by the number of occurrences" "\n	-d	Only print duplicate lines" "\n	-u	Only print unique lines" "\n	-f N	Skip first N fields" "\n	-s N	Skip first N chars (after any skipped fields)" "\n	-w N	Compare N characters in line" if True


#define ENABLE_FDFLUSH if True 
	expansions 
		 => 0 if !def(CONFIG_FDFLUSH)
		 => 1 if def(CONFIG_FDFLUSH)


#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 if True 
	expansions 
		 => 1 if True


#define _IO_FLAGS2_MMAP if True 
	expansions 
		 => 1 if True


#define linux32_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define blockdev_trivial_usage if True 
	expansions 
		 => "OPTION BLOCKDEV" if True


#define IF_NOT_FEATURE_VOLUMEID_XFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_XFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_XFS)


#define IF_NOT_CATV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CATV)
		(__VA_ARGS__...) if def(CONFIG_CATV)


#define ENABLE_FEATURE_DC_LIBM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DC_LIBM)
		 => 1 if def(CONFIG_FEATURE_DC_LIBM)


#define egrep_full_usage if True 
	expansions 
		 => "" if True


#define wc_full_usage if True 
	expansions 
		 => "\n\n" "Count lines, words, and bytes for each FILE (or stdin)\n" "\nOptions:" "\n	-c	Count bytes" IF_UNICODE_SUPPORT( "\n	-m	Count characters" ) "\n	-l	Count newlines" "\n	-w	Count words" "\n	-L	Print longest line length" if True


#define IF_NOT_FEATURE_CHOWN_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)


#define __BIG_ENDIAN if True 
	expansions 
		 => 4321 if True


#define ENABLE_ENVDIR if True 
	expansions 
		 => 0 if !def(CONFIG_ENVDIR)
		 => 1 if def(CONFIG_ENVDIR)


#define dnsdomainname_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FEATURE_BRCTL_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BRCTL_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BRCTL_FANCY)


#define IF_NOT_REALPATH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_REALPATH)
		(__VA_ARGS__...) if def(CONFIG_REALPATH)


#define IF_NOT_SETSID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETSID)
		(__VA_ARGS__...) if def(CONFIG_SETSID)


#define __W_STOPCODE if True 
	expansions 
		(sig) => ((sig) << 8 | 0x7f) if True


#define ENABLE_UNICODE_COMBINING_WCHARS if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_COMBINING_WCHARS)
		 => 1 if def(CONFIG_UNICODE_COMBINING_WCHARS)


#define udhcpd_full_usage if True 
	expansions 
		 => "\n\n" "DHCP server\n" "\n	-f	Run in foreground" "\n	-S	Log to syslog too" IF_FEATURE_UDHCP_PORT( "\n	-P N	Use port N (default 67)" ) if True


#define IF_NOT_FEATURE_HDPARM_HDIO_TRISTATE_HWIF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)


#define IF_FEATURE_TOPMEM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TOPMEM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TOPMEM)


#define ENABLE_FEATURE_CROND_CALL_SENDMAIL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
		 => 1 if def(CONFIG_FEATURE_CROND_CALL_SENDMAIL)


#define IF_FEATURE_VI_ASK_TERMINAL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_ASK_TERMINAL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_ASK_TERMINAL)


#define IF_FEATURE_MOUNT_CIFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_CIFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_CIFS)


#define ln_trivial_usage if True 
	expansions 
		 => "[OPTIONS] TARGET... LINK|DIR" if True


#define ENABLE_SV_DEFAULT_SERVICE_DIR if True 
	expansions 
		 => 0 if !def(CONFIG_SV_DEFAULT_SERVICE_DIR)
		 => 1 if def(CONFIG_SV_DEFAULT_SERVICE_DIR)


#define IF_FEATURE_NAMEIF_EXTENDED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_NAMEIF_EXTENDED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_NAMEIF_EXTENDED)


#define IF_MKFIFO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKFIFO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKFIFO)


#define IF_NOT_HALT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HALT)
		(__VA_ARGS__...) if def(CONFIG_HALT)


#define IF_FEATURE_IP_ADDRESS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IP_ADDRESS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IP_ADDRESS)


#define IF_NOT_FEATURE_IFCONFIG_STATUS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFCONFIG_STATUS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFCONFIG_STATUS)


#define sort_trivial_usage if True 
	expansions 
		 => "[-nru" IF_FEATURE_SORT_BIG("gMcszbdfimSTokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR") "] [FILE]..." if True


#define IF_NOT_PGREP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PGREP)
		(__VA_ARGS__...) if def(CONFIG_PGREP)


#define getenforce_full_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FDISK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FDISK)
		(__VA_ARGS__...) if def(CONFIG_FDISK)


#define ENABLE_HALT if True 
	expansions 
		 => 0 if !def(CONFIG_HALT)
		 => 1 if def(CONFIG_HALT)


#define IF_NOT_SYSLOGD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SYSLOGD)
		(__VA_ARGS__...) if def(CONFIG_SYSLOGD)


#define _G_IO_IO_FILE_VERSION if True 
	expansions 
		 => 0x20001 if True


#define __LDBL_DIG__ if True 
	expansions 
		 => 18 if True


#define __BEGIN_NAMESPACE_C99 if True 
	expansions 
		 if True


#define unzip_full_usage if True 
	expansions 
		 => "\n\n" "Extract files from ZIP archives\n" "\nOptions:" "\n	-l	List archive contents (with -q for short form)" "\n	-n	Never overwrite files (default)" "\n	-o	Overwrite" "\n	-p	Send output to stdout" "\n	-q	Quiet" "\n	-x XLST	Exclude these files" "\n	-d DIR	Extract files into DIR" if True


#define __attribute_format_arg__ if True 
	expansions 
		(x) => __attribute__ ((__format_arg__ (x))) if True


#define IF_NOT_FEATURE_LS_COLOR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_COLOR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_COLOR)


#define IF_TEE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TEE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TEE)


#define IF_FEATURE_RMDIR_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)


#define IF_FEATURE_DD_SIGNAL_HANDLING if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DD_SIGNAL_HANDLING)


#define _G_USING_THUNKS if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_EDITING_MAX_LEN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING_MAX_LEN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING_MAX_LEN)


#define ENABLE_POPMAILDIR if True 
	expansions 
		 => 0 if !def(CONFIG_POPMAILDIR)
		 => 1 if def(CONFIG_POPMAILDIR)


#define IF_NOT_TCPSVD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TCPSVD)
		(__VA_ARGS__...) if def(CONFIG_TCPSVD)


#define ENABLE_FEATURE_FIND_DEPTH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_DEPTH)
		 => 1 if def(CONFIG_FEATURE_FIND_DEPTH)


#define IF_NOT_DNSD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DNSD)
		(__VA_ARGS__...) if def(CONFIG_DNSD)


#define hdparm_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [DEVICE]" if True


#define CONFIG_FIND if True 
	expansions 
		 => 1 if True


#define IF_NOT_DESKTOP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DESKTOP)
		(__VA_ARGS__...) if def(CONFIG_DESKTOP)


#define __COUNTER__ if True 
	expansions 
		 if True


#define _IO_EOF_SEEN if True 
	expansions 
		 => 0x10 if True


#define IF_TELNETD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TELNETD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TELNETD)


#define IF_FEATURE_HTTPD_ENCODE_URL_STR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)


#define _G_VTABLE_LABEL_HAS_LENGTH if True 
	expansions 
		 => 1 if True


#define mount_notes_usage if True 
	expansions 
		 => "Returns 0 for success, number of failed mounts for -a, or errno for one mount." if True


#define IF_NOT_FSCK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FSCK)
		(__VA_ARGS__...) if def(CONFIG_FSCK)


#define IF_FEATURE_LESS_MARKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_MARKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_MARKS)


#define ENABLE_SLATTACH if True 
	expansions 
		 => 0 if !def(CONFIG_SLATTACH)
		 => 1 if def(CONFIG_SLATTACH)


#define IF_FEATURE_VOLUMEID_LINUXSWAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)


#define ENABLE_NETSTAT if True 
	expansions 
		 => 0 if !def(CONFIG_NETSTAT)
		 => 1 if def(CONFIG_NETSTAT)


#define IF_NOT_FEATURE_VI_YANKMARK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_YANKMARK)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_YANKMARK)


#define touch_example_usage if True 
	expansions 
		 => "$ ls -l /tmp/foo\n" "/bin/ls: /tmp/foo: No such file or directory\n" "$ touch /tmp/foo\n" "$ ls -l /tmp/foo\n" "-rw-rw-r--    1 andersen andersen        0 Apr 15 01:11 /tmp/foo\n" if True


#define IF_FEATURE_FDISK_ADVANCED if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FDISK_ADVANCED)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FDISK_ADVANCED)


#define IF_NOT_SWITCH_ROOT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SWITCH_ROOT)
		(__VA_ARGS__...) if def(CONFIG_SWITCH_ROOT)


#define IF_NOT_FEATURE_PS_ADDITIONAL_COLUMNS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)


#define __GNUC_PREREQ if True 
	expansions 
		(maj, min) => ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min)) if True


#define __k8__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_DEBUG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEBUG)
		(__VA_ARGS__...) if def(CONFIG_DEBUG)


#define IF_ASH_JOB_CONTROL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_JOB_CONTROL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_JOB_CONTROL)


#define IF_SHA256SUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SHA256SUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SHA256SUM)


#define IF_FEATURE_DD_THIRD_STATUS_LINE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)


#define IF_NOT_FDFORMAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FDFORMAT)
		(__VA_ARGS__...) if def(CONFIG_FDFORMAT)


#define IF_NOT_FEATURE_INSMOD_LOAD_MAP_FULL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)


#define dmesg_trivial_usage if True 
	expansions 
		 => "[-c] [-n LEVEL] [-s SIZE]" if True


#define IF_NOT_FEATURE_FIND_USER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_USER)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_USER)


#define P_tmpdir if True 
	expansions 
		 => "/tmp" if True


#define IF_NOT_FEATURE_INDIVIDUAL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INDIVIDUAL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INDIVIDUAL)


#define ping6_example_usage if True 
	expansions 
		 => "$ ping6 ip6-localhost\n" "PING ip6-localhost (::1): 56 data bytes\n" "64 bytes from ::1: icmp6_seq=0 ttl=64 time=20.1 ms\n" "\n" "--- ip6-localhost ping statistics ---\n" "1 packets transmitted, 1 packets received, 0% packet loss\n" "round-trip min/avg/max = 20.1/20.1/20.1 ms\n" if True


#define htobe32 if True 
	expansions 
		(x) => __bswap_32 (x) if True


#define IF_NOT_FEATURE_TELNETD_INETD_WAIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TELNETD_INETD_WAIT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TELNETD_INETD_WAIT)


#define ENABLE_LPR if True 
	expansions 
		 => 0 if !def(CONFIG_LPR)
		 => 1 if def(CONFIG_LPR)


#define _G_size_t if True 
	expansions 
		 => size_t if True


#define IF_NOT_CHRT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHRT)
		(__VA_ARGS__...) if def(CONFIG_CHRT)


#define __LINE__ if True 
	expansions 
		 if True


#define IF_FAKEIDENTD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FAKEIDENTD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FAKEIDENTD)


#define ENABLE_FEATURE_VOLUMEID_FAT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_FAT)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_FAT)


#define IF_FEATURE_INIT_COREDUMPS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INIT_COREDUMPS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INIT_COREDUMPS)


#define iptunnel_trivial_usage if True 
	expansions 
		 => "{ add | change | del | show } [NAME]\n" "	[mode { ipip | gre | sit }]\n" "	[remote ADDR] [local ADDR] [ttl TTL]" if True


#define pwd_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_NOT_FEATURE_SORT_BIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SORT_BIG)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SORT_BIG)


#define __size_t if True 
	expansions 
		 if True


#define cksum_full_usage if True 
	expansions 
		 => "\n\n" "Calculate the CRC32 checksums of FILES" if True


#define IF_NOT_BASENAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BASENAME)
		(__VA_ARGS__...) if def(CONFIG_BASENAME)


#define __USE_XOPEN2K if True 
	expansions 
		 => 1 if True


#define _IO_RIGHT if True 
	expansions 
		 => 04 if True


#define IF_NOT_FEATURE_VOLUMEID_ROMFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_ROMFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_ROMFS)


#define fbsplash_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-s	Image" "\n	-c	Hide cursor" "\n	-d	Framebuffer device (default /dev/fb0)" "\n	-i	Config file (var=value):" "\n			BAR_LEFT,BAR_TOP,BAR_WIDTH,BAR_HEIGHT" "\n			BAR_R,BAR_G,BAR_B" "\n	-f	Control pipe (else exit after drawing image)" "\n			commands: 'NN' (% for progress bar) or 'exit'" if True


#define __FD_SET if True 
	expansions 
		(d, set) => (__FDS_BITS (set)[__FDELT (d)] |= __FDMASK (d)) if True


#define IF_NOT_SH_MATH_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SH_MATH_SUPPORT)
		(__VA_ARGS__...) if def(CONFIG_SH_MATH_SUPPORT)


#define IF_NOT_INSTALL_NO_USR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL_NO_USR)
		(__VA_ARGS__...) if def(CONFIG_INSTALL_NO_USR)


#define IF_DESKTOP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DESKTOP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DESKTOP)


#define IF_IPCALC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPCALC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPCALC)


#define IF_NOT_FEATURE_BUFFERS_USE_MALLOC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BUFFERS_USE_MALLOC)


#define __CLOCKID_T_TYPE if True 
	expansions 
		 => __S32_TYPE if True


#define setkeycodes_full_usage if True 
	expansions 
		 => "\n\n" "Set entries into the kernel's scancode-to-keycode map,\n" "allowing unusual keyboards to generate usable keycodes.\n\n" "SCANCODE may be either xx or e0xx (hexadecimal),\n" "and KEYCODE is given in decimal." if True


#define IF_FEATURE_MOUNT_HELPERS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_HELPERS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_HELPERS)


#define IF_RPM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RPM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RPM)


#define ENABLE_FEATURE_FIND_TYPE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_TYPE)
		 => 1 if def(CONFIG_FEATURE_FIND_TYPE)


#define losetup_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-o OFS	Start OFS bytes into FILE" "\n	-f	Show first free loop device" if True


#define IF_FEATURE_MOUNT_VERBOSE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MOUNT_VERBOSE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MOUNT_VERBOSE)


#define chown_trivial_usage if True 
	expansions 
		 => "[-RhLHP"IF_DESKTOP("cvf")"]... OWNER[<.|:>[GROUP]] FILE..." if True


#define __REDIRECT_LDBL if True 
	expansions 
		(name, proto, alias) => __REDIRECT (name, proto, alias) if True


#define IF_FEATURE_IFUPDOWN_IPV4 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFUPDOWN_IPV4)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFUPDOWN_IPV4)


#define readlink_full_usage if True 
	expansions 
		 => "\n\n" "Display the value of a symlink" IF_FEATURE_READLINK_FOLLOW( "\n" "\nOptions:" "\n	-f	Canonicalize by following all symlinks" "\n	-n	Don't add newline" "\n	-v	Verbose" ) if True


#define setsebool_full_usage if True 
	expansions 
		 => "\n\n" "Change boolean setting" if True


#define IF_NOT_MSH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MSH)
		(__VA_ARGS__...) if def(CONFIG_MSH)


#define ENABLE_UBIDETACH if True 
	expansions 
		 => 0 if !def(CONFIG_UBIDETACH)
		 => 1 if def(CONFIG_UBIDETACH)


#define ENABLE_FTPPUT if True 
	expansions 
		 => 0 if !def(CONFIG_FTPPUT)
		 => 1 if def(CONFIG_FTPPUT)


#define IF_HUSH_SAVEHISTORY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_SAVEHISTORY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_SAVEHISTORY)


#define fakeidentd_trivial_usage if True 
	expansions 
		 => "[-fiw] [-b ADDR] [STRING]" if True


#define IF_MSH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MSH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MSH)


#define __LDBL_MIN_10_EXP__ if True 
	expansions 
		 => (-4931) if True


#define IF_CHATTR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHATTR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHATTR)


#define ENABLE_FEATURE_MV_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MV_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_MV_LONG_OPTIONS)


#define IF_NOT_UDHCPC_DEFAULT_SCRIPT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UDHCPC_DEFAULT_SCRIPT)
		(__VA_ARGS__...) if def(CONFIG_UDHCPC_DEFAULT_SCRIPT)


#define IF_NOT_NOHUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NOHUP)
		(__VA_ARGS__...) if def(CONFIG_NOHUP)


#define IF_FDISK_SUPPORT_LARGE_DISKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FDISK_SUPPORT_LARGE_DISKS)


#define IF_NOT_HUSH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH)
		(__VA_ARGS__...) if def(CONFIG_HUSH)


#define ENABLE_FEATURE_LS_USERNAME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_USERNAME)
		 => 1 if def(CONFIG_FEATURE_LS_USERNAME)


#define IF_XARGS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_XARGS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_XARGS)


#define IF_MKSWAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKSWAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKSWAP)


#define ENABLE_DU if True 
	expansions 
		 => 0 if !def(CONFIG_DU)
		 => 1 if def(CONFIG_DU)


#define ENABLE_FEATURE_MOUNT_FLAGS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_FLAGS)
		 => 1 if def(CONFIG_FEATURE_MOUNT_FLAGS)


#define ENABLE_FEATURE_AWK_LIBM if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_AWK_LIBM)
		 => 1 if def(CONFIG_FEATURE_AWK_LIBM)


#define _IO_file_flags if True 
	expansions 
		 => _flags if True


#define IF_UBIDETACH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UBIDETACH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UBIDETACH)


#define IF_NOT_STAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_STAT)
		(__VA_ARGS__...) if def(CONFIG_STAT)


#define dirname_full_usage if True 
	expansions 
		 => "\n\n" "Strip non-directory suffix from FILENAME" if True


#define zcip_trivial_usage if True 
	expansions 
		 => "[OPTIONS] IFACE SCRIPT" if True


#define IF_FEATURE_SH_IS_NONE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SH_IS_NONE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SH_IS_NONE)


#define __blksize_t_defined if True 
	expansions 
		 if True


#define IF_NOT_NOMMU if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NOMMU)
		(__VA_ARGS__...) if def(CONFIG_NOMMU)


#define flash_lock_trivial_usage if True 
	expansions 
		 => "MTD_DEVICE OFFSET SECTORS" if True


#define length_example_usage if True 
	expansions 
		 => "$ length Hello\n" "5\n" if True


#define ENABLE_CHOWN if True 
	expansions 
		 => 0 if !def(CONFIG_CHOWN)
		 => 1 if def(CONFIG_CHOWN)


#define IF_NOT_SHA1SUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SHA1SUM)
		(__VA_ARGS__...) if def(CONFIG_SHA1SUM)


#define _IO_SHOWPOS if True 
	expansions 
		 => 02000 if True


#define readahead_full_usage if True 
	expansions 
		 => "\n\n" "Preload FILEs to RAM" if True


#define IF_NOT_GUNZIP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GUNZIP)
		(__VA_ARGS__...) if def(CONFIG_GUNZIP)


#define setsid_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG in a new session. PROG will have no controlling terminal\n" "and will not be affected by keyboard signals (Ctrl-C etc).\n" "See setsid(2) for details." if True


#define ifdown_trivial_usage if True 
	expansions 
		 => "[-an"IF_FEATURE_IFUPDOWN_MAPPING("m")"vf] [-i FILE] IFACE..." if True


#define logger_full_usage if True 
	expansions 
		 => "\n\n" "Write MESSAGE (or stdin) to syslog\n" "\nOptions:" "\n	-s	Log to stderr as well as the system log" "\n	-t TAG	Log using the specified tag (defaults to user name)" "\n	-p PRIO	Priority (numeric or facility.level pair)" if True


#define which_example_usage if True 
	expansions 
		 => "$ which login\n" "/bin/login\n" if True


#define stat_full_usage if True 
	expansions 
		 => "\n\n" "Display file (default) or filesystem status\n" "\nOptions:" IF_FEATURE_STAT_FORMAT( "\n	-c fmt	Use the specified format" ) "\n	-f	Display filesystem status" "\n	-L	Follow links" "\n	-t	Display info in terse form" IF_SELINUX( "\n	-Z	Print security context" ) IF_FEATURE_STAT_FORMAT( "\n\nValid format sequences for files:\n" " %a	Access rights in octal\n" " %A	Access rights in human readable form\n" " %b	Number of blocks allocated (see %B)\n" " %B	The size in bytes of each block reported by %b\n" " %d	Device number in decimal\n" " %D	Device number in hex\n" " %f	Raw mode in hex\n" " %F	File type\n" " %g	Group ID of owner\n" " %G	Group name of owner\n" " %h	Number of hard links\n" " %i	Inode number\n" " %n	File name\n" " %N	File name, with -> TARGET if symlink\n" " %o	I/O block size\n" " %s	Total size, in bytes\n" " %t	Major device type in hex\n" " %T	Minor device type in hex\n" " %u	User ID of owner\n" " %U	User name of owner\n" " %x	Time of last access\n" " %X	Time of last access as seconds since Epoch\n" " %y	Time of last modification\n" " %Y	Time of last modification as seconds since Epoch\n" " %z	Time of last change\n" " %Z	Time of last change as seconds since Epoch\n" "\nValid format sequences for file systems:\n" " %a	Free blocks available to non-superuser\n" " %b	Total data blocks in file system\n" " %c	Total file nodes in file system\n" " %d	Free file nodes in file system\n" " %f	Free blocks in file system\n" IF_SELINUX( " %C	Security context in selinux\n" ) " %i	File System ID in hex\n" " %l	Maximum length of filenames\n" " %n	File name\n" " %s	Block size (for faster transfer)\n" " %S	Fundamental block size (for block counts)\n" " %t	Type in hex\n" " %T	Type in human readable form" ) if True


#define IF_NOT_FEATURE_IPV6 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IPV6)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IPV6)


#define __FILE__ if True 
	expansions 
		 if True


#define nice_trivial_usage if True 
	expansions 
		 => "[-n ADJUST] [PROG ARGS]" if True


#define __BYTE_ORDER if True 
	expansions 
		 => __LITTLE_ENDIAN if True


#define IF_FEATURE_TAR_UNAME_GNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_UNAME_GNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_UNAME_GNAME)


#define ENABLE_PRINTF if True 
	expansions 
		 => 0 if !def(CONFIG_PRINTF)
		 => 1 if def(CONFIG_PRINTF)


#define pipe_progress_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define __FDMASK if True 
	expansions 
		(d) => ((__fd_mask) 1 << ((d) % __NFDBITS)) if True


#define ENABLE_SETFONT if True 
	expansions 
		 => 0 if !def(CONFIG_SETFONT)
		 => 1 if def(CONFIG_SETFONT)


#define IF_FEATURE_PS_WIDE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_PS_WIDE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_PS_WIDE)


#define IF_FEATURE_WGET_AUTHENTICATION if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_WGET_AUTHENTICATION)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_WGET_AUTHENTICATION)


#define IF_NOT_NMETER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NMETER)
		(__VA_ARGS__...) if def(CONFIG_NMETER)


#define L_tmpnam if True 
	expansions 
		 => 20 if True


#define tac_trivial_usage if True 
	expansions 
		 => "[FILE]..." if True


#define IF_NOT_FLASH_LOCK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FLASH_LOCK)
		(__VA_ARGS__...) if def(CONFIG_FLASH_LOCK)


#define setsebool_trivial_usage if True 
	expansions 
		 => "boolean value" if True


#define ENABLE_CHRT if True 
	expansions 
		 => 0 if !def(CONFIG_CHRT)
		 => 1 if def(CONFIG_CHRT)


#define IF_FEATURE_HTTPD_RANGES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_RANGES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_RANGES)


#define basename_example_usage if True 
	expansions 
		 => "$ basename /usr/local/bin/foo\n" "foo\n" "$ basename /usr/local/bin/\n" "bin\n" "$ basename /foo/bar.txt .txt\n" "bar" if True


#define ENABLE_TUNCTL if True 
	expansions 
		 => 0 if !def(CONFIG_TUNCTL)
		 => 1 if def(CONFIG_TUNCTL)


#define IF_NOT_BUNZIP2 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BUNZIP2)
		(__VA_ARGS__...) if def(CONFIG_BUNZIP2)


#define cat_example_usage if True 
	expansions 
		 => "$ cat /proc/uptime\n" "110716.72 17.67" if True


#define rfkill_full_usage if True 
	expansions 
		 => "\n\n" "Enable/disable wireless devices\n" "\nCommands:" "\n	list [INDEX|TYPE]	List current state" "\n	block INDEX|TYPE	Disable device" "\n	unblock INDEX|TYPE	Enable device" "\n" "\n	TYPE: all, wlan(wifi), bluetooth, uwb(ultrawideband)," "\n		wimax, wwan, gps, fm" if True


#define IF_FEATURE_TAR_NOPRESERVE_TIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)


#define uncompress_trivial_usage if True 
	expansions 
		 => "[-cf] [FILE]..." if True


#define ENABLE_FEATURE_VI_YANKMARK if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_YANKMARK)
		 => 1 if def(CONFIG_FEATURE_VI_YANKMARK)


#define ENABLE_FEATURE_TRACEROUTE_USE_ICMP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
		 => 1 if def(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)


#define ENABLE_FEATURE_LOADFONT_RAW if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LOADFONT_RAW)
		 => 1 if def(CONFIG_FEATURE_LOADFONT_RAW)


#define IF_NOT_FBSET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FBSET)
		(__VA_ARGS__...) if def(CONFIG_FBSET)


#define __WTERMSIG if True 
	expansions 
		(status) => ((status) & 0x7f) if True


#define stderr if True 
	expansions 
		 => stderr if True


#define IF_NOT_FEATURE_USE_TERMIOS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_USE_TERMIOS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_USE_TERMIOS)


#define IF_NOT_FEATURE_AUTOWIDTH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_AUTOWIDTH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_AUTOWIDTH)


#define IF_NOT_FEATURE_LESS_FLAGS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_FLAGS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_FLAGS)


#define IF_RDEV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RDEV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RDEV)


#define bzcat_full_usage if True 
	expansions 
		 => "\n\n" "Decompress to stdout" if True


#define _IO_DEC if True 
	expansions 
		 => 020 if True


#define deallocvt_full_usage if True 
	expansions 
		 => "\n\n" "Deallocate unused virtual terminal /dev/ttyN" if True


#define __WNOTHREAD if True 
	expansions 
		 => 0x20000000 if True


#define ntpd_full_usage if True 
	expansions 
		 => "\n\n" "NTP client/server\n" "\nOptions:" "\n	-d	Verbose" "\n	-n	Do not daemonize" "\n	-q	Quit after clock is set" "\n	-N	Run at high priority" "\n	-w	Do not set time (only query peers), implies -n" IF_FEATURE_NTPD_SERVER( "\n	-l	Run as server on port 123" ) "\n	-S PROG	Run PROG after stepping time, stratum change, and every 11 mins" "\n	-p PEER	Obtain time from PEER (may be repeated)" if True


#define traceroute6_full_usage if True 
	expansions 
		 => "\n\n" "Trace the route to HOST\n" "\nOptions:" "\n	-d	Set SO_DEBUG options to socket" "\n	-n	Print numeric addresses" "\n	-r	Bypass routing tables, send directly to HOST" "\n	-v	Verbose" "\n	-m	Max time-to-live (max number of hops)" "\n	-p	Base UDP port number used in probes" "\n		(default is 33434)" "\n	-q	Number of probes per TTL (default 3)" "\n	-s	IP address to use as the source address" "\n	-t	Type-of-service in probe packets (default 0)" "\n	-w	Time in seconds to wait for a response (default 3)" if True


#define ENABLE_FEATURE_DATE_COMPAT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_DATE_COMPAT)
		 => 1 if def(CONFIG_FEATURE_DATE_COMPAT)


#define IF_FEATURE_TAR_TO_COMMAND if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_TO_COMMAND)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_TO_COMMAND)


#define watch_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG periodically\n" "\nOptions:" "\n	-n	Loop period in seconds (default 2)" "\n	-t	Don't print header" if True


#define id_example_usage if True 
	expansions 
		 => "$ id\n" "uid=1000(andersen) gid=1000(andersen)\n" if True


#define __UWORD_TYPE if True 
	expansions 
		 => unsigned long int if True


#define ENABLE_FEATURE_MOUNT_CIFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_CIFS)
		 => 1 if def(CONFIG_FEATURE_MOUNT_CIFS)


#define IF_NOT_FEATURE_VOLUMEID_ISO9660 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_ISO9660)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_ISO9660)


#define IF_BUILD_LIBBUSYBOX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BUILD_LIBBUSYBOX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BUILD_LIBBUSYBOX)


#define IF_FEATURE_AR_LONG_FILENAMES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_AR_LONG_FILENAMES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_AR_LONG_FILENAMES)


#define load_policy_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define IF_NOT_FEATURE_START_STOP_DAEMON_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)


#define who_trivial_usage if True 
	expansions 
		 => "[-a]" if True


#define IF_NOT_FEATURE_POPMAILDIR_DELIVERY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_POPMAILDIR_DELIVERY)


#define le64toh if True 
	expansions 
		(x) => (x) if True


#define IF_NOT_SUBST_WCHAR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SUBST_WCHAR)
		(__VA_ARGS__...) if def(CONFIG_SUBST_WCHAR)


#define IF_NOT_PIE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PIE)
		(__VA_ARGS__...) if def(CONFIG_PIE)


#define diff_trivial_usage if True 
	expansions 
		 => "[-abBdiNqrTstw] [-L LABEL] [-S FILE] [-U LINES] FILE1 FILE2" if True


#define ENABLE_HUSH_RANDOM_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_RANDOM_SUPPORT)
		 => 1 if def(CONFIG_HUSH_RANDOM_SUPPORT)


#define raidautorun_full_usage if True 
	expansions 
		 => "\n\n" "Tell the kernel to automatically search and start RAID arrays" if True


#define IF_NOT_UDHCPC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UDHCPC)
		(__VA_ARGS__...) if def(CONFIG_UDHCPC)


#define flash_unlock_full_usage if True 
	expansions 
		 => "\n\n" "Unlock an MTD device" if True


#define ENABLE_TFTPD if True 
	expansions 
		 => 0 if !def(CONFIG_TFTPD)
		 => 1 if def(CONFIG_TFTPD)


#define IF_NOT_LOGREAD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LOGREAD)
		(__VA_ARGS__...) if def(CONFIG_LOGREAD)


#define IF_NOT_ADJTIMEX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ADJTIMEX)
		(__VA_ARGS__...) if def(CONFIG_ADJTIMEX)


#define _IO_FLAGS2_NOTCANCEL if True 
	expansions 
		 => 2 if True


#define ENABLE_LOAD_POLICY if True 
	expansions 
		 => 0 if !def(CONFIG_LOAD_POLICY)
		 => 1 if def(CONFIG_LOAD_POLICY)


#define depmod_full_usage if True 
	expansions 
		 => "" if True


#define IF_MKFS_REISER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKFS_REISER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKFS_REISER)


#define IF_FEATURE_BUFFERS_GO_IN_BSS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)


#define setuidgid_full_usage if True 
	expansions 
		 => "\n\n" "Set uid and gid to USER's uid and gid, drop supplementary group ids,\n" "run PROG" if True


#define IF_NOT_FEATURE_AWK_LIBM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_AWK_LIBM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_AWK_LIBM)


#define __dev_t_defined if True 
	expansions 
		 if True


#define IF_NOT_FEATURE_WGET_AUTHENTICATION if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_WGET_AUTHENTICATION)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_WGET_AUTHENTICATION)


#define ENABLE_FEATURE_VI_USE_SIGNALS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_USE_SIGNALS)
		 => 1 if def(CONFIG_FEATURE_VI_USE_SIGNALS)


#define _IO_PENDING_OUTPUT_COUNT if True 
	expansions 
		(_fp) => ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base) if True


#define less_trivial_usage if True 
	expansions 
		 => "[-EMNmh~I?] [FILE]..." if True


#define beep_trivial_usage if True 
	expansions 
		 => "-f FREQ -l LEN -d DELAY -r COUNT -n" if True


#define IF_EXPR_MATH_SUPPORT_64 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EXPR_MATH_SUPPORT_64)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EXPR_MATH_SUPPORT_64)


#define ENABLE_FEATURE_GREP_CONTEXT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_GREP_CONTEXT)
		 => 1 if def(CONFIG_FEATURE_GREP_CONTEXT)


#define __FINITE_MATH_ONLY__ if True 
	expansions 
		 => 0 if True


#define IF_NOT_FEATURE_BASH_IS_HUSH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BASH_IS_HUSH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BASH_IS_HUSH)


#define popmaildir_full_usage if True 
	expansions 
		 => "\n\n" "Fetch content of remote mailbox to local maildir\n" "\nOptions:" "\n	-s		Skip authorization" "\n	-T		Get messages with TOP instead of RETR" "\n	-k		Keep retrieved messages on the server" "\n	-t SEC		Network timeout" IF_FEATURE_POPMAILDIR_DELIVERY( "\n	-F \"PROG ARGS\"	Filter program (may be repeated)" "\n	-M \"PROG ARGS\"	Delivery program" ) "\n" "\nFetch from plain POP3 server:" "\npopmaildir -k DIR nc pop3.server.com 110 <user_and_pass.txt" "\nFetch from SSLed POP3 server and delete fetched emails:" "\npopmaildir DIR -- openssl s_client -quiet -connect pop3.server.com:995 <user_and_pass.txt" if True


#define IF_NOT_FEATURE_LS_RECURSIVE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_RECURSIVE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_RECURSIVE)


#define IF_FEATURE_FBSET_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FBSET_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FBSET_FANCY)


#define IF_TRUE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TRUE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TRUE)


#define ENABLE_DEVMEM if True 
	expansions 
		 => 0 if !def(CONFIG_DEVMEM)
		 => 1 if def(CONFIG_DEVMEM)


#define umount_full_usage if True 
	expansions 
		 => "\n\n" "Unmount file systems\n" "\nOptions:" IF_FEATURE_UMOUNT_ALL( "\n	-a	Unmount all file systems" IF_FEATURE_MTAB_SUPPORT(" in /etc/mtab") ) IF_FEATURE_MTAB_SUPPORT( "\n	-n	Don't erase /etc/mtab entries" ) "\n	-r	Try to remount devices as read-only if mount is busy" "\n	-l	Lazy umount (detach filesystem)" "\n	-f	Force umount (i.e., unreachable NFS server)" IF_FEATURE_MOUNT_LOOP( "\n	-d	Free loop device if it has been used" ) if True


#define IF_NOT_VOLNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_VOLNAME)
		(__VA_ARGS__...) if def(CONFIG_VOLNAME)


#define ENABLE_FEATURE_INIT_COREDUMPS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INIT_COREDUMPS)
		 => 1 if def(CONFIG_FEATURE_INIT_COREDUMPS)


#define timeout_trivial_usage if True 
	expansions 
		 => "[-t SECS] [-s SIG] PROG ARGS" if True


#define IF_NOT_FEATURE_SUN_LABEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SUN_LABEL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SUN_LABEL)


#define IF_FEATURE_NON_POSIX_CP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_NON_POSIX_CP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_NON_POSIX_CP)


#define wall_trivial_usage if True 
	expansions 
		 => "[FILE]" if True


#define IF_FEATURE_CHAT_SWALLOW_OPTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)


#define getty_full_usage if True 
	expansions 
		 => "\n\n" "Open a tty, prompt for a login name, then invoke /bin/login\n" "\nOptions:" "\n	-h		Enable hardware (RTS/CTS) flow control" "\n	-i		Don't display /etc/issue before running login" "\n	-L		Local line, don't do carrier detect" "\n	-m		Get baud rate from modem's CONNECT status message" "\n	-w		Wait for a CR or LF before sending /etc/issue" "\n	-n		Don't prompt the user for a login name" "\n	-f ISSUE_FILE	Display ISSUE_FILE instead of /etc/issue" "\n	-l LOGIN	Invoke LOGIN instead of /bin/login" "\n	-t SEC		Terminate after SEC if no username is read" "\n	-I INITSTR	Send INITSTR before anything else" "\n	-H HOST		Log HOST into the utmp file as the hostname" if True


#define dd_example_usage if True 
	expansions 
		 => "$ dd if=/dev/zero of=/dev/ram1 bs=1M count=4\n" "4+0 records in\n" "4+0 records out\n" if True


#define ENABLE_ADDUSER if True 
	expansions 
		 => 0 if !def(CONFIG_ADDUSER)
		 => 1 if def(CONFIG_ADDUSER)


#define IF_NOT_IPCRM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPCRM)
		(__VA_ARGS__...) if def(CONFIG_IPCRM)


#define IF_MODPROBE_SMALL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MODPROBE_SMALL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MODPROBE_SMALL)


#define IF_SETENFORCE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SETENFORCE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SETENFORCE)


#define __BLKSIZE_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define IF_NOT_NC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NC)
		(__VA_ARGS__...) if def(CONFIG_NC)


#define ENABLE_FEATURE_TFTP_PUT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TFTP_PUT)
		 => 1 if def(CONFIG_FEATURE_TFTP_PUT)


#define bbconfig_trivial_usage if True 
	expansions 
		 => "" if True


#define IF_FEATURE_BOOTCHARTD_BLOATED_HEADER if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)


#define IF_CAL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CAL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CAL)


#define IF_FEATURE_TOP_CPU_GLOBAL_PERCENTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)


#define IF_PIVOT_ROOT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PIVOT_ROOT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PIVOT_ROOT)


#define __FLT_HAS_QUIET_NAN__ if True 
	expansions 
		 => 1 if True


#define IF_NOT_WALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WALL)
		(__VA_ARGS__...) if def(CONFIG_WALL)


#define __FSID_T_TYPE if True 
	expansions 
		 => struct { int __val[2]; } if True


#define IF_NOT_FEATURE_PIDFILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PIDFILE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PIDFILE)


#define conspy_full_usage if True 
	expansions 
		 => "\n\n" "A text-mode VNC like program for Linux virtual consoles." "\nTo exit, quickly press ESC 3 times." "\n" "\nOptions:" "\n	-v	Don't send keystrokes to the console" "\n	-c	Create missing devices in /dev" "\n	-s	Open a SHELL session" "\n	-n	Black & white" "\n	-d	Dump console to stdout" "\n	-f	Follow cursor" "\n	-x COL	Starting column" "\n	-y LINE	Starting line" if True


#define flash_eraseall_trivial_usage if True 
	expansions 
		 => "[-jq] MTD_DEVICE" if True


#define IF_NOT_FEATURE_SH_NOFORK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SH_NOFORK)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SH_NOFORK)


#define IF_NOT_FEATURE_SHARED_BUSYBOX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SHARED_BUSYBOX)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SHARED_BUSYBOX)


#define ENABLE_STRINGS if True 
	expansions 
		 => 0 if !def(CONFIG_STRINGS)
		 => 1 if def(CONFIG_STRINGS)


#define IF_TCPSVD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TCPSVD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TCPSVD)


#define IF_NOT_HUSH_CASE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_CASE)
		(__VA_ARGS__...) if def(CONFIG_HUSH_CASE)


#define ENABLE_SCRIPT if True 
	expansions 
		 => 0 if !def(CONFIG_SCRIPT)
		 => 1 if def(CONFIG_SCRIPT)


#define IF_NOT_SETFILES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETFILES)
		(__VA_ARGS__...) if def(CONFIG_SETFILES)


#define bootchartd_trivial_usage if True 
	expansions 
		 => "start [PROG ARGS]|stop|init" if True


#define _IO_FIXED if True 
	expansions 
		 => 010000 if True


#define IF_NOT_FLASHCP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FLASHCP)
		(__VA_ARGS__...) if def(CONFIG_FLASHCP)


#define ENABLE_MSH if True 
	expansions 
		 => 0 if !def(CONFIG_MSH)
		 => 1 if def(CONFIG_MSH)


#define ENABLE_FEATURE_CHAT_CLR_ABORT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_CLR_ABORT)
		 => 1 if def(CONFIG_FEATURE_CHAT_CLR_ABORT)


#define popmaildir_example_usage if True 
	expansions 
		 => "$ popmaildir -k ~/Maildir -- nc pop.drvv.ru 110 [<password_file]\n" "$ popmaildir ~/Maildir -- openssl s_client -quiet -connect pop.gmail.com:995 [<password_file]\n" if True


#define IF_RESET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RESET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RESET)


#define IF_FEATURE_FIND_CONTEXT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_CONTEXT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_CONTEXT)


#define ifconfig_full_usage if True 
	expansions 
		 => "\n\n" "Configure a network interface\n" "\nOptions:" "\n" IF_FEATURE_IPV6( "	[add ADDRESS[/PREFIXLEN]]\n") IF_FEATURE_IPV6( "	[del ADDRESS[/PREFIXLEN]]\n") "	[[-]broadcast [ADDRESS]] [[-]pointopoint [ADDRESS]]\n" "	[netmask ADDRESS] [dstaddr ADDRESS]\n" IF_FEATURE_IFCONFIG_SLIP( "	[outfill NN] [keepalive NN]\n") "	" IF_FEATURE_IFCONFIG_HW("[hw ether" IF_FEATURE_HWIB("|infiniband")" ADDRESS] ") "[metric NN] [mtu NN]\n" "	[[-]trailers] [[-]arp] [[-]allmulti]\n" "	[multicast] [[-]promisc] [txqueuelen NN] [[-]dynamic]\n" IF_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ( "	[mem_start NN] [io_addr NN] [irq NN]\n") "	[up|down] ..." if True


#define IF_NOT_FEATURE_SWAPON_PRI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SWAPON_PRI)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SWAPON_PRI)


#define IF_NOT_FEATURE_UNIX_LOCAL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UNIX_LOCAL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UNIX_LOCAL)


#define IF_SCRIPT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SCRIPT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SCRIPT)


#define IF_FEATURE_FIND_SIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_SIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_SIZE)


#define IF_NOT_FEATURE_IFCONFIG_BROADCAST_PLUS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)


#define IF_NOT_INIT_TERMINAL_TYPE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INIT_TERMINAL_TYPE)
		(__VA_ARGS__...) if def(CONFIG_INIT_TERMINAL_TYPE)


#define __bos0 if True 
	expansions 
		(ptr) => __builtin_object_size (ptr, 0) if True


#define ENABLE_FEATURE_CHAT_TTY_HIFI if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_TTY_HIFI)
		 => 1 if def(CONFIG_FEATURE_CHAT_TTY_HIFI)


#define __need___FILE if False 
	expansions 
		 if False


#define IF_NOT_CTTYHACK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CTTYHACK)
		(__VA_ARGS__...) if def(CONFIG_CTTYHACK)


#define IF_NOT_PING if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PING)
		(__VA_ARGS__...) if def(CONFIG_PING)


#define IF_NOT_FEATURE_LSMOD_PRETTY_2_6_OUTPUT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)


#define IF_NOT_FEATURE_VI_WIN_RESIZE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_WIN_RESIZE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_WIN_RESIZE)


#define __LDBL_REDIR if True 
	expansions 
		(name, proto) => name proto if True


#define hdparm_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-a	Get/set fs readahead" "\n	-A	Set drive read-lookahead flag (0/1)" "\n	-b	Get/set bus state (0 == off, 1 == on, 2 == tristate)" "\n	-B	Set Advanced Power Management setting (1-255)" "\n	-c	Get/set IDE 32-bit IO setting" "\n	-C	Check IDE power mode status" IF_FEATURE_HDPARM_HDIO_GETSET_DMA( "\n	-d	Get/set using_dma flag") "\n	-D	Enable/disable drive defect-mgmt" "\n	-f	Flush buffer cache for device on exit" "\n	-g	Display drive geometry" "\n	-h	Display terse usage information" IF_FEATURE_HDPARM_GET_IDENTITY( "\n	-i	Display drive identification") IF_FEATURE_HDPARM_GET_IDENTITY( "\n	-I	Detailed/current information directly from drive") "\n	-k	Get/set keep_settings_over_reset flag (0/1)" "\n	-K	Set drive keep_features_over_reset flag (0/1)" "\n	-L	Set drive doorlock (0/1) (removable harddisks only)" "\n	-m	Get/set multiple sector count" "\n	-n	Get/set ignore-write-errors flag (0/1)" "\n	-p	Set PIO mode on IDE interface chipset (0,1,2,3,4,...)" "\n	-P	Set drive prefetch count" "\n	-Q	Get/set DMA tagged-queuing depth (if supported)" "\n	-r	Get/set readonly flag (DANGEROUS to set)" IF_FEATURE_HDPARM_HDIO_SCAN_HWIF( "\n	-R	Register an IDE interface (DANGEROUS)") "\n	-S	Set standby (spindown) timeout" "\n	-t	Perform device read timings" "\n	-T	Perform cache read timings" "\n	-u	Get/set unmaskirq flag (0/1)" IF_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF( "\n	-U	Unregister an IDE interface (DANGEROUS)") "\n	-v	Defaults; same as -mcudkrag for IDE drives" "\n	-V	Display program version and exit immediately" IF_FEATURE_HDPARM_HDIO_DRIVE_RESET( "\n	-w	Perform device reset (DANGEROUS)") "\n	-W	Set drive write-caching flag (0/1) (DANGEROUS)" IF_FEATURE_HDPARM_HDIO_TRISTATE_HWIF( "\n	-x	Tristate device for hotswap (0/1) (DANGEROUS)") "\n	-X	Set IDE xfer mode (DANGEROUS)" "\n	-y	Put IDE drive in standby mode" "\n	-Y	Put IDE drive to sleep" "\n	-Z	Disable Seagate auto-powersaving mode" "\n	-z	Reread partition table" if True


#define __need_time_t if False 
	expansions 
		 if False


#define IF_NOT_FEATURE_MD5_SHA1_SUM_CHECK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)


#define ENABLE_FEATURE_HTTPD_GZIP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_GZIP)
		 => 1 if def(CONFIG_FEATURE_HTTPD_GZIP)


#define IF_HTTPD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HTTPD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HTTPD)


#define ENABLE_FEATURE_WC_LARGE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_WC_LARGE)
		 => 1 if def(CONFIG_FEATURE_WC_LARGE)


#define ttysize_full_usage if True 
	expansions 
		 => "\n\n" "Print dimension(s) of stdin's terminal, on error return 80x25" if True


#define makedevs_full_usage if (def(CONFIG_FEATURE_MAKEDEVS_LEAF)|def(CONFIG_FEATURE_MAKEDEVS_TABLE)) 
	expansions 
		 => "\n\n" "Create a range of special files as specified in a device table.\n" "Device table entries take the form of:\n" "<type> <mode> <uid> <gid> <major> <minor> <start> <inc> <count>\n" "Where name is the file name, type can be one of:\n" "	f	Regular file\n" "	d	Directory\n" "	c	Character device\n" "	b	Block device\n" "	p	Fifo (named pipe)\n" "uid is the user id for the target file, gid is the group id for the\n" "target file. The rest of the entries (major, minor, etc) apply to\n" "to device special files. A '-' may be used for blank entries." if def(CONFIG_FEATURE_MAKEDEVS_TABLE)
		 => "\n\n" "Create a range of block or character special files" "\n" "\nTYPE is:" "\n	b	Block device" "\n	c	Character device" "\n	f	FIFO, MAJOR and MINOR are ignored" "\n" "\nFIRST..LAST specify numbers appended to NAME." "\nIf 's' is the last argument, the base device is created as well." "\n" "\nExamples:" "\n	makedevs /dev/ttyS c 4 66 2 63   ->  ttyS2-ttyS63" "\n	makedevs /dev/hda b 3 0 0 8 s    ->  hda,hda1-hda8" if (def(CONFIG_FEATURE_MAKEDEVS_LEAF)&!def(CONFIG_FEATURE_MAKEDEVS_TABLE))


#define ENABLE_SED if True 
	expansions 
		 => 0 if !def(CONFIG_SED)
		 => 1 if def(CONFIG_SED)


#define IF_FEATURE_VOLUMEID_XFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_XFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_XFS)


#define IF_NOT_FEATURE_FIND_PERM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_PERM)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_PERM)


#define IF_TR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TR)


#define lpd_full_usage if True 
	expansions 
		 => "\n\n" "SPOOLDIR must contain (symlinks to) device nodes or directories" "\nwith names matching print queue names. In the first case, jobs are" "\nsent directly to the device. Otherwise each job is stored in queue" "\ndirectory and HELPER program is called. Name of file to print" "\nis passed in $DATAFILE variable." "\nExample:" "\n	tcpsvd -E 0 515 softlimit -m 999999 lpd /var/spool ./print" if True


#define ENABLE_TFTP_DEBUG if True 
	expansions 
		 => 0 if !def(CONFIG_TFTP_DEBUG)
		 => 1 if def(CONFIG_TFTP_DEBUG)


#define ENABLE_ID if True 
	expansions 
		 => 0 if !def(CONFIG_ID)
		 => 1 if def(CONFIG_ID)


#define sestatus_full_usage if True 
	expansions 
		 => "\n\n" "	-v	Verbose" "\n	-b	Display current state of booleans" if True


#define IF_CROSS_COMPILER_PREFIX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CROSS_COMPILER_PREFIX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CROSS_COMPILER_PREFIX)


#define IF_FEATURE_TR_EQUIV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TR_EQUIV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TR_EQUIV)


#define IF_FLASH_LOCK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FLASH_LOCK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FLASH_LOCK)


#define IF_NOT_FEATURE_FIND_PATH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_PATH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_PATH)


#define ENABLE_HDPARM if True 
	expansions 
		 => 0 if !def(CONFIG_HDPARM)
		 => 1 if def(CONFIG_HDPARM)


#define IF_HUSH_EXPORT_N if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_EXPORT_N)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_EXPORT_N)


#define IF_NOT_FEATURE_VI_COLON if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_COLON)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_COLON)


#define IF_UPTIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UPTIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UPTIME)


#define IF_NOT_FEATURE_LS_USERNAME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LS_USERNAME)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LS_USERNAME)


#define IF_NOT_FREE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FREE)
		(__VA_ARGS__...) if def(CONFIG_FREE)


#define kill_example_usage if True 
	expansions 
		 => "$ ps | grep apache\n" "252 root     root     S [apache]\n" "263 www-data www-data S [apache]\n" "264 www-data www-data S [apache]\n" "265 www-data www-data S [apache]\n" "266 www-data www-data S [apache]\n" "267 www-data www-data S [apache]\n" "$ kill 252\n" if True


#define stty_trivial_usage if True 
	expansions 
		 => "[-a|g] [-F DEVICE] [SETTING]..." if True


#define mknod_example_usage if True 
	expansions 
		 => "$ mknod /dev/fd0 b 2 0\n" "$ mknod -m 644 /tmp/pipe p\n" if True


#define IF_FEATURE_HDPARM_HDIO_SCAN_HWIF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)


#define IF_NOT_LESS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LESS)
		(__VA_ARGS__...) if def(CONFIG_LESS)


#define ionice_full_usage if True 
	expansions 
		 => "\n\n" "Change I/O priority and class\n" "\nOptions:" "\n	-c	Class. 1:realtime 2:best-effort 3:idle" "\n	-n	Priority" if True


#define free_full_usage if True 
	expansions 
		 => "\n\n" "Display the amount of free and used system memory" if True


#define IF_NOT_FEATURE_INIT_COREDUMPS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INIT_COREDUMPS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INIT_COREDUMPS)


#define IF_FEATURE_BUFFERS_GO_ON_STACK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)


#define IF_FEATURE_TFTP_BLOCKSIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TFTP_BLOCKSIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TFTP_BLOCKSIZE)


#define ENABLE_SELINUXENABLED if True 
	expansions 
		 => 0 if !def(CONFIG_SELINUXENABLED)
		 => 1 if def(CONFIG_SELINUXENABLED)


#define IF_NOT_FEATURE_BOOTCHARTD_BLOATED_HEADER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)


#define IF_NOT_FEATURE_AR_CREATE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_AR_CREATE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_AR_CREATE)


#define ENABLE_FEATURE_CHAT_SEND_ESCAPES if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
		 => 1 if def(CONFIG_FEATURE_CHAT_SEND_ESCAPES)


#define makemime_full_usage if True 
	expansions 
		 => "\n\n" "Create multipart MIME-encoded message from FILEs\n" "\nOptions:" "\n	-o FILE	Output. Default: stdout" "\n	-a HDR	Add header. Examples:" "\n		\"From: user@host.org\", \"Date: `date -R`\"" "\n	-c CT	Content type. Default: text/plain" "\n	-C CS   Charset. Default: " CONFIG_FEATURE_MIME_CHARSET "\n" "\nOther options are silently ignored" if True


#define IF_FEATURE_TAR_CREATE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_CREATE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_CREATE)


#define IF_FEATURE_KILL_DELAY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_KILL_DELAY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_KILL_DELAY)


#define __CLOCK_T_TYPE if True 
	expansions 
		 => __SLONGWORD_TYPE if True


#define conspy_trivial_usage if True 
	expansions 
		 => "[-vcsndf] [-x COL] [-y LINE] [CONSOLE_NO]" if True


#define ENABLE_HUSH if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH)
		 => 1 if def(CONFIG_HUSH)


#define _IOLBF if True 
	expansions 
		 => 1 if True


#define IF_HUSH_JOB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_JOB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_JOB)


#define ENABLE_PIE if True 
	expansions 
		 => 0 if !def(CONFIG_PIE)
		 => 1 if def(CONFIG_PIE)


#define IF_NOT_IONICE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IONICE)
		(__VA_ARGS__...) if def(CONFIG_IONICE)


#define uptime_trivial_usage if True 
	expansions 
		 => "" if True


#define ENABLE_FEATURE_VERBOSE_USAGE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VERBOSE_USAGE)
		 => 1 if def(CONFIG_FEATURE_VERBOSE_USAGE)


#define IF_NOT_USE_PORTABLE_CODE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_USE_PORTABLE_CODE)
		(__VA_ARGS__...) if def(CONFIG_USE_PORTABLE_CODE)


#define IF_FEATURE_FIND_PERM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_PERM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_PERM)


#define insmod_full_usage if True 
	expansions 
		 => "\n\n" "Load the specified kernel modules into the kernel" IF_FEATURE_2_4_MODULES( "\n" "\nOptions:" "\n	-f	Force module to load into the wrong kernel version" "\n	-k	Make module autoclean-able" "\n	-v	Verbose" "\n	-q	Quiet" "\n	-L	Lock: prevent simultaneous loads" IF_FEATURE_INSMOD_LOAD_MAP( "\n	-m	Output load map to stdout" ) "\n	-x	Don't export externs" ) if True


#define __WALL if True 
	expansions 
		 => 0x40000000 if True


#define find_full_usage if True 
	expansions 
		 => "\n\n" "Search for files. The default PATH is the current directory,\n" "default EXPRESSION is '-print'\n" "\nEXPRESSION may consist of:" "\n	-follow		Follow symlinks" IF_FEATURE_FIND_XDEV( "\n	-xdev		Don't descend directories on other filesystems" ) IF_FEATURE_FIND_MAXDEPTH( "\n	-maxdepth N	Descend at most N levels. -maxdepth 0 applies" "\n			tests/actions to command line arguments only" ) "\n	-mindepth N	Don't act on first N levels" "\n	-name PATTERN	File name (w/o directory name) matches PATTERN" "\n	-iname PATTERN	Case insensitive -name" IF_FEATURE_FIND_PATH( "\n	-path PATTERN	Path matches PATTERN" ) IF_FEATURE_FIND_REGEX( "\n	-regex PATTERN	Path matches regex PATTERN" ) IF_FEATURE_FIND_TYPE( "\n	-type X		File type is X (X is one of: f,d,l,b,c,...)" ) IF_FEATURE_FIND_PERM( "\n	-perm NNN	Permissions match any of (+NNN), all of (-NNN)," "\n			or exactly NNN" ) IF_FEATURE_FIND_MTIME( "\n	-mtime DAYS	Modified time is greater than (+N), less than (-N)," "\n			or exactly N days" ) IF_FEATURE_FIND_MMIN( "\n	-mmin MINS	Modified time is greater than (+N), less than (-N)," "\n			or exactly N minutes" ) IF_FEATURE_FIND_NEWER( "\n	-newer FILE	Modified time is more recent than FILE's" ) IF_FEATURE_FIND_INUM( "\n	-inum N		File has inode number N" ) IF_FEATURE_FIND_USER( "\n	-user NAME	File is owned by user NAME (numeric user ID allowed)" ) IF_FEATURE_FIND_GROUP( "\n	-group NAME	File belongs to group NAME (numeric group ID allowed)" ) IF_FEATURE_FIND_DEPTH( "\n	-depth		Process directory name after traversing it" ) IF_FEATURE_FIND_SIZE( "\n	-size N[bck]	File size is N (c:bytes,k:kbytes,b:512 bytes(def.))" "\n			+/-N: file size is bigger/smaller than N" ) IF_FEATURE_FIND_LINKS( "\n	-links N	Number of links is greater than (+N), less than (-N)," "\n			or exactly N" ) "\n	-print		Print (default and assumed)" IF_FEATURE_FIND_PRINT0( "\n	-print0		Delimit output with null characters rather than" "\n			newlines" ) IF_FEATURE_FIND_CONTEXT( "\n	-context	File has specified security context" ) IF_FEATURE_FIND_EXEC( "\n	-exec CMD ARG ;	Run CMD with all instances of {} replaced by the" "\n			matching files" ) IF_FEATURE_FIND_PRUNE( "\n	-prune		Stop traversing current subtree" ) IF_FEATURE_FIND_DELETE( "\n	-delete		Delete files, turns on -depth option" ) IF_FEATURE_FIND_PAREN( "\n	(EXPR)		Group an expression" ) if True


#define IF_FEATURE_LESS_REGEXP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_REGEXP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_REGEXP)


#define _IOS_APPEND if True 
	expansions 
		 => 8 if True


#define ENABLE_FBSPLASH if True 
	expansions 
		 => 0 if !def(CONFIG_FBSPLASH)
		 => 1 if def(CONFIG_FBSPLASH)


#define IF_FEATURE_MDEV_CONF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MDEV_CONF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MDEV_CONF)


#define setenforce_trivial_usage if True 
	expansions 
		 => "[Enforcing | Permissive | 1 | 0]" if True


#define IF_FEATURE_LZMA_FAST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LZMA_FAST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LZMA_FAST)


#define IF_IOCTL_HEX2STR_ERROR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IOCTL_HEX2STR_ERROR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IOCTL_HEX2STR_ERROR)


#define dos2unix_full_usage if True 
	expansions 
		 => "\n\n" "Convert FILE in-place from DOS to Unix format.\n" "When no file is given, use stdin/stdout.\n" "\nOptions:" "\n	-u	dos2unix" "\n	-d	unix2dos" if True


#define rpm2cpio_full_usage if True 
	expansions 
		 => "\n\n" "Output a cpio archive of the rpm file" if True


#define IF_FEATURE_VI_SET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_SET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_SET)


#define IF_FEATURE_USERNAME_COMPLETION if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_USERNAME_COMPLETION)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_USERNAME_COMPLETION)


#define IF_FEATURE_COPYBUF_KB if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_COPYBUF_KB)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_COPYBUF_KB)


#define WEXITED if True 
	expansions 
		 => 4 if True


#define ash_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define slattach_trivial_usage if True 
	expansions 
		 => "[-cehmLF] [-s SPEED] [-p PROTOCOL] DEVICE" if True


#define IF_NOT_HUSH_LOOPS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_LOOPS)
		(__VA_ARGS__...) if def(CONFIG_HUSH_LOOPS)


#define lpr_trivial_usage if True 
	expansions 
		 => "-P queue[@host[:port]] -U USERNAME -J TITLE -Vmh [FILE]..." if True


#define IF_MKDIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKDIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKDIR)


#define ENABLE_FEATURE_LS_RECURSIVE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_RECURSIVE)
		 => 1 if def(CONFIG_FEATURE_LS_RECURSIVE)


#define IF_NOT_BRCTL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BRCTL)
		(__VA_ARGS__...) if def(CONFIG_BRCTL)


#define ENABLE_FEATURE_FTPD_ACCEPT_BROKEN_LIST if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
		 => 1 if def(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)


#define IF_NOT_BB_SYSCTL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BB_SYSCTL)
		(__VA_ARGS__...) if def(CONFIG_BB_SYSCTL)


#define ENABLE_FEATURE_TAR_OLDGNU_COMPATIBILITY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
		 => 1 if def(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)


#define IF_NOT_DPKG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DPKG)
		(__VA_ARGS__...) if def(CONFIG_DPKG)


#define IF_NOT_UNIX2DOS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UNIX2DOS)
		(__VA_ARGS__...) if def(CONFIG_UNIX2DOS)


#define _G_uid_t if True 
	expansions 
		 => __uid_t if True


#define dhcprelay_trivial_usage if True 
	expansions 
		 => "CLIENT_IFACE[,CLIENT_IFACE2]... SERVER_IFACE [SERVER_IP]" if True


#define ENABLE_HOSTNAME if True 
	expansions 
		 => 0 if !def(CONFIG_HOSTNAME)
		 => 1 if def(CONFIG_HOSTNAME)


#define IF_NOT_MKFIFO if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKFIFO)
		(__VA_ARGS__...) if def(CONFIG_MKFIFO)


#define __USING_NAMESPACE_C99 if True 
	expansions 
		(name) if True


#define IF_NOT_FEATURE_SU_CHECKS_SHELLS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SU_CHECKS_SHELLS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SU_CHECKS_SHELLS)


#define IF_NOT_INSTALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_INSTALL)
		(__VA_ARGS__...) if def(CONFIG_INSTALL)


#define IF_NOT_LSATTR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LSATTR)
		(__VA_ARGS__...) if def(CONFIG_LSATTR)


#define ENABLE_OD if True 
	expansions 
		 => 0 if !def(CONFIG_OD)
		 => 1 if def(CONFIG_OD)


#define IF_FEATURE_MDEV_RENAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MDEV_RENAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MDEV_RENAME)


#define ENABLE_FEATURE_TAR_GNU_EXTENSIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
		 => 1 if def(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)


#define ENABLE_ADDGROUP if True 
	expansions 
		 => 0 if !def(CONFIG_ADDGROUP)
		 => 1 if def(CONFIG_ADDGROUP)


#define IF_PLATFORM_LINUX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PLATFORM_LINUX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PLATFORM_LINUX)


#define ENABLE_UNEXPAND if True 
	expansions 
		 => 0 if !def(CONFIG_UNEXPAND)
		 => 1 if def(CONFIG_UNEXPAND)


#define netstat_full_usage if True 
	expansions 
		 => "\n\n" "Display networking information\n" "\nOptions:" IF_ROUTE( "\n	-r	Routing table" ) "\n	-a	All sockets" "\n	-l	Listening sockets" "\n		Else: connected sockets" "\n	-t	TCP sockets" "\n	-u	UDP sockets" "\n	-w	Raw sockets" "\n	-x	Unix sockets" "\n		Else: all socket types" "\n	-e	Other/more information" "\n	-n	Don't resolve names" IF_FEATURE_NETSTAT_WIDE( "\n	-W	Wide display" ) IF_FEATURE_NETSTAT_PRG( "\n	-p	Show PID/program name for sockets" ) if True


#define __DEC32_MIN__ if True 
	expansions 
		 => 1E-95DF if True


#define IF_NOT_FEATURE_BUFFERS_GO_IN_BSS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)


#define ENABLE_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
		 => 1 if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)


#define ip_trivial_usage if True 
	expansions 
		 => "[OPTIONS] {" IF_FEATURE_IP_ADDRESS("address | ") IF_FEATURE_IP_ROUTE("route | ") IF_FEATURE_IP_LINK("link | ") IF_FEATURE_IP_TUNNEL("tunnel | ") IF_FEATURE_IP_RULE("rule") "} {COMMAND}" if True


#define __extern_inline if True 
	expansions 
		 => extern __inline __attribute__ ((__gnu_inline__)) if True


#define IF_NAMEIF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NAMEIF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NAMEIF)


#define ENABLE_LOGGER if True 
	expansions 
		 => 0 if !def(CONFIG_LOGGER)
		 => 1 if def(CONFIG_LOGGER)


#define ftpput_trivial_usage if True 
	expansions 
		 => "[OPTIONS] HOST [REMOTE_FILE] LOCAL_FILE" if True


#define ENABLE_FEATURE_TAR_SELINUX if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAR_SELINUX)
		 => 1 if def(CONFIG_FEATURE_TAR_SELINUX)


#define ENABLE_FEATURE_MDEV_RENAME_REGEXP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
		 => 1 if def(CONFIG_FEATURE_MDEV_RENAME_REGEXP)


#define ENABLE_KBD_MODE if True 
	expansions 
		 => 0 if !def(CONFIG_KBD_MODE)
		 => 1 if def(CONFIG_KBD_MODE)


#define traceroute_trivial_usage if True 
	expansions 
		 => "[-"IF_TRACEROUTE6("46")"FIldnrv] [-f 1ST_TTL] [-m MAXTTL] [-p PORT] [-q PROBES]\n" "	[-s SRC_IP] [-t TOS] [-w WAIT_SEC] [-g GATEWAY] [-i IFACE]\n" "	[-z PAUSE_MSEC] HOST [BYTES]" if True


#define IF_PIE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PIE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PIE)


#define __SIZEOF_LONG_DOUBLE__ if True 
	expansions 
		 => 16 if True


#define IF_NOT_FEATURE_SHOW_THREADS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SHOW_THREADS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SHOW_THREADS)


#define IF_NOT_FEATURE_UDHCP_RFC3397 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UDHCP_RFC3397)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UDHCP_RFC3397)


#define bootchartd_full_usage if True 
	expansions 
		 => "\n\n" "Create /var/log/bootchart.tgz with boot chart data\n" "\nOptions:" "\nstart: start background logging; with PROG, run PROG, then kill logging with USR1" "\nstop: send USR1 to all bootchartd processes" "\ninit: start background logging; stop when getty/xdm is seen (for init scripts)" "\nUnder PID 1: as init, then exec $bootchart_init, /init, /sbin/init" if True


#define ENABLE_FEATURE_VOLUMEID_JFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_JFS)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_JFS)


#define chpasswd_trivial_usage if True 
	expansions 
		 => IF_LONG_OPTS("[--md5|--encrypted]") IF_NOT_LONG_OPTS("[-m|-e]") if True


#define ENABLE_SLEEP if True 
	expansions 
		 => 0 if !def(CONFIG_SLEEP)
		 => 1 if def(CONFIG_SLEEP)


#define tftpd_full_usage if True 
	expansions 
		 => "\n\n" "Transfer a file on tftp client's request\n" "\n" "tftpd should be used as an inetd service.\n" "tftpd's line for inetd.conf:\n" "	69 dgram udp nowait root tftpd tftpd /files/to/serve\n" "It also can be ran from udpsvd:\n" "	udpsvd -vE 0.0.0.0 69 tftpd /files/to/serve\n" "\nOptions:" "\n	-r	Prohibit upload" "\n	-c	Allow file creation via upload" "\n	-u	Access files as USER" if True


#define IF_NOT_FEATURE_MOUNT_HELPERS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_HELPERS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_HELPERS)


#define mount_example_usage if True 
	expansions 
		 => "$ mount\n" "/dev/hda3 on / type minix (rw)\n" "proc on /proc type proc (rw)\n" "devpts on /dev/pts type devpts (rw)\n" "$ mount /dev/fd0 /mnt -t msdos -o ro\n" "$ mount /tmp/diskimage /opt -t ext2 -o loop\n" "$ mount cd_image.iso mydir\n" if True


#define _G_HAVE_MMAP if True 
	expansions 
		 => 1 if True


#define tcpsvd_full_usage if True 
	expansions 
		 => "\n\n" "Create TCP socket, bind to IP:PORT and listen\n" "for incoming connection. Run PROG for each connection.\n" "\n	IP		IP to listen on. '0' = all" "\n	PORT		Port to listen on" "\n	PROG ARGS	Program to run" "\n	-l NAME		Local hostname (else looks up local hostname in DNS)" "\n	-u USER[:GRP]	Change to user/group after bind" "\n	-c N		Handle up to N connections simultaneously" "\n	-b N		Allow a backlog of approximately N TCP SYNs" "\n	-C N[:MSG]	Allow only up to N connections from the same IP." "\n			New connections from this IP address are closed" "\n			immediately. MSG is written to the peer before close" "\n	-h		Look up peer's hostname" "\n	-E		Don't set up environment variables" "\n	-v		Verbose" if True


#define IF_NOT_MKNOD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKNOD)
		(__VA_ARGS__...) if def(CONFIG_MKNOD)


#define which_trivial_usage if True 
	expansions 
		 => "[COMMAND]..." if True


#define linuxrc_full_usage if True 
	expansions 
		 => "" if True


#define ENABLE_TTYSIZE if True 
	expansions 
		 => 0 if !def(CONFIG_TTYSIZE)
		 => 1 if def(CONFIG_TTYSIZE)


#define ENABLE_DESKTOP if True 
	expansions 
		 => 0 if !def(CONFIG_DESKTOP)
		 => 1 if def(CONFIG_DESKTOP)


#define __LDBL_MIN__ if True 
	expansions 
		 => 3.36210314311209350626e-4932L if True


#define __stub_fattach if True 
	expansions 
		 if True


#define find_trivial_usage if True 
	expansions 
		 => "[PATH]... [EXPRESSION]" if True


#define split_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [INPUT [PREFIX]]" if True


#define __FLT_MIN_10_EXP__ if True 
	expansions 
		 => (-37) if True


#define ENABLE_ENVUIDGID if True 
	expansions 
		 => 0 if !def(CONFIG_ENVUIDGID)
		 => 1 if def(CONFIG_ENVUIDGID)


#define IF_NOT_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)


#define ENABLE_DEPMOD if True 
	expansions 
		 => 0 if !def(CONFIG_DEPMOD)
		 => 1 if def(CONFIG_DEPMOD)


#define ENABLE_WHOAMI if True 
	expansions 
		 => 0 if !def(CONFIG_WHOAMI)
		 => 1 if def(CONFIG_WHOAMI)


#define microcom_trivial_usage if True 
	expansions 
		 => "[-d DELAY] [-t TIMEOUT] [-s SPEED] [-X] TTY" if True


#define IF_DC if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DC)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DC)


#define IF_NOT_FEATURE_PREFER_APPLETS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PREFER_APPLETS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PREFER_APPLETS)


#define ENABLE_VOLUMEID if True 
	expansions 
		 => 0 if !def(CONFIG_VOLUMEID)
		 => 1 if def(CONFIG_VOLUMEID)


#define SEEK_CUR if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_MOUNT_NFS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_NFS)
		 => 1 if def(CONFIG_FEATURE_MOUNT_NFS)


#define IF_SELINUX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SELINUX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SELINUX)


#define uuencode_example_usage if True 
	expansions 
		 => "$ uuencode busybox busybox\n" "begin 755 busybox\n" "<encoded file snipped>\n" "$ uudecode busybox busybox > busybox.uu\n" "$\n" if True


#define ENABLE_FEATURE_TOP_SMP_PROCESS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TOP_SMP_PROCESS)
		 => 1 if def(CONFIG_FEATURE_TOP_SMP_PROCESS)


#define IF_PMAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PMAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PMAP)


#define __DEC64_MAX__ if True 
	expansions 
		 => 9.999999999999999E384DD if True


#define sestatus_trivial_usage if True 
	expansions 
		 => "[-vb]" if True


#define IF_LOCALE_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOCALE_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOCALE_SUPPORT)


#define run_parts_example_usage if True 
	expansions 
		 => "$ run-parts -a start /etc/init.d\n" "$ run-parts -a stop=now /etc/init.d\n\n" "Let's assume you have a script foo/dosomething:\n" "#!/bin/sh\n" "for i in $*; do eval $i; done; unset i\n" "case \"$1\" in\n" "start*) echo starting something;;\n" "stop*) set -x; shutdown -h $stop;;\n" "esac\n\n" "Running this yields:\n" "$run-parts -a stop=+4m foo/\n" "+ shutdown -h +4m" if True


#define xz_full_usage if True 
	expansions 
		 => "\n\n" "Decompress FILE (or stdin)\n" "\nOptions:" "\n	-d	Decompress" "\n	-c	Write to stdout" "\n	-f	Force" if True


#define pkill_full_usage if True 
	expansions 
		 => "\n\n" "Send a signal to process(es) selected by regex PATTERN\n" "\nOptions:" "\n	-l	List all signals" "\n	-f	Match against entire command line" "\n	-n	Signal the newest process only" "\n	-o	Signal the oldest process only" "\n	-v	Negate the match" "\n	-x	Match whole name (not substring)" "\n	-s	Match session ID (0 for current)" "\n	-P	Match parent process ID" if True


#define ar_full_usage if True 
	expansions 
		 => "\n\n" "Extract or list FILES from an ar archive\n" "\nOptions:" "\n	-o	Preserve original dates" "\n	-p	Extract to stdout" "\n	-t	List" "\n	-x	Extract" "\n	-v	Verbose" if True


#define chgrp_example_usage if True 
	expansions 
		 => "$ ls -l /tmp/foo\n" "-r--r--r--    1 andersen andersen        0 Apr 12 18:25 /tmp/foo\n" "$ chgrp root /tmp/foo\n" "$ ls -l /tmp/foo\n" "-r--r--r--    1 andersen root            0 Apr 12 18:25 /tmp/foo\n" if True


#define nohup_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG immune to hangups, with output to a non-tty" if True


#define __USE_FORTIFY_LEVEL if True 
	expansions 
		 => 0 if True


#define ENABLE_LAST if True 
	expansions 
		 => 0 if !def(CONFIG_LAST)
		 => 1 if def(CONFIG_LAST)


#define mkfs_vfat_full_usage if True 
	expansions 
		 => "\n\n" "Make a FAT32 filesystem\n" "\nOptions:" "\n	-v	Verbose" "\n	-n LBL	Volume label" if True


#define mkdir_example_usage if True 
	expansions 
		 => "$ mkdir /tmp/foo\n" "$ mkdir /tmp/foo\n" "/tmp/foo: File exists\n" "$ mkdir /tmp/foo/bar/baz\n" "/tmp/foo/bar/baz: No such file or directory\n" "$ mkdir -p /tmp/foo/bar/baz\n" if True


#define ENABLE_FEATURE_STAT_FORMAT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_STAT_FORMAT)
		 => 1 if def(CONFIG_FEATURE_STAT_FORMAT)


#define ENABLE_SETARCH if True 
	expansions 
		 => 0 if !def(CONFIG_SETARCH)
		 => 1 if def(CONFIG_SETARCH)


#define ENABLE_FEATURE_FIND_XDEV if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_XDEV)
		 => 1 if def(CONFIG_FEATURE_FIND_XDEV)


#define IF_NOT_IPCALC if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IPCALC)
		(__VA_ARGS__...) if def(CONFIG_IPCALC)


#define IF_NOT_ID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ID)
		(__VA_ARGS__...) if def(CONFIG_ID)


#define IF_NOT_FEATURE_TOP_CPU_USAGE_PERCENTAGE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)


#define unlzop_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-c	Write to stdout" "\n	-f	Force" "\n	-v	Verbose" "\n	-F	Don't store or verify checksum" if True


#define IF_FEATURE_DD_IBS_OBS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DD_IBS_OBS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DD_IBS_OBS)


#define __stub_revoke if True 
	expansions 
		 if True


#define IF_CP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CP)


#define ENABLE_FEATURE_IPCALC_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)


#define IF_TFTPD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TFTPD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TFTPD)


#define IF_NOT_CRONTAB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CRONTAB)
		(__VA_ARGS__...) if def(CONFIG_CRONTAB)


#define IF_NOT_OD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_OD)
		(__VA_ARGS__...) if def(CONFIG_OD)


#define IF_FEATURE_LAST_FANCY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LAST_FANCY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LAST_FANCY)


#define ENABLE_SETFILES if True 
	expansions 
		 => 0 if !def(CONFIG_SETFILES)
		 => 1 if def(CONFIG_SETFILES)


#define IF_NOT_DELGROUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DELGROUP)
		(__VA_ARGS__...) if def(CONFIG_DELGROUP)


#define IF_FEATURE_EDITING_VI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING_VI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING_VI)


#define IF_FEATURE_HWCLOCK_ADJTIME_FHS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)


#define ENABLE_IOSTAT if True 
	expansions 
		 => 0 if !def(CONFIG_IOSTAT)
		 => 1 if def(CONFIG_IOSTAT)


#define raidautorun_example_usage if True 
	expansions 
		 => "$ raidautorun /dev/md0" if True


#define WIFSIGNALED if True 
	expansions 
		(status) => __WIFSIGNALED (__WAIT_INT (status)) if True


#define zcat_trivial_usage if True 
	expansions 
		 => "FILE" if True


#define ENABLE_UDHCPC_DEFAULT_SCRIPT if True 
	expansions 
		 => 0 if !def(CONFIG_UDHCPC_DEFAULT_SCRIPT)
		 => 1 if def(CONFIG_UDHCPC_DEFAULT_SCRIPT)


#define ENABLE_EXTRA_CFLAGS if True 
	expansions 
		 => 0 if !def(CONFIG_EXTRA_CFLAGS)
		 => 1 if def(CONFIG_EXTRA_CFLAGS)


#define softlimit_full_usage if True 
	expansions 
		 => "\n\n" "Set soft resource limits, then run PROG\n" "\nOptions:" "\n	-a BYTES	Limit total size of all segments" "\n	-m BYTES	Same as -d BYTES -s BYTES -l BYTES -a BYTES" "\n	-d BYTES	Limit data segment" "\n	-s BYTES	Limit stack segment" "\n	-l BYTES	Limit locked memory size" "\n	-o N		Limit number of open files per process" "\n	-p N		Limit number of processes per uid" "\nOptions controlling file sizes:" "\n	-f BYTES	Limit output file sizes" "\n	-c BYTES	Limit core file size" "\nEfficiency opts:" "\n	-r BYTES	Limit resident set size" "\n	-t N		Limit CPU time, process receives" "\n			a SIGXCPU after N seconds" if True


#define IF_NOT_GREP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GREP)
		(__VA_ARGS__...) if def(CONFIG_GREP)


#define ENABLE_FEATURE_IP_TUNNEL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_TUNNEL)
		 => 1 if def(CONFIG_FEATURE_IP_TUNNEL)


#define __SIZEOF_PTHREAD_RWLOCK_T if True 
	expansions 
		 => 56 if True


#define IF_SESTATUS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SESTATUS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SESTATUS)


#define IF_NOT_FEATURE_HEXDUMP_REVERSE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HEXDUMP_REVERSE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HEXDUMP_REVERSE)


#define whoami_full_usage if True 
	expansions 
		 => "\n\n" "Print the user name associated with the current effective user id" if True


#define __SIZEOF_DOUBLE__ if True 
	expansions 
		 => 8 if True


#define busybox_notes_usage if True 
	expansions 
		 => "Hello world!\n" if True


#define mount_full_usage if True 
	expansions 
		 => "\n\n" "Mount a filesystem. Filesystem autodetection requires /proc.\n" "\nOptions:" "\n	-a		Mount all filesystems in fstab" IF_FEATURE_MOUNT_FAKE( IF_FEATURE_MTAB_SUPPORT( "\n	-f		Update /etc/mtab, but don't mount" ) IF_NOT_FEATURE_MTAB_SUPPORT( "\n	-f		Dry run" ) ) IF_FEATURE_MOUNT_HELPERS( "\n	-i		Don't run mount helper" ) IF_FEATURE_MTAB_SUPPORT( "\n	-n		Don't update /etc/mtab" ) "\n	-r		Read-only mount" "\n	-w		Read-write mount (default)" "\n	-t FSTYPE	Filesystem type" "\n	-O OPT		Mount only filesystems with option OPT (-a only)" "\n-o OPT:" IF_FEATURE_MOUNT_LOOP( "\n	loop		Ignored (loop devices are autodetected)" ) IF_FEATURE_MOUNT_FLAGS( "\n	[a]sync		Writes are [a]synchronous" "\n	[no]atime	Disable/enable updates to inode access times" "\n	[no]diratime	Disable/enable atime updates to directories" "\n	[no]relatime	Disable/enable atime updates relative to modification time" "\n	[no]dev		(Dis)allow use of special device files" "\n	[no]exec	(Dis)allow use of executable files" "\n	[no]suid	(Dis)allow set-user-id-root programs" "\n	[r]shared	Convert [recursively] to a shared subtree" "\n	[r]slave	Convert [recursively] to a slave subtree" "\n	[r]private	Convert [recursively] to a private subtree" "\n	[un]bindable	Make mount point [un]able to be bind mounted" "\n	bind		Bind a file or directory to another location" "\n	move		Relocate an existing mount point" ) "\n	remount		Remount a mounted filesystem, changing flags" "\n	ro/rw		Same as -r/-w" "\n" "\nThere are filesystem-specific -o flags." if True


#define __INO64_T_TYPE if True 
	expansions 
		 => __UQUAD_TYPE if True


#define IF_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)


#define nc_example_usage if !def(CONFIG_NC_110_COMPAT) 
	expansions 
		 => "$ nc foobar.somedomain.com 25\n" "220 foobar ESMTP Exim 3.12 #1 Sat, 15 Apr 2000 00:03:02 -0600\n" "help\n" "214-Commands supported:\n" "214-    HELO EHLO MAIL RCPT DATA AUTH\n" "214     NOOP QUIT RSET HELP\n" "quit\n" "221 foobar closing connection\n" if !def(CONFIG_NC_110_COMPAT)


#define IF_NOT_FEATURE_DMESG_PRETTY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DMESG_PRETTY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DMESG_PRETTY)


#define IF_FIRST_SYSTEM_ID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FIRST_SYSTEM_ID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FIRST_SYSTEM_ID)


#define ENABLE_FEATURE_INETD_SUPPORT_BUILTIN_ECHO if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
		 => 1 if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)


#define IF_FEATURE_TFTP_GET if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TFTP_GET)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TFTP_GET)


#define ENABLE_FEATURE_INIT_SCTTY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INIT_SCTTY)
		 => 1 if def(CONFIG_FEATURE_INIT_SCTTY)


#define pivot_root_trivial_usage if True 
	expansions 
		 => "NEW_ROOT PUT_OLD" if True


#define IF_NOT_FEATURE_FIND_PRUNE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_PRUNE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_PRUNE)


#define IF_UNICODE_WIDE_WCHARS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_WIDE_WCHARS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_WIDE_WCHARS)


#define arp_trivial_usage if True 
	expansions 
		 => "\n[-vn]	[-H HWTYPE] [-i IF] -a [HOSTNAME]" "\n[-v]		    [-i IF] -d HOSTNAME [pub]" "\n[-v]	[-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [temp]" "\n[-v]	[-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [netmask MASK] pub" "\n[-v]	[-H HWTYPE] [-i IF] -Ds HOSTNAME IFACE [netmask MASK] pub" if True


#define ENABLE_FEATURE_PRESERVE_HARDLINKS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PRESERVE_HARDLINKS)
		 => 1 if def(CONFIG_FEATURE_PRESERVE_HARDLINKS)


#define ENABLE_HUSH_LOCAL if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_LOCAL)
		 => 1 if def(CONFIG_HUSH_LOCAL)


#define IF_NOT_FEATURE_TAR_GNU_EXTENSIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)


#define IF_USE_BB_CRYPT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_USE_BB_CRYPT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_USE_BB_CRYPT)


#define IF_NOT_FEATURE_FTP_WRITE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FTP_WRITE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FTP_WRITE)


#define cut_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define IF_MAKEMIME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MAKEMIME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MAKEMIME)


#define ENABLE_FUSER if True 
	expansions 
		 => 0 if !def(CONFIG_FUSER)
		 => 1 if def(CONFIG_FUSER)


#define NFDBITS if True 
	expansions 
		 => __NFDBITS if True


#define IF_FEATURE_CHAT_SEND_ESCAPES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_SEND_ESCAPES)


#define IF_FEATURE_CPIO_O if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CPIO_O)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CPIO_O)


#define IF_FDISK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FDISK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FDISK)


#define IF_FEATURE_FIND_REGEX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_REGEX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_REGEX)


#define xargs_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG on every item given by stdin\n" "\nOptions:" IF_FEATURE_XARGS_SUPPORT_CONFIRMATION( "\n	-p	Ask user whether to run each command" ) "\n	-r	Don't run command if input is empty" IF_FEATURE_XARGS_SUPPORT_ZERO_TERM( "\n	-0	Input is separated by NUL characters" ) "\n	-t	Print the command on stderr before execution" "\n	-e[STR]	STR stops input processing" "\n	-n N	Pass no more than N args to PROG" "\n	-s N	Pass command line of no more than N bytes" IF_FEATURE_XARGS_SUPPORT_TERMOPT( "\n	-x	Exit if size is exceeded" ) if True


#define IF_NOT_FEATURE_NOLOGIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_NOLOGIN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_NOLOGIN)


#define IF_NOT_FEATURE_IP_ROUTE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IP_ROUTE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IP_ROUTE)


#define IF_NOT_KILLALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_KILLALL)
		(__VA_ARGS__...) if def(CONFIG_KILLALL)


#define linux32_full_usage if True 
	expansions 
		 => "" if True


#define ifup_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-a	De/configure all interfaces automatically" "\n	-i FILE	Use FILE for interface definitions" "\n	-n	Print out what would happen, but don't do it" IF_FEATURE_IFUPDOWN_MAPPING( "\n		(note: doesn't disable mappings)" "\n	-m	Don't run any mappings" ) "\n	-v	Print out what would happen before doing it" "\n	-f	Force de/configuration" if True


#define IF_NOT_FEATURE_CHAT_TTY_HIFI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_TTY_HIFI)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_TTY_HIFI)


#define IF_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)


#define __WCOREDUMP if True 
	expansions 
		(status) => ((status) & __WCOREFLAG) if True


#define swapon_trivial_usage if True 
	expansions 
		 => "[-a]" IF_FEATURE_SWAPON_PRI(" [-p PRI]") " [DEVICE]" if True


#define IF_FEATURE_VI_SETOPTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_SETOPTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_SETOPTS)


#define hostname_full_usage if True 
	expansions 
		 => "\n\n" "Get or set hostname or DNS domain name\n" "\nOptions:" "\n	-s	Short" "\n	-i	Addresses for the hostname" "\n	-d	DNS domain name" "\n	-f	Fully qualified domain name" "\n	-F FILE	Use FILE's content as hostname" if True


#define IF_ID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ID)


#define sulogin_trivial_usage if True 
	expansions 
		 => "[-t N] [TTY]" if True


#define IF_NOT_FEATURE_DEVPTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DEVPTS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DEVPTS)


#define __LDBL_REDIR1 if True 
	expansions 
		(name, proto, alias) => name proto if True


#define IF_FEATURE_FIND_XDEV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_XDEV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_XDEV)


#define head_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [FILE]..." if True


#define mpstat_full_usage if True 
	expansions 
		 => "\n\n" "Per-processor statistics\n" "\nOptions:" "\n	-A			Same as -I ALL -u -P ALL" "\n	-I SUM|CPU|ALL|SCPU	Report interrupt statistics" "\n	-P num|ALL		Processor to monitor" "\n	-u			Report CPU utilization" if True


#define IF_UNEXPAND if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNEXPAND)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNEXPAND)


#define __FSBLKCNT64_T_TYPE if True 
	expansions 
		 => __UQUAD_TYPE if True


#define sed_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-e CMD	Add CMD to sed commands to be executed" "\n	-f FILE	Add FILE contents to sed commands to be executed" "\n	-i	Edit files in-place (else sends result to stdout)" "\n	-n	Suppress automatic printing of pattern space" "\n	-r	Use extended regex syntax" "\n" "\nIf no -e or -f, the first non-option argument is the sed command string." "\nRemaining arguments are input files (stdin if none)." if True


#define __INO_T_TYPE if True 
	expansions 
		 => __ULONGWORD_TYPE if True


#define __KEY_T_TYPE if True 
	expansions 
		 => __S32_TYPE if True


#define IF_FEATURE_CHAT_TTY_HIFI if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_TTY_HIFI)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_TTY_HIFI)


#define mkswap_trivial_usage if True 
	expansions 
		 => "[-L LBL] BLOCKDEV [KBYTES]" if True


#define mkswap_full_usage if True 
	expansions 
		 => "\n\n" "Prepare BLOCKDEV to be used as swap partition\n" "\nOptions:" "\n	-L LBL	Label" if True


#define ENABLE_FEATURE_VI_OPTIMIZE_CURSOR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
		 => 1 if def(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)


#define addgroup_trivial_usage if True 
	expansions 
		 => "[-g GID] " IF_FEATURE_ADDUSER_TO_GROUP("[USER] ") "GROUP" if True


#define IF_NOT_FEATURE_ADDGROUP_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)


#define ENABLE_LOCALE_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_LOCALE_SUPPORT)
		 => 1 if def(CONFIG_LOCALE_SUPPORT)


#define ENABLE_FEATURE_IFUPDOWN_IPV6 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_IPV6)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_IPV6)


#define ENABLE_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
		 => 1 if def(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)


#define IF_DIRNAME if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DIRNAME)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DIRNAME)


#define __timespec_defined if True 
	expansions 
		 => 1 if True


#define __stub_chflags if True 
	expansions 
		 if True


#define ENABLE_HWCLOCK if True 
	expansions 
		 => 0 if !def(CONFIG_HWCLOCK)
		 => 1 if def(CONFIG_HWCLOCK)


#define IF_NOT_FEATURE_EDITING_HISTORY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EDITING_HISTORY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EDITING_HISTORY)


#define ENABLE_HUSH_HELP if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_HELP)
		 => 1 if def(CONFIG_HUSH_HELP)


#define awk_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-v VAR=VAL	Set variable" "\n	-F SEP		Use SEP as field separator" "\n	-f FILE		Read program from FILE" if True


#define ENABLE_WERROR if True 
	expansions 
		 => 0 if !def(CONFIG_WERROR)
		 => 1 if def(CONFIG_WERROR)


#define IF_NOT_FEATURE_FIND_REGEX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_REGEX)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_REGEX)


#define ENABLE_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
		 => 1 if def(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)


#define IF_DEBUG_PESSIMIZE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DEBUG_PESSIMIZE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DEBUG_PESSIMIZE)


#define _BSD_SIZE_T_ if True 
	expansions 
		 if True


#define IF_FEATURE_HTTPD_SETUID if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_SETUID)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_SETUID)


#define IF_NOT_FEATURE_LESS_MAXLINES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_MAXLINES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_MAXLINES)


#define ENABLE_FEATURE_KILL_DELAY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_KILL_DELAY)
		 => 1 if def(CONFIG_FEATURE_KILL_DELAY)


#define modprobe_example_usage if !def(CONFIG_MODPROBE_SMALL) 
	expansions 
		 => "(with the above /etc/modules.conf):\n\n" "$ modprobe tulip\n" "   will load the module 'tulip' with default option 'irq=3'\n\n" "$ modprobe tulip irq=5\n" "   will load the module 'tulip' with option 'irq=5', thus overriding the default\n\n" "$ modprobe tulip2\n" "   will load the module 'tulip' with default options 'irq=4 io=0x308',\n" "   which are the default for alias 'tulip2'\n\n" "$ modprobe tulip2 irq=8\n" "   will load the module 'tulip' with default options 'irq=4 io=0x308 irq=8',\n" "   which are the default for alias 'tulip2' overridden by the option 'irq=8'\n\n" "   from the command line\n\n" "$ modprobe tulip2 irq=2 io=0x210\n" "   will load the module 'tulip' with default options 'irq=4 io=0x308 irq=4 io=0x210',\n" "   which are the default for alias 'tulip2' overridden by the options 'irq=2 io=0x210'\n\n" "   from the command line\n" if !def(CONFIG_MODPROBE_SMALL)


#define IF_NOT_HEAD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HEAD)
		(__VA_ARGS__...) if def(CONFIG_HEAD)


#define xargs_trivial_usage if True 
	expansions 
		 => "[OPTIONS] [PROG ARGS]" if True


#define ENABLE_ROUTE if True 
	expansions 
		 => 0 if !def(CONFIG_ROUTE)
		 => 1 if def(CONFIG_ROUTE)


#define ENABLE_TELINIT_PATH if True 
	expansions 
		 => 0 if !def(CONFIG_TELINIT_PATH)
		 => 1 if def(CONFIG_TELINIT_PATH)


#define _IO_HAVE_ST_BLKSIZE if True 
	expansions 
		 => _G_HAVE_ST_BLKSIZE if True


#define IF_EFENCE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_EFENCE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_EFENCE)


#define _G_OPEN64 if True 
	expansions 
		 => __open64 if True


#define unexpand_full_usage if True 
	expansions 
		 => "\n\n" "Convert spaces to tabs, writing to stdout\n" "\nOptions:" IF_FEATURE_UNEXPAND_LONG_OPTIONS( "\n	-a,--all	Convert all blanks" "\n	-f,--first-only	Convert only leading blanks" "\n	-t,--tabs=N	Tabstops every N chars" ) IF_NOT_FEATURE_UNEXPAND_LONG_OPTIONS( "\n	-a	Convert all blanks" "\n	-f	Convert only leading blanks" "\n	-t N	Tabstops every N chars" ) if True


#define IF_NOT_RESET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RESET)
		(__VA_ARGS__...) if def(CONFIG_RESET)


#define ENABLE_HUSH_MODE_X if True 
	expansions 
		 => 0 if !def(CONFIG_HUSH_MODE_X)
		 => 1 if def(CONFIG_HUSH_MODE_X)


#define __REDIRECT_NTH if True 
	expansions 
		(name, proto, alias) => name proto __asm__ (__ASMNAME (#alias)) __THROW if True


#define dnsdomainname_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define devfsd_trivial_usage if True 
	expansions 
		 => "mntpnt [-v]" IF_DEVFSD_FG_NP("[-fg][-np]") if True


#define ENABLE_HEXDUMP if True 
	expansions 
		 => 0 if !def(CONFIG_HEXDUMP)
		 => 1 if def(CONFIG_HEXDUMP)


#define __LDBL_HAS_DENORM__ if True 
	expansions 
		 => 1 if True


#define IF_IONICE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IONICE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IONICE)


#define usleep_full_usage if True 
	expansions 
		 => "\n\n" "Pause for N microseconds" if True


#define init_notes_usage if True 
	expansions 
		 => "This version of init is designed to be run only by the kernel.\n" "\n" "BusyBox init doesn't support multiple runlevels. The runlevels field of\n" "the /etc/inittab file is completely ignored by BusyBox init. If you want\n" "runlevels, use sysvinit.\n" "\n" "BusyBox init works just fine without an inittab. If no inittab is found,\n" "it has the following default behavior:\n" "\n" "	::sysinit:/etc/init.d/rcS\n" "	::askfirst:/bin/sh\n" "	::ctrlaltdel:/sbin/reboot\n" "	::shutdown:/sbin/swapoff -a\n" "	::shutdown:/bin/umount -a -r\n" "	::restart:/sbin/init\n" "\n" "if it detects that /dev/console is _not_ a serial console, it will also run:\n" "\n" "	tty2::askfirst:/bin/sh\n" "	tty3::askfirst:/bin/sh\n" "	tty4::askfirst:/bin/sh\n" "\n" "If you choose to use an /etc/inittab file, the inittab entry format is as follows:\n" "\n" "	<id>:<runlevels>:<action>:<process>\n" "\n" "	<id>:\n" "\n" "		WARNING: This field has a non-traditional meaning for BusyBox init!\n" "		The id field is used by BusyBox init to specify the controlling tty for\n" "		the specified process to run on. The contents of this field are\n" "		appended to \"/dev/\" and used as-is. There is no need for this field to\n" "		be unique, although if it isn't you may have strange results. If this\n" "		field is left blank, the controlling tty is set to the console. Also\n" "		note that if BusyBox detects that a serial console is in use, then only\n" "		entries whose controlling tty is either the serial console or /dev/null\n" "		will be run. BusyBox init does nothing with utmp. We don't need no\n" "		stinkin' utmp.\n" "\n" "	<runlevels>:\n" "\n" "		The runlevels field is completely ignored.\n" "\n" "	<action>:\n" "\n" "		Valid actions include: sysinit, respawn, askfirst, wait,\n" "		once, restart, ctrlaltdel, and shutdown.\n" "\n" "		The available actions can be classified into two groups: actions\n" "		that are run only once, and actions that are re-run when the specified\n" "		process exits.\n" "\n" "		Run only-once actions:\n" "\n" "			'sysinit' is the first item run on boot. init waits until all\n" "			sysinit actions are completed before continuing. Following the\n" "			completion of all sysinit actions, all 'wait' actions are run.\n" "			'wait' actions, like 'sysinit' actions, cause init to wait until\n" "			the specified task completes. 'once' actions are asynchronous,\n" "			therefore, init does not wait for them to complete. 'restart' is\n" "			the action taken to restart the init process. By default this should\n" "			simply run /sbin/init, but can be a script which runs pivot_root or it\n" "			can do all sorts of other interesting things. The 'ctrlaltdel' init\n" "			actions are run when the system detects that someone on the system\n" "			console has pressed the CTRL-ALT-DEL key combination. Typically one\n" "			wants to run 'reboot' at this point to cause the system to reboot.\n" "			Finally the 'shutdown' action specifies the actions to taken when\n" "			init is told to reboot. Unmounting filesystems and disabling swap\n" "			is a very good here.\n" "\n" "		Run repeatedly actions:\n" "\n" "			'respawn' actions are run after the 'once' actions. When a process\n" "			started with a 'respawn' action exits, init automatically restarts\n" "			it. Unlike sysvinit, BusyBox init does not stop processes from\n" "			respawning out of control. The 'askfirst' actions acts just like\n" "			respawn, except that before running the specified process it\n" "			displays the line \"Please press Enter to activate this console.\"\n" "			and then waits for the user to press enter before starting the\n" "			specified process.\n" "\n" "		Unrecognized actions (like initdefault) will cause init to emit an\n" "		error message, and then go along with its business. All actions are\n" "		run in the order they appear in /etc/inittab.\n" "\n" "	<process>:\n" "\n" "		Specifies the process to be executed and its command line.\n" "\n" "Example /etc/inittab file:\n" "\n" "	# This is run first except when booting in single-user mode\n" "	#\n" "	::sysinit:/etc/init.d/rcS\n" "	\n" "	# /bin/sh invocations on selected ttys\n" "	#\n" "	# Start an \"askfirst\" shell on the console (whatever that may be)\n" "	::askfirst:-/bin/sh\n" "	# Start an \"askfirst\" shell on /dev/tty2-4\n" "	tty2::askfirst:-/bin/sh\n" "	tty3::askfirst:-/bin/sh\n" "	tty4::askfirst:-/bin/sh\n" "	\n" "	# /sbin/getty invocations for selected ttys\n" "	#\n" "	tty4::respawn:/sbin/getty 38400 tty4\n" "	tty5::respawn:/sbin/getty 38400 tty5\n" "	\n" "	\n" "	# Example of how to put a getty on a serial line (for a terminal)\n" "	#\n" "	#::respawn:/sbin/getty -L ttyS0 9600 vt100\n" "	#::respawn:/sbin/getty -L ttyS1 9600 vt100\n" "	#\n" "	# Example how to put a getty on a modem line\n" "	#::respawn:/sbin/getty 57600 ttyS2\n" "	\n" "	# Stuff to do when restarting the init process\n" "	::restart:/sbin/init\n" "	\n" "	# Stuff to do before rebooting\n" "	::ctrlaltdel:/sbin/reboot\n" "	::shutdown:/bin/umount -a -r\n" "	::shutdown:/sbin/swapoff -a\n" if True


#define cp_trivial_usage if True 
	expansions 
		 => "[OPTIONS] SOURCE DEST" if True


#define ether_wake_trivial_usage if True 
	expansions 
		 => "[-b] [-i iface] [-p aa:bb:cc:dd[:ee:ff]] MAC" if True


#define IF_FEATURE_AR_CREATE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_AR_CREATE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_AR_CREATE)


#define ENABLE_FEATURE_UDHCPD_WRITE_LEASES_EARLY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
		 => 1 if def(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)


#define ENABLE_BZIP2 if True 
	expansions 
		 => 0 if !def(CONFIG_BZIP2)
		 => 1 if def(CONFIG_BZIP2)


#define ubidetach_trivial_usage if True 
	expansions 
		 => "-d UBI_NUM UBI_CTRL_DEV" if True


#define IF_USE_BB_PWD_GRP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_USE_BB_PWD_GRP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_USE_BB_PWD_GRP)


#define ENABLE_YES if True 
	expansions 
		 => 0 if !def(CONFIG_YES)
		 => 1 if def(CONFIG_YES)


#define IF_NOT_FEATURE_FDISK_WRITABLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FDISK_WRITABLE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FDISK_WRITABLE)


#define __USE_POSIX2 if True 
	expansions 
		 => 1 if True


#define mountpoint_example_usage if True 
	expansions 
		 => "$ mountpoint /proc\n" "/proc is not a mountpoint\n" "$ mountpoint /sys\n" "/sys is a mountpoint\n" if True


#define _LP64 if True 
	expansions 
		 => 1 if True


#define vlock_full_usage if True 
	expansions 
		 => "\n\n" "Lock a virtual terminal. A password is required to unlock.\n" "\nOptions:" "\n	-a	Lock all VTs" if True


#define chown_example_usage if True 
	expansions 
		 => "$ ls -l /tmp/foo\n" "-r--r--r--    1 andersen andersen        0 Apr 12 18:25 /tmp/foo\n" "$ chown root /tmp/foo\n" "$ ls -l /tmp/foo\n" "-r--r--r--    1 root     andersen        0 Apr 12 18:25 /tmp/foo\n" "$ chown root.root /tmp/foo\n" "ls -l /tmp/foo\n" "-r--r--r--    1 root     root            0 Apr 12 18:25 /tmp/foo\n" if True


#define ENABLE_FEATURE_PIDOF_SINGLE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PIDOF_SINGLE)
		 => 1 if def(CONFIG_FEATURE_PIDOF_SINGLE)


#define IF_NOT_TOP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TOP)
		(__VA_ARGS__...) if def(CONFIG_TOP)


#define IF_NOT_LFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LFS)
		(__VA_ARGS__...) if def(CONFIG_LFS)


#define ENABLE_FEATURE_TRACEROUTE_SOURCE_ROUTE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
		 => 1 if def(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)


#define IF_NOT_FEATURE_FTPD_ACCEPT_BROKEN_LIST if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)


#define ubiattach_trivial_usage if True 
	expansions 
		 => "-m MTD_NUM [-d UBI_NUM] UBI_CTRL_DEV" if True


#define ENABLE_UNICODE_WIDE_WCHARS if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_WIDE_WCHARS)
		 => 1 if def(CONFIG_UNICODE_WIDE_WCHARS)


#define IF_NOT_MKFS_MINIX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKFS_MINIX)
		(__VA_ARGS__...) if def(CONFIG_MKFS_MINIX)


#define IF_NOT_MPSTAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MPSTAT)
		(__VA_ARGS__...) if def(CONFIG_MPSTAT)


#define ENABLE_RX if True 
	expansions 
		 => 0 if !def(CONFIG_RX)
		 => 1 if def(CONFIG_RX)


#define IF_FEATURE_MINIX2 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MINIX2)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MINIX2)


#define ENABLE_RESET if True 
	expansions 
		 => 0 if !def(CONFIG_RESET)
		 => 1 if def(CONFIG_RESET)


#define ENABLE_FEATURE_AR_CREATE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_AR_CREATE)
		 => 1 if def(CONFIG_FEATURE_AR_CREATE)


#define __intN_t if True 
	expansions 
		(N, MODE) => typedef int int ## N ## _t __attribute__ ((__mode__ (MODE))) if True


#define IF_NOT_FEATURE_CPIO_O if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CPIO_O)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CPIO_O)


#define ENABLE_FOLD if True 
	expansions 
		 => 0 if !def(CONFIG_FOLD)
		 => 1 if def(CONFIG_FOLD)


#define __SIZEOF_PTHREAD_COND_T if True 
	expansions 
		 => 48 if True


#define ENABLE_STATIC if True 
	expansions 
		 => 0 if !def(CONFIG_STATIC)
		 => 1 if def(CONFIG_STATIC)


#define IF_NOT_FEATURE_PIDOF_SINGLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PIDOF_SINGLE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PIDOF_SINGLE)


#define ENABLE_UDHCPD if True 
	expansions 
		 => 0 if !def(CONFIG_UDHCPD)
		 => 1 if def(CONFIG_UDHCPD)


#define IF_NOT_PIDOF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PIDOF)
		(__VA_ARGS__...) if def(CONFIG_PIDOF)


#define sort_example_usage if True 
	expansions 
		 => "$ echo -e \"e\\nf\\nb\\nd\\nc\\na\" | sort\n" "a\n" "b\n" "c\n" "d\n" "e\n" "f\n" IF_FEATURE_SORT_BIG( "$ echo -e \"c 3\\nb 2\\nd 2\" | $SORT -k 2,2n -k 1,1r\n" "d 2\n" "b 2\n" "c 3\n" ) "" if True


#define IF_FEATURE_ETC_NETWORKS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_ETC_NETWORKS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_ETC_NETWORKS)


#define IF_CAT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CAT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CAT)


#define mkfs_ext2_full_usage if True 
	expansions 
		 => "\n\n" "	-b BLK_SIZE	Block size, bytes" "\n	-F		Force" "\n	-i RATIO	Max number of files is filesystem_size / RATIO" "\n	-I BYTES	Inode size (min 128)" "\n	-L LBL		Volume label" "\n	-m PERCENT	Percent of blocks to reserve for admin" "\n	-n		Dry run" if True


#define __USE_POSIX_IMPLICITLY if True 
	expansions 
		 => 1 if True


#define IF_NOT_EXPR_MATH_SUPPORT_64 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_EXPR_MATH_SUPPORT_64)
		(__VA_ARGS__...) if def(CONFIG_EXPR_MATH_SUPPORT_64)


#define w_stopval if True 
	expansions 
		 => __wait_stopped.__w_stopval if True


#define IF_FEATURE_SEAMLESS_LZMA if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SEAMLESS_LZMA)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SEAMLESS_LZMA)


#define ENABLE_FEATURE_VI_ASK_TERMINAL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_ASK_TERMINAL)
		 => 1 if def(CONFIG_FEATURE_VI_ASK_TERMINAL)


#define IF_NOT_FEATURE_TFTP_GET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TFTP_GET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TFTP_GET)


#define IF_UNICODE_NEUTRAL_TABLE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UNICODE_NEUTRAL_TABLE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UNICODE_NEUTRAL_TABLE)


#define ENABLE_FEATURE_RUNCON_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)


#define unzip_trivial_usage if True 
	expansions 
		 => "[-opts[modifiers]] FILE[.zip] [LIST] [-x XLIST] [-d DIR]" if True


#define ENABLE_UUDECODE if True 
	expansions 
		 => 0 if !def(CONFIG_UUDECODE)
		 => 1 if def(CONFIG_UUDECODE)


#define modprobe_notes_usage if !def(CONFIG_MODPROBE_SMALL) 
	expansions 
		 => "modprobe can (un)load a stack of modules, passing each module options (when\n" "loading). modprobe uses a configuration file to determine what option(s) to\n" "pass each module it loads.\n" "\n" "The configuration file is searched (in this order):\n" "\n" "    /etc/modprobe.conf (2.6 only)\n" "    /etc/modules.conf\n" "    /etc/conf.modules (deprecated)\n" "\n" "They all have the same syntax (see below). If none is present, it is\n" "_not_ an error; each loaded module is then expected to load without\n" "options. Once a file is found, the others are tested for.\n" "\n" "/etc/modules.conf entry format:\n" "\n" "  alias <alias_name> <mod_name>\n" "    Makes it possible to modprobe alias_name, when there is no such module.\n" "    It makes sense if your mod_name is long, or you want a more representative\n" "    name for that module (eg. 'scsi' in place of 'aha7xxx').\n" "    This makes it also possible to use a different set of options (below) for\n" "    the module and the alias.\n" "    A module can be aliased more than once.\n" "\n" "  options <mod_name|alias_name> <symbol=value...>\n" "    When loading module mod_name (or the module aliased by alias_name), pass\n" "    the \"symbol=value\" pairs as option to that module.\n" "\n" "Sample /etc/modules.conf file:\n" "\n" "  options tulip irq=3\n" "  alias tulip tulip2\n" "  options tulip2 irq=4 io=0x308\n" "\n" "Other functionality offered by 'classic' modprobe is not available in\n" "this implementation.\n" "\n" "If module options are present both in the config file, and on the command line,\n" "then the options from the command line will be passed to the module _after_\n" "the options from the config file. That way, you can have defaults in the config\n" "file, and override them for a specific usage from the command line.\n" if !def(CONFIG_MODPROBE_SMALL)


#define __DECIMAL_BID_FORMAT__ if True 
	expansions 
		 => 1 if True


#define mv_full_usage if True 
	expansions 
		 => "\n\n" "Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY\n" "\nOptions:" "\n	-f	Don't prompt before overwriting" "\n	-i	Interactive, prompt before overwrite" "\n	-n	Don't overwrite an existing file" if True


#define IF_NOT_FEATURE_INIT_SCTTY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INIT_SCTTY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INIT_SCTTY)


#define mkfifo_trivial_usage if True 
	expansions 
		 => "[-m MODE] " IF_SELINUX("[-Z] ") "NAME" if True


#define IF_NOT_FEATURE_TAB_COMPLETION if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAB_COMPLETION)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAB_COMPLETION)


#define ENABLE_FEATURE_IFUPDOWN_MAPPING if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_MAPPING)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_MAPPING)


#define IF_NOT_PRINTF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PRINTF)
		(__VA_ARGS__...) if def(CONFIG_PRINTF)


#define MB_CUR_MAX if True 
	expansions 
		 => (__ctype_get_mb_cur_max ()) if True


#define IF_INSTALL_SH_APPLET_SYMLINK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSTALL_SH_APPLET_SYMLINK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSTALL_SH_APPLET_SYMLINK)


#define __USER_LABEL_PREFIX__ if True 
	expansions 
		 if True


#define ENABLE_FEATURE_FIND_LINKS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FIND_LINKS)
		 => 1 if def(CONFIG_FEATURE_FIND_LINKS)


#define ENABLE_SETKEYCODES if True 
	expansions 
		 => 0 if !def(CONFIG_SETKEYCODES)
		 => 1 if def(CONFIG_SETKEYCODES)


#define __WCOREFLAG if True 
	expansions 
		 => 0x80 if True


#define openvt_example_usage if True 
	expansions 
		 => "openvt 2 /bin/ash\n" if True


#define IF_NOT_FEATURE_MAKEDEVS_LEAF if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MAKEDEVS_LEAF)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MAKEDEVS_LEAF)


#define IF_FEATURE_BEEP_LENGTH_MS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_BEEP_LENGTH_MS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_BEEP_LENGTH_MS)


#define svlogd_full_usage if True 
	expansions 
		 => "\n\n" "Continuously read log data from stdin, optionally\n" "filter log messages, and write the data to one or more automatically\n" "rotated logs" if True


#define IF_WATCH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WATCH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WATCH)


#define __SCHAR_MAX__ if True 
	expansions 
		 => 127 if True


#define IF_NOT_FEATURE_FAST_TOP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FAST_TOP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FAST_TOP)


#define IF_NOT_FEATURE_ROTATE_LOGFILE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ROTATE_LOGFILE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ROTATE_LOGFILE)


#define ENABLE_FEATURE_IP_RARE_PROTOCOLS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
		 => 1 if def(CONFIG_FEATURE_IP_RARE_PROTOCOLS)


#define chroot_full_usage if True 
	expansions 
		 => "\n\n" "Run PROG with root directory set to NEWROOT" if True


#define __blkcnt_t_defined if True 
	expansions 
		 if True


#define ENABLE_MODINFO if True 
	expansions 
		 => 0 if !def(CONFIG_MODINFO)
		 => 1 if def(CONFIG_MODINFO)


#define IF_ASH_GETOPTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_GETOPTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_GETOPTS)


#define cut_example_usage if True 
	expansions 
		 => "$ echo \"Hello world\" | cut -f 1 -d ' '\n" "Hello\n" "$ echo \"Hello world\" | cut -f 2 -d ' '\n" "world\n" if True


#define ENABLE_FEATURE_FTP_WRITE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FTP_WRITE)
		 => 1 if def(CONFIG_FEATURE_FTP_WRITE)


#define date_example_usage if True 
	expansions 
		 => "$ date\n" "Wed Apr 12 18:52:41 MDT 2000\n" if True


#define fdformat_trivial_usage if True 
	expansions 
		 => "[-n] DEVICE" if True


#define IF_FEATURE_FTPD_ACCEPT_BROKEN_LIST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)


#define __warndecl if True 
	expansions 
		(name, msg) => extern void name (void) __attribute__((__warning__ (msg))) if True


#define ENABLE_PING6 if True 
	expansions 
		 => 0 if !def(CONFIG_PING6)
		 => 1 if def(CONFIG_PING6)


#define IF_NOT_ACPID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ACPID)
		(__VA_ARGS__...) if def(CONFIG_ACPID)


#define findfs_trivial_usage if True 
	expansions 
		 => "LABEL=label or UUID=uuid" if True


#define IF_NOT_FEATURE_MKSWAP_UUID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MKSWAP_UUID)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MKSWAP_UUID)


#define ENABLE_FEATURE_NTPD_SERVER if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_NTPD_SERVER)
		 => 1 if def(CONFIG_FEATURE_NTPD_SERVER)


#define IF_NOT_FEATURE_MOUNT_FSTAB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_FSTAB)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_FSTAB)


#define IF_NOT_RUNCON if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RUNCON)
		(__VA_ARGS__...) if def(CONFIG_RUNCON)


#define IF_NOT_PIVOT_ROOT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PIVOT_ROOT)
		(__VA_ARGS__...) if def(CONFIG_PIVOT_ROOT)


#define expand_full_usage if True 
	expansions 
		 => "\n\n" "Convert tabs to spaces, writing to stdout\n" "\nOptions:" IF_FEATURE_EXPAND_LONG_OPTIONS( "\n	-i,--initial	Don't convert tabs after non blanks" "\n	-t,--tabs=N	Tabstops every N chars" ) IF_NOT_FEATURE_EXPAND_LONG_OPTIONS( "\n	-i	Don't convert tabs after non blanks" "\n	-t	Tabstops every N chars" ) if True


#define ENABLE_NOHUP if True 
	expansions 
		 => 0 if !def(CONFIG_NOHUP)
		 => 1 if def(CONFIG_NOHUP)


#define IF_NOT_CHMOD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHMOD)
		(__VA_ARGS__...) if def(CONFIG_CHMOD)


#define ENABLE_FEATURE_SECURETTY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SECURETTY)
		 => 1 if def(CONFIG_FEATURE_SECURETTY)


#define IF_NOT_MOUNT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MOUNT)
		(__VA_ARGS__...) if def(CONFIG_MOUNT)


#define IF_INSMOD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INSMOD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INSMOD)


#define ENABLE_CAL if True 
	expansions 
		 => 0 if !def(CONFIG_CAL)
		 => 1 if def(CONFIG_CAL)


#define IF_SHA512SUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SHA512SUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SHA512SUM)


#define IF_RDATE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RDATE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RDATE)


#define __WINT_TYPE__ if True 
	expansions 
		 => unsigned int if True


#define IF_CRYPTPW if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CRYPTPW)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CRYPTPW)


#define ENABLE_FEATURE_SH_NOFORK if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SH_NOFORK)
		 => 1 if def(CONFIG_FEATURE_SH_NOFORK)


#define __GLIBC_PREREQ if True 
	expansions 
		(maj, min) => ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min)) if True


#define __USE_ISOC95 if True 
	expansions 
		 => 1 if True


#define IF_LFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LFS)


#define major if True 
	expansions 
		(dev) => gnu_dev_major (dev) if True


#define ENABLE_FEATURE_BUFFERS_GO_IN_BSS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
		 => 1 if def(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)


#define IF_NOT_FEATURE_MAKEDEVS_TABLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MAKEDEVS_TABLE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MAKEDEVS_TABLE)


#define ENABLE_FEATURE_CHAT_NOFAIL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CHAT_NOFAIL)
		 => 1 if def(CONFIG_FEATURE_CHAT_NOFAIL)


#define IF_FEATURE_TAR_OLDGNU_COMPATIBILITY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)


#define cal_full_usage if True 
	expansions 
		 => "\n\n" "Display a calendar\n" "\nOptions:" "\n	-j	Use julian dates" "\n	-y	Display the entire year" if True


#define ENABLE_XARGS if True 
	expansions 
		 => 0 if !def(CONFIG_XARGS)
		 => 1 if def(CONFIG_XARGS)


#define IF_FEATURE_DU_DEFAULT_BLOCKSIZE_1K if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)


#define _IO_IS_APPENDING if True 
	expansions 
		 => 0x1000 if True


#define ENABLE_ASH_RANDOM_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_ASH_RANDOM_SUPPORT)
		 => 1 if def(CONFIG_ASH_RANDOM_SUPPORT)


#define IF_FEATURE_SU_CHECKS_SHELLS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SU_CHECKS_SHELLS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SU_CHECKS_SHELLS)


#define svlogd_trivial_usage if True 
	expansions 
		 => "[-ttv] [-r C] [-R CHARS] [-l MATCHLEN] [-b BUFLEN] DIR..." if True


#define IF_DUMPLEASES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DUMPLEASES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DUMPLEASES)


#define ENABLE_IPCS if True 
	expansions 
		 => 0 if !def(CONFIG_IPCS)
		 => 1 if def(CONFIG_IPCS)


#define IF_NOT_CHOWN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHOWN)
		(__VA_ARGS__...) if def(CONFIG_CHOWN)


#define IF_NOT_LSPCI if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LSPCI)
		(__VA_ARGS__...) if def(CONFIG_LSPCI)


#define bzcat_trivial_usage if True 
	expansions 
		 => "FILE" if True


#define IF_FEATURE_LESS_BRACKETS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_BRACKETS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_BRACKETS)


#define tar_full_usage if True 
	expansions 
		 => "\n\n" IF_FEATURE_TAR_CREATE("Create, extract, ") IF_NOT_FEATURE_TAR_CREATE("Extract ") "or list files from a tar file\n" "\nOperation:" IF_FEATURE_TAR_CREATE( "\n	c	Create" ) "\n	x	Extract" "\n	t	List" "\nOptions:" "\n	f	Name of TARFILE ('-' for stdin/out)" "\n	C	Change to DIR before operation" "\n	v	Verbose" IF_FEATURE_SEAMLESS_GZ( "\n	z	(De)compress using gzip" ) IF_FEATURE_SEAMLESS_BZ2( "\n	j	(De)compress using bzip2" ) IF_FEATURE_SEAMLESS_LZMA( "\n	a	(De)compress using lzma" ) IF_FEATURE_SEAMLESS_Z( "\n	Z	(De)compress using compress" ) "\n	O	Extract to stdout" IF_FEATURE_TAR_CREATE( "\n	h	Follow symlinks" ) IF_FEATURE_TAR_NOPRESERVE_TIME( "\n	m	Don't restore mtime" ) IF_FEATURE_TAR_FROM( IF_FEATURE_TAR_LONG_OPTIONS( "\n	exclude	File to exclude" ) "\n	X	File with names to exclude" "\n	T	File with names to include" ) if True


#define IF_GETTY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_GETTY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_GETTY)


#define IF_DIFF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_DIFF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_DIFF)


#define setuidgid_trivial_usage if True 
	expansions 
		 => "USER PROG ARGS" if True


#define IF_NOT_SCRIPTREPLAY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SCRIPTREPLAY)
		(__VA_ARGS__...) if def(CONFIG_SCRIPTREPLAY)


#define ENABLE_FEATURE_IFCONFIG_STATUS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFCONFIG_STATUS)
		 => 1 if def(CONFIG_FEATURE_IFCONFIG_STATUS)


#define chrt_full_usage if True 
	expansions 
		 => "\n\n" "Change scheduling priority and class for a process\n" "\nOptions:" "\n	-p	Operate on PID" "\n	-r	Set SCHED_RR class" "\n	-f	Set SCHED_FIFO class" "\n	-o	Set SCHED_OTHER class" "\n	-m	Show min/max priorities" if True


#define chmod_example_usage if True 
	expansions 
		 => "$ ls -l /tmp/foo\n" "-rw-rw-r--    1 root     root            0 Apr 12 18:25 /tmp/foo\n" "$ chmod u+x /tmp/foo\n" "$ ls -l /tmp/foo\n" "-rwxrw-r--    1 root     root            0 Apr 12 18:25 /tmp/foo*\n" "$ chmod 444 /tmp/foo\n" "$ ls -l /tmp/foo\n" "-r--r--r--    1 root     root            0 Apr 12 18:25 /tmp/foo\n" if True


#define iplink_full_usage if True 
	expansions 
		 => "\n\n" "iplink set DEVICE { up | down | arp | multicast { on | off } |\n" "			dynamic { on | off } |\n" "			mtu MTU }\n" "iplink show [DEVICE]" if True


#define __USE_LARGEFILE if False 
	expansions 



#define WSTOPSIG if True 
	expansions 
		(status) => __WSTOPSIG (__WAIT_INT (status)) if True


#define IF_FEATURE_FTP_WRITE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FTP_WRITE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FTP_WRITE)


#define IF_HUSH_RANDOM_SUPPORT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HUSH_RANDOM_SUPPORT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HUSH_RANDOM_SUPPORT)


#define ENABLE_FEATURE_IP_LINK if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_LINK)
		 => 1 if def(CONFIG_FEATURE_IP_LINK)


#define __DBL_MIN_EXP__ if True 
	expansions 
		 => (-1021) if True


#define IF_FEATURE_LESS_FLAGS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LESS_FLAGS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LESS_FLAGS)


#define ENABLE_STTY if True 
	expansions 
		 => 0 if !def(CONFIG_STTY)
		 => 1 if def(CONFIG_STTY)


#define devmem_trivial_usage if True 
	expansions 
		 => "ADDRESS [WIDTH [VALUE]]" if True


#define ENABLE_MT if True 
	expansions 
		 => 0 if !def(CONFIG_MT)
		 => 1 if def(CONFIG_MT)


#define ping_example_usage if True 
	expansions 
		 => "$ ping localhost\n" "PING slag (127.0.0.1): 56 data bytes\n" "64 bytes from 127.0.0.1: icmp_seq=0 ttl=255 time=20.1 ms\n" "\n" "--- debian ping statistics ---\n" "1 packets transmitted, 1 packets received, 0% packet loss\n" "round-trip min/avg/max = 20.1/20.1/20.1 ms\n" if True


#define __USECONDS_T_TYPE if True 
	expansions 
		 => __U32_TYPE if True


#define IF_SHA1SUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SHA1SUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SHA1SUM)


#define ENABLE_FEATURE_IFUPDOWN_EXTERNAL_DHCP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)


#define IF_HWCLOCK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_HWCLOCK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_HWCLOCK)


#define _SYS_TYPES_H if True 
	expansions 
		 => 1 if True


#define ENABLE_FEATURE_PS_UNUSUAL_SYSTEMS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
		 => 1 if def(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)


#define chvt_trivial_usage if True 
	expansions 
		 => "N" if True


#define IF_FEATURE_GREP_EGREP_ALIAS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_GREP_EGREP_ALIAS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_GREP_EGREP_ALIAS)


#define ENABLE_FEATURE_CP_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_CP_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_CP_LONG_OPTIONS)


#define sha1sum_trivial_usage if True 
	expansions 
		 => "[FILE]..." IF_FEATURE_MD5_SHA1_SUM_CHECK("\n   or: sha1sum -c [-sw] [FILE]") if True


#define IF_NOT_VERBOSE_RESOLUTION_ERRORS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_VERBOSE_RESOLUTION_ERRORS)
		(__VA_ARGS__...) if def(CONFIG_VERBOSE_RESOLUTION_ERRORS)


#define runlevel_example_usage if True 
	expansions 
		 => "$ runlevel /var/run/utmp\n" "N 2" if True


#define IF_NOT_NTPD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NTPD)
		(__VA_ARGS__...) if def(CONFIG_NTPD)


#define __WSTOPSIG if True 
	expansions 
		(status) => __WEXITSTATUS(status) if True


#define IF_FOLD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FOLD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FOLD)


#define ENABLE_RFKILL if True 
	expansions 
		 => 0 if !def(CONFIG_RFKILL)
		 => 1 if def(CONFIG_RFKILL)


#define IF_FEATURE_TAR_SELINUX if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TAR_SELINUX)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TAR_SELINUX)


#define IF_NOT_FEATURE_HTTPD_SETUID if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_SETUID)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_SETUID)


#define _T_SIZE if True 
	expansions 
		 if True


#define ENABLE_FEATURE_MODPROBE_BLACKLIST if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MODPROBE_BLACKLIST)
		 => 1 if def(CONFIG_FEATURE_MODPROBE_BLACKLIST)


#define unexpand_trivial_usage if True 
	expansions 
		 => "[-fa][-t N] [FILE]..." if True


#define IF_NOT_LPD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LPD)
		(__VA_ARGS__...) if def(CONFIG_LPD)


#define _BSD_WCHAR_T_ if False 
	expansions 
		 if False


#define IF_FEATURE_SYSLOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SYSLOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SYSLOG)


#define IF_NOT_NBDCLIENT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NBDCLIENT)
		(__VA_ARGS__...) if def(CONFIG_NBDCLIENT)


#define IF_NOT_FEATURE_MKDIR_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)


#define IF_FEATURE_HTTPD_PROXY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_PROXY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_PROXY)


#define ENABLE_FEATURE_HUMAN_READABLE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HUMAN_READABLE)
		 => 1 if def(CONFIG_FEATURE_HUMAN_READABLE)


#define lsusb_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define IF_NOT_SU if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SU)
		(__VA_ARGS__...) if def(CONFIG_SU)


#define ENABLE_FEATURE_IPCALC_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IPCALC_FANCY)
		 => 1 if def(CONFIG_FEATURE_IPCALC_FANCY)


#define __time_t_defined if True 
	expansions 
		 => 1 if True


#define IF_NOT_UUENCODE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UUENCODE)
		(__VA_ARGS__...) if def(CONFIG_UUENCODE)


#define IF_WATCHDOG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_WATCHDOG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_WATCHDOG)


#define IF_TOUCH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TOUCH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TOUCH)


#define chpasswd_full_usage if True 
	expansions 
		 => "\n\n" "Read user:password from stdin and update /etc/passwd\n" "\nOptions:" IF_LONG_OPTS( "\n	-e,--encrypted	Supplied passwords are in encrypted form" "\n	-m,--md5	Use MD5 encryption instead of DES" ) IF_NOT_LONG_OPTS( "\n	-e	Supplied passwords are in encrypted form" "\n	-m	Use MD5 encryption instead of DES" ) if True


#define __linux if True 
	expansions 
		 => 1 if True


#define catv_trivial_usage if True 
	expansions 
		 => "[-etv] [FILE]..." if True


#define IF_BEEP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BEEP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BEEP)


#define getopt_example_usage if True 
	expansions 
		 => "$ cat getopt.test\n" "#!/bin/sh\n" "GETOPT=`getopt -o ab:c:: --long a-long,b-long:,c-long:: \\\n" "       -n 'example.busybox' -- \"$@\"`\n" "if [ $? != 0 ]; then exit 1; fi\n" "eval set -- \"$GETOPT\"\n" "while true; do\n" " case $1 in\n" "   -a|--a-long) echo \"Option a\"; shift;;\n" "   -b|--b-long) echo \"Option b, argument '$2'\"; shift 2;;\n" "   -c|--c-long)\n" "     case \"$2\" in\n" "       \"\") echo \"Option c, no argument\"; shift 2;;\n" "       *)  echo \"Option c, argument '$2'\"; shift 2;;\n" "     esac;;\n" "   --) shift; break;;\n" "   *) echo \"Internal error!\"; exit 1;;\n" " esac\n" "done\n" if True


#define IF_NOT_BASE64 if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BASE64)
		(__VA_ARGS__...) if def(CONFIG_BASE64)


#define resize_trivial_usage if True 
	expansions 
		 => "" if True


#define printf_example_usage if True 
	expansions 
		 => "$ printf \"Val=%d\\n\" 5\n" "Val=5\n" if True


#define ENABLE_CP if True 
	expansions 
		 => 0 if !def(CONFIG_CP)
		 => 1 if def(CONFIG_CP)


#define ENABLE_FEATURE_EDITING_VI if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING_VI)
		 => 1 if def(CONFIG_FEATURE_EDITING_VI)


#define ENABLE_FEATURE_SWAPON_PRI if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SWAPON_PRI)
		 => 1 if def(CONFIG_FEATURE_SWAPON_PRI)


#define ps_example_usage if True 
	expansions 
		 => "$ ps\n" "  PID  Uid      Gid State Command\n" "    1 root     root     S init\n" "    2 root     root     S [kflushd]\n" "    3 root     root     S [kupdate]\n" "    4 root     root     S [kpiod]\n" "    5 root     root     S [kswapd]\n" "  742 andersen andersen S [bash]\n" "  743 andersen andersen S -bash\n" "  745 root     root     S [getty]\n" " 2990 andersen andersen R ps\n" if True


#define IF_NOT_FEATURE_SETFILES_CHECK_OPTION if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SETFILES_CHECK_OPTION)


#define _BITS_BYTESWAP_H if True 
	expansions 
		 => 1 if True


#define IF_NOT_SELINUXENABLED if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SELINUXENABLED)
		(__VA_ARGS__...) if def(CONFIG_SELINUXENABLED)


#define ENABLE_CLEAR if True 
	expansions 
		 => 0 if !def(CONFIG_CLEAR)
		 => 1 if def(CONFIG_CLEAR)


#define IF_FEATURE_XARGS_SUPPORT_TERMOPT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)


#define IF_FEATURE_2_4_MODULES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_2_4_MODULES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_2_4_MODULES)


#define ENABLE_FEATURE_LESS_LINENUMS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_LINENUMS)
		 => 1 if def(CONFIG_FEATURE_LESS_LINENUMS)


#define renice_full_usage if True 
	expansions 
		 => "\n\n" "Change scheduling priority for a running process\n" "\nOptions:" "\n	-n	Adjust current nice value (smaller is faster)" "\n	-p	Process id(s) (default)" "\n	-g	Process group id(s)" "\n	-u	Process user name(s) and/or id(s)" if True


#define ENABLE_FEATURE_HTTPD_AUTH_MD5 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_AUTH_MD5)
		 => 1 if def(CONFIG_FEATURE_HTTPD_AUTH_MD5)


#define ENABLE_FEATURE_EDITING_FANCY_PROMPT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
		 => 1 if def(CONFIG_FEATURE_EDITING_FANCY_PROMPT)


#define ENABLE_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
		 => 1 if def(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)


#define IF_NOT_FEATURE_SH_IS_HUSH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SH_IS_HUSH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SH_IS_HUSH)


#define IF_NOT_FEATURE_PIDOF_OMIT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PIDOF_OMIT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PIDOF_OMIT)


#define ENABLE_FEATURE_IFUPDOWN_IP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IFUPDOWN_IP)
		 => 1 if def(CONFIG_FEATURE_IFUPDOWN_IP)


#define setconsole_trivial_usage if True 
	expansions 
		 => "[-r" IF_FEATURE_SETCONSOLE_LONG_OPTIONS("|--reset") "] [DEVICE]" if True


#define ENABLE_FEATURE_HTTPD_SETUID if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_SETUID)
		 => 1 if def(CONFIG_FEATURE_HTTPD_SETUID)


#define IF_NOT_FEATURE_IFUPDOWN_IP_BUILTIN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)


#define IF_PIPE_PROGRESS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PIPE_PROGRESS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PIPE_PROGRESS)


#define IF_NOT_FEATURE_INSTALLER if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_INSTALLER)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_INSTALLER)


#define ENABLE_FEATURE_HAVE_RPC if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HAVE_RPC)
		 => 1 if def(CONFIG_FEATURE_HAVE_RPC)


#define IF_NOT_ASH_JOB_CONTROL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ASH_JOB_CONTROL)
		(__VA_ARGS__...) if def(CONFIG_ASH_JOB_CONTROL)


#define ENABLE_FTPGET if True 
	expansions 
		 => 0 if !def(CONFIG_FTPGET)
		 => 1 if def(CONFIG_FTPGET)


#define IF_NOT_LONG_OPTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_LONG_OPTS)
		(__VA_ARGS__...) if def(CONFIG_LONG_OPTS)


#define _G_off64_t if True 
	expansions 
		 => __off64_t if True


#define IF_NOT_SETLOGCONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETLOGCONS)
		(__VA_ARGS__...) if def(CONFIG_SETLOGCONS)


#define ENABLE_UNICODE_SUPPORT if True 
	expansions 
		 => 0 if !def(CONFIG_UNICODE_SUPPORT)
		 => 1 if def(CONFIG_UNICODE_SUPPORT)


#define ENABLE_FEATURE_BASH_IS_HUSH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BASH_IS_HUSH)
		 => 1 if def(CONFIG_FEATURE_BASH_IS_HUSH)


#define _BITS_TYPESIZES_H if True 
	expansions 
		 => 1 if True


#define IF_NOT_RAIDAUTORUN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RAIDAUTORUN)
		(__VA_ARGS__...) if def(CONFIG_RAIDAUTORUN)


#define IF_FEATURE_EDITING_MAX_LEN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_EDITING_MAX_LEN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_EDITING_MAX_LEN)


#define IF_FEATURE_FIND_PRINT0 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_PRINT0)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_PRINT0)


#define IF_MAKEDEVS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MAKEDEVS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MAKEDEVS)


#define IF_FEATURE_MD5_SHA1_SUM_CHECK if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)


#define _POSIX_SOURCE if True 
	expansions 
		 => 1 if True


#define logread_trivial_usage if True 
	expansions 
		 => "[-f]" if True


#define IF_NOT_MKDIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MKDIR)
		(__VA_ARGS__...) if def(CONFIG_MKDIR)


#define IF_NOT_IFUPDOWN_IFSTATE_PATH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IFUPDOWN_IFSTATE_PATH)
		(__VA_ARGS__...) if def(CONFIG_IFUPDOWN_IFSTATE_PATH)


#define ENABLE_DEVFSD if True 
	expansions 
		 => 0 if !def(CONFIG_DEVFSD)
		 => 1 if def(CONFIG_DEVFSD)


#define IF_BB_SYSCTL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_BB_SYSCTL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_BB_SYSCTL)


#define taskset_trivial_usage if True 
	expansions 
		 => "[-p] [MASK] [PID | PROG ARGS]" if True


#define IF_NOT_FIND if True 
	expansions 
		(__VA_ARGS__...) if True


#define ENABLE_FEATURE_FANCY_ECHO if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FANCY_ECHO)
		 => 1 if def(CONFIG_FEATURE_FANCY_ECHO)


#define IF_FEATURE_TELNET_TTYPE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_TELNET_TTYPE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_TELNET_TTYPE)


#define ENABLE_FEATURE_INSTALLER if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSTALLER)
		 => 1 if def(CONFIG_FEATURE_INSTALLER)


#define _G_ssize_t if True 
	expansions 
		 => __ssize_t if True


#define renice_trivial_usage if True 
	expansions 
		 => "{{-n INCREMENT} | PRIORITY} [[-p | -g | -u] ID...]" if True


#define top_trivial_usage if True 
	expansions 
		 => "[-b] [-nCOUNT] [-dSECONDS]" IF_FEATURE_TOPMEM(" [-m]") if True


#define IF_FEATURE_IFCONFIG_BROADCAST_PLUS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)


#define ENABLE_FEATURE_SETFONT_TEXTUAL_MAP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
		 => 1 if def(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)


#define __DEC128_MIN_EXP__ if True 
	expansions 
		 => (-6142) if True


#define _GCC_SIZE_T if True 
	expansions 
		 if True


#define gunzip_full_usage if True 
	expansions 
		 => "\n\n" "Decompress FILEs (or stdin)\n" "\nOptions:" "\n	-c	Write to stdout" "\n	-f	Force" "\n	-t	Test file integrity" if True


#define ENABLE_XZ if True 
	expansions 
		 => 0 if !def(CONFIG_XZ)
		 => 1 if def(CONFIG_XZ)


#define reset_trivial_usage if True 
	expansions 
		 => "" if True


#define ENABLE_VCONFIG if True 
	expansions 
		 => 0 if !def(CONFIG_VCONFIG)
		 => 1 if def(CONFIG_VCONFIG)


#define IF_NOT_HUSH_MODE_X if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_HUSH_MODE_X)
		(__VA_ARGS__...) if def(CONFIG_HUSH_MODE_X)


#define chattr_trivial_usage if True 
	expansions 
		 => "[-R] [-+=AacDdijsStTu] [-v VERSION] [FILE]..." if True


#define ENABLE_FTPD if True 
	expansions 
		 => 0 if !def(CONFIG_FTPD)
		 => 1 if def(CONFIG_FTPD)


#define IF_NOT_MDEV if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MDEV)
		(__VA_ARGS__...) if def(CONFIG_MDEV)


#define ENABLE_FEATURE_LESS_WINCH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LESS_WINCH)
		 => 1 if def(CONFIG_FEATURE_LESS_WINCH)


#define volname_trivial_usage if True 
	expansions 
		 => "[DEVICE]" if True


#define ENABLE_FEATURE_COPYBUF_KB if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_COPYBUF_KB)
		 => 1 if def(CONFIG_FEATURE_COPYBUF_KB)


#define IF_LOGIN_SCRIPTS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_LOGIN_SCRIPTS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_LOGIN_SCRIPTS)


#define ENABLE_FEATURE_INSMOD_LOAD_MAP_FULL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
		 => 1 if def(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)


#define IF_NOT_ADDGROUP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_ADDGROUP)
		(__VA_ARGS__...) if def(CONFIG_ADDGROUP)


#define install_full_usage if True 
	expansions 
		 => "\n\n" "Copy files and set attributes\n" "\nOptions:" "\n	-c	Just copy (default)" "\n	-d	Create directories" "\n	-D	Create leading target directories" "\n	-s	Strip symbol table" "\n	-p	Preserve date" "\n	-o USER	Set ownership" "\n	-g GRP	Set group ownership" "\n	-m MODE	Set permissions" IF_SELINUX( "\n	-Z	Set security context" ) if True


#define IF_CONSPY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CONSPY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CONSPY)


#define IF_NOT_CROND if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CROND)
		(__VA_ARGS__...) if def(CONFIG_CROND)


#define ENABLE_FEATURE_MINIX2 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MINIX2)
		 => 1 if def(CONFIG_FEATURE_MINIX2)


#define IF_NOT_FEATURE_DF_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_DF_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_DF_FANCY)


#define __DEC_EVAL_METHOD__ if True 
	expansions 
		 => 2 if True


#define ftpd_full_usage if True 
	expansions 
		 => "\n\n" "Anonymous FTP server\n" "\n" "ftpd should be used as an inetd service.\n" "ftpd's line for inetd.conf:\n" "	21 stream tcp nowait root ftpd ftpd /files/to/serve\n" "It also can be ran from tcpsvd:\n" "	tcpsvd -vE 0.0.0.0 21 ftpd /files/to/serve\n" "\nOptions:" "\n	-w	Allow upload" "\n	-v	Log to stderr" "\n	-S	Log to syslog" "\n	-t,-T	Idle and absolute timeouts" "\n	DIR	Change root to this directory" if True


#define IF_NOT_FEATURE_MOUNT_FAKE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_FAKE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_FAKE)


#define ENABLE_LS if True 
	expansions 
		 => 0 if !def(CONFIG_LS)
		 => 1 if def(CONFIG_LS)


#define IF_NOT_FEATURE_ETC_NETWORKS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_ETC_NETWORKS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_ETC_NETWORKS)


#define freeramdisk_full_usage if True 
	expansions 
		 => "\n\n" "Free all memory used by the specified ramdisk" if True


#define IF_NOT_FEATURE_MOUNT_CIFS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_CIFS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_CIFS)


#define IF_NOT_YES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_YES)
		(__VA_ARGS__...) if def(CONFIG_YES)


#define hd_full_usage if True 
	expansions 
		 => "\n\n" "hd is an alias for hexdump -C" if True


#define ENABLE_FEATURE_MOUNT_LABEL if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_MOUNT_LABEL)
		 => 1 if def(CONFIG_FEATURE_MOUNT_LABEL)


#define traceroute6_trivial_usage if True 
	expansions 
		 => "[-dnrv] [-m MAXTTL] [-p PORT] [-q PROBES]\n" "	[-s SRC_IP] [-t TOS] [-w WAIT_SEC] [-i IFACE]\n" "	HOST [BYTES]" if True


#define IF_FEATURE_CROND_DIR if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CROND_DIR)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CROND_DIR)


#define ENABLE_VOLNAME if True 
	expansions 
		 => 0 if !def(CONFIG_VOLNAME)
		 => 1 if def(CONFIG_VOLNAME)


#define IF_NOT_PKILL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PKILL)
		(__VA_ARGS__...) if def(CONFIG_PKILL)


#define alloca if True 
	expansions 
		(size) => __builtin_alloca (size) if True


#define __need_timespec if False 
	expansions 
		 if False


#define ENABLE_SYNC if True 
	expansions 
		 => 0 if !def(CONFIG_SYNC)
		 => 1 if def(CONFIG_SYNC)


#define IF_FEATURE_HTTPD_ERROR_PAGES if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_ERROR_PAGES)


#define microcom_full_usage if True 
	expansions 
		 => "\n\n" "Copy bytes for stdin to TTY and from TTY to stdout\n" "\nOptions:" "\n	-d	Wait up to DELAY ms for TTY output before sending every" "\n		next byte to it" "\n	-t	Exit if both stdin and TTY are silent for TIMEOUT ms" "\n	-s	Set serial line to SPEED" "\n	-X	Disable special meaning of NUL and Ctrl-X from stdin" if True


#define IF_NOT_FEATURE_IPCALC_FANCY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_IPCALC_FANCY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_IPCALC_FANCY)


#define IF_FEATURE_SETFONT_TEXTUAL_MAP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)


#define ENABLE_FEATURE_HTTPD_BASIC_AUTH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
		 => 1 if def(CONFIG_FEATURE_HTTPD_BASIC_AUTH)


#define IF_RTCWAKE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_RTCWAKE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_RTCWAKE)


#define IF_NOT_FEATURE_SETFONT_TEXTUAL_MAP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)


#define ping6_trivial_usage if True 
	expansions 
		 => "[OPTIONS] HOST" if def(CONFIG_FEATURE_FANCY_PING)
		 => "host" if !def(CONFIG_FEATURE_FANCY_PING)


#define __FLT_EPSILON__ if True 
	expansions 
		 => 1.19209290e-7F if True


#define wc_example_usage if True 
	expansions 
		 => "$ wc /etc/passwd\n" "     31      46    1365 /etc/passwd\n" if True


#define ENABLE_FEATURE_VOLUMEID_SYSV if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_SYSV)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_SYSV)


#define ENABLE_FEATURE_IP_RULE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_IP_RULE)
		 => 1 if def(CONFIG_FEATURE_IP_RULE)


#define ENABLE_CUT if True 
	expansions 
		 => 0 if !def(CONFIG_CUT)
		 => 1 if def(CONFIG_CUT)


#define ENABLE_FEATURE_SORT_BIG if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SORT_BIG)
		 => 1 if def(CONFIG_FEATURE_SORT_BIG)


#define IF_NOT_SCRIPT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SCRIPT)
		(__VA_ARGS__...) if def(CONFIG_SCRIPT)


#define lsattr_full_usage if True 
	expansions 
		 => "\n\n" "List file attributes on an ext2 fs\n" "\nOptions:" "\n	-R	Recurse" "\n	-a	Don't hide entries starting with ." "\n	-d	List directory entries instead of contents" "\n	-l	List long flag names" "\n	-v	List the file's version/generation number" if True


#define smemcap_trivial_usage if True 
	expansions 
		 => ">SMEMDATA.TAR" if True


#define ENABLE_FEATURE_RUN_PARTS_FANCY if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_RUN_PARTS_FANCY)
		 => 1 if def(CONFIG_FEATURE_RUN_PARTS_FANCY)


#define wall_full_usage if True 
	expansions 
		 => "\n\n" "Write content of FILE or stdin to all logged-in users" if True


#define ENABLE_REALPATH if True 
	expansions 
		 => 0 if !def(CONFIG_REALPATH)
		 => 1 if def(CONFIG_REALPATH)


#define IF_NOT_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)


#define ENABLE_FEATURE_GREP_FGREP_ALIAS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_GREP_FGREP_ALIAS)
		 => 1 if def(CONFIG_FEATURE_GREP_FGREP_ALIAS)


#define __DEC128_MANT_DIG__ if True 
	expansions 
		 => 34 if True


#define whoami_trivial_usage if True 
	expansions 
		 => "" if True


#define swapoff_full_usage if True 
	expansions 
		 => "\n\n" "Stop swapping on DEVICE\n" "\nOptions:" "\n	-a	Stop swapping on all swap devices" if True


#define IF_NOT_WATCH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_WATCH)
		(__VA_ARGS__...) if def(CONFIG_WATCH)


#define ENABLE_NAMEIF if True 
	expansions 
		 => 0 if !def(CONFIG_NAMEIF)
		 => 1 if def(CONFIG_NAMEIF)


#define IF_TAIL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TAIL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TAIL)


#define ENABLE_FEATURE_SEAMLESS_BZ2 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SEAMLESS_BZ2)
		 => 1 if def(CONFIG_FEATURE_SEAMLESS_BZ2)


#define chcon_trivial_usage if True 
	expansions 
		 => "[OPTIONS] CONTEXT FILE..." "\n	chcon [OPTIONS] [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE..." IF_FEATURE_CHCON_LONG_OPTIONS( "\n	chcon [OPTIONS] --reference=RFILE FILE..." ) if True


#define ENABLE_FEATURE_SHARED_BUSYBOX if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_SHARED_BUSYBOX)
		 => 1 if def(CONFIG_FEATURE_SHARED_BUSYBOX)


#define tunctl_example_usage if True 
	expansions 
		 => "# tunctl\n" "# tunctl -d tun0\n" if True


#define _IO_funlockfile if True 
	expansions 
		(_fp) if True


#define ENABLE_GETSEBOOL if True 
	expansions 
		 => 0 if !def(CONFIG_GETSEBOOL)
		 => 1 if def(CONFIG_GETSEBOOL)


#define ENABLE_FEATURE_TAB_COMPLETION if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TAB_COMPLETION)
		 => 1 if def(CONFIG_FEATURE_TAB_COMPLETION)


#define __BEGIN_DECLS if True 
	expansions 
		 if True


#define IF_NOT_UDHCPC_SLACK_FOR_BUGGY_SERVERS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
		(__VA_ARGS__...) if def(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)


#define IF_CHPST if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_CHPST)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_CHPST)


#define ENABLE_FLOCK if True 
	expansions 
		 => 0 if !def(CONFIG_FLOCK)
		 => 1 if def(CONFIG_FLOCK)


#define ENABLE_LPD if True 
	expansions 
		 => 0 if !def(CONFIG_LPD)
		 => 1 if def(CONFIG_LPD)


#define kbd_mode_full_usage if True 
	expansions 
		 => "\n\n" "Report or set the keyboard mode\n" "\nOptions:" "\n	-a	Default (ASCII)" "\n	-k	Medium-raw (keyboard)" "\n	-s	Raw (scancode)" "\n	-u	Unicode (utf-8)" "\n	-C TTY	Affect TTY instead of /dev/tty" if True


#define _IO_BE if True 
	expansions 
		(expr, res) => __builtin_expect ((expr), res) if True


#define IF_PKILL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PKILL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PKILL)


#define IF_IFUPDOWN_IFSTATE_PATH if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IFUPDOWN_IFSTATE_PATH)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IFUPDOWN_IFSTATE_PATH)


#define IF_NOT_TFTP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TFTP)
		(__VA_ARGS__...) if def(CONFIG_TFTP)


#define ENABLE_FEATURE_VOLUMEID_OCFS2 if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VOLUMEID_OCFS2)
		 => 1 if def(CONFIG_FEATURE_VOLUMEID_OCFS2)


#define IF_NOT_SHOW_USAGE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SHOW_USAGE)
		(__VA_ARGS__...) if def(CONFIG_SHOW_USAGE)


#define _IO_fpos64_t if True 
	expansions 
		 => _G_fpos64_t if True


#define __need_timeval if False 
	expansions 
		 if False


#define IF_PRINTF if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_PRINTF)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_PRINTF)


#define IF_NOT_FSCK_MINIX if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FSCK_MINIX)
		(__VA_ARGS__...) if def(CONFIG_FSCK_MINIX)


#define IF_FEATURE_CHAT_VAR_ABORT_LEN if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)


#define IF_NOT_SHA512SUM if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SHA512SUM)
		(__VA_ARGS__...) if def(CONFIG_SHA512SUM)


#define IF_NOT_CHATTR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_CHATTR)
		(__VA_ARGS__...) if def(CONFIG_CHATTR)


#define id_full_usage if True 
	expansions 
		 => "\n\n" "Print information about USER or the current user\n" "\nOptions:" IF_SELINUX( "\n	-Z	Security context" ) "\n	-u	User ID" "\n	-g	Group ID" "\n	-G	Supplementary group IDs" "\n	-n	Print names instead of numbers" "\n	-r	Print real ID instead of effective ID" if True


#define IF_NOT_RENICE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_RENICE)
		(__VA_ARGS__...) if def(CONFIG_RENICE)


#define ENABLE_FEATURE_FDISK_BLKSIZE if True 
	expansions 
		 => 0 if True


#define rmmod_example_usage if True 
	expansions 
		 => "$ rmmod tulip\n" if True


#define ENABLE_IFPLUGD if True 
	expansions 
		 => 0 if !def(CONFIG_IFPLUGD)
		 => 1 if def(CONFIG_IFPLUGD)


#define IF_SYSLOGD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SYSLOGD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SYSLOGD)


#define IF_UDHCPD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_UDHCPD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_UDHCPD)


#define IF_NOT_DEPMOD if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_DEPMOD)
		(__VA_ARGS__...) if def(CONFIG_DEPMOD)


#define hexdump_trivial_usage if True 
	expansions 
		 => "[-bcCdefnosvx" IF_FEATURE_HEXDUMP_REVERSE("R") "] [FILE]..." if True


#define ENABLE_LSUSB if True 
	expansions 
		 => 0 if !def(CONFIG_LSUSB)
		 => 1 if def(CONFIG_LSUSB)


#define IF_NOT_IOSTAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_IOSTAT)
		(__VA_ARGS__...) if def(CONFIG_IOSTAT)


#define IF_NOT_SETCONSOLE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SETCONSOLE)
		(__VA_ARGS__...) if def(CONFIG_SETCONSOLE)


#define cryptpw_full_usage if True 
	expansions 
		 => "\n\n" "Crypt the PASSWORD using crypt(3)\n" "\nOptions:" IF_LONG_OPTS( "\n	-P,--password-fd=N	Read password from fd N" "\n	-m,--method=TYPE	Encryption method TYPE" "\n	-S,--salt=SALT" ) IF_NOT_LONG_OPTS( "\n	-P N	Read password from fd N" "\n	-m TYPE	Encryption method TYPE" "\n	-S SALT" ) if True


#define IF_NOT_GZIP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_GZIP)
		(__VA_ARGS__...) if def(CONFIG_GZIP)


#define IF_TUNCTL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_TUNCTL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_TUNCTL)


#define IF_NOT_PATCH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_PATCH)
		(__VA_ARGS__...) if def(CONFIG_PATCH)


#define IF_NOT_FEATURE_SEAMLESS_XZ if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_SEAMLESS_XZ)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_SEAMLESS_XZ)


#define __SLONGWORD_TYPE if True 
	expansions 
		 => long int if True


#define IF_NOHUP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_NOHUP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_NOHUP)


#define ENABLE_FEATURE_RESIZE_PRINT if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_RESIZE_PRINT)
		 => 1 if def(CONFIG_FEATURE_RESIZE_PRINT)


#define IF_NOT_FEATURE_UDHCP_PORT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_UDHCP_PORT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_UDHCP_PORT)


#define _IO_pos_t if True 
	expansions 
		 => _G_fpos_t if True


#define IF_IPTUNNEL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPTUNNEL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPTUNNEL)


#define IF_NOT_FEATURE_TOP_CPU_GLOBAL_PERCENTS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)


#define _GCC_WCHAR_T if True 
	expansions 
		 if True


#define ENABLE_READLINK if True 
	expansions 
		 => 0 if !def(CONFIG_READLINK)
		 => 1 if def(CONFIG_READLINK)


#define IF_NOT_FEATURE_VI_READONLY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VI_READONLY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VI_READONLY)


#define taskset_example_usage if True 
	expansions 
		 => "$ taskset 0x7 ./dgemm_test&\n" "$ taskset -p 0x1 $!\n" "pid 4790's current affinity mask: 7\n" "pid 4790's new affinity mask: 1\n" "$ taskset 0x7 /bin/sh -c './taskset -p 0x1 $$'\n" "pid 6671's current affinity mask: 1\n" "pid 6671's new affinity mask: 1\n" "$ taskset -p 1\n" "pid 1's current affinity mask: 3\n" if True


#define ENABLE_PSCAN if True 
	expansions 
		 => 0 if !def(CONFIG_PSCAN)
		 => 1 if def(CONFIG_PSCAN)


#define script_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-a	Append output" "\n	-c PROG	Run PROG, not shell" "\n	-f	Flush output after each write" "\n	-q	Quiet" IF_SCRIPTREPLAY( "\n	-t	Send timing to stderr" ) if True


#define ENABLE_FEATURE_TOP_CPU_GLOBAL_PERCENTS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
		 => 1 if def(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)


#define IF_FEATURE_GREP_CONTEXT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_GREP_CONTEXT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_GREP_CONTEXT)


#define ENABLE_FEATURE_FAST_TOP if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_FAST_TOP)
		 => 1 if def(CONFIG_FEATURE_FAST_TOP)


#define chroot_trivial_usage if True 
	expansions 
		 => "NEWROOT [PROG ARGS]" if True


#define __DBL_MAX_EXP__ if True 
	expansions 
		 => 1024 if True


#define ENABLE_USE_BB_SHADOW if True 
	expansions 
		 => 0 if !def(CONFIG_USE_BB_SHADOW)
		 => 1 if def(CONFIG_USE_BB_SHADOW)


#define IF_NOT_FLASH_ERASEALL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FLASH_ERASEALL)
		(__VA_ARGS__...) if def(CONFIG_FLASH_ERASEALL)


#define IF_NOT_AWK if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_AWK)
		(__VA_ARGS__...) if def(CONFIG_AWK)


#define __SIZEOF_SIZE_T__ if True 
	expansions 
		 => 8 if True


#define lpq_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-P	lp service to connect to (else uses $PRINTER)" "\n	-d	Delete jobs" "\n	-f	Force any waiting job to be printed" "\n	-s	Short display" if True


#define IF_FEATURE_DPKG_DEB_EXTRACT_ONLY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)


#define _IOS_TRUNC if True 
	expansions 
		 => 16 if True


#define IF_NOT_FEATURE_CHCON_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHCON_LONG_OPTIONS)


#define __SIZEOF_LONG_LONG__ if True 
	expansions 
		 => 8 if True


#define ENABLE_CHATTR if True 
	expansions 
		 => 0 if !def(CONFIG_CHATTR)
		 => 1 if def(CONFIG_CHATTR)


#define _T_SIZE_ if True 
	expansions 
		 if True


#define _G_HAVE_SYS_CDEFS if True 
	expansions 
		 => 1 if True


#define _G_HAVE_PRINTF_FP if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_VOLUMEID_FAT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_VOLUMEID_FAT)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_VOLUMEID_FAT)


#define IF_NOT_NO_DEBUG_LIB if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_NO_DEBUG_LIB)
		(__VA_ARGS__...) if def(CONFIG_NO_DEBUG_LIB)


#define ENABLE_SYSLOGD if True 
	expansions 
		 => 0 if !def(CONFIG_SYSLOGD)
		 => 1 if def(CONFIG_SYSLOGD)


#define ENABLE_VLOCK if True 
	expansions 
		 => 0 if !def(CONFIG_VLOCK)
		 => 1 if def(CONFIG_VLOCK)


#define IF_IPRULE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_IPRULE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_IPRULE)


#define ENABLE_FAKEIDENTD if True 
	expansions 
		 => 0 if !def(CONFIG_FAKEIDENTD)
		 => 1 if def(CONFIG_FAKEIDENTD)


#define pscan_full_usage if True 
	expansions 
		 => "\n\n" "Scan a host, print all open ports\n" "\nOptions:" "\n	-c	Show closed ports too" "\n	-b	Show blocked ports too" "\n	-p	Scan from this port (default 1)" "\n	-P	Scan up to this port (default 1024)" "\n	-t	Timeout (default 5000 ms)" "\n	-T	Minimum rtt (default 5 ms, increase for congested hosts)" if True


#define ipcrm_full_usage if True 
	expansions 
		 => "\n\n" "Upper-case options MQS remove an object by shmkey value.\n" "Lower-case options remove an object by shmid value.\n" "\nOptions:" "\n	-mM	Remove memory segment after last detach" "\n	-qQ	Remove message queue" "\n	-sS	Remove semaphore" if True


#define ENABLE_FREERAMDISK if True 
	expansions 
		 => 0 if !def(CONFIG_FREERAMDISK)
		 => 1 if def(CONFIG_FREERAMDISK)


#define ENABLE_FEATURE_PASSWD_WEAK_CHECK if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
		 => 1 if def(CONFIG_FEATURE_PASSWD_WEAK_CHECK)


#define env_full_usage if True 
	expansions 
		 => "\n\n" "Print the current environment or run PROG after setting up\n" "the specified environment\n" "\nOptions:" "\n	-, -i	Start with an empty environment" "\n	-u	Remove variable from the environment" if True


#define IF_NOT_FEATURE_LESS_WINCH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_LESS_WINCH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_LESS_WINCH)


#define __k8 if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_START_STOP_DAEMON_LONG_OPTIONS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)


#define IF_NOT_FEATURE_CHAT_IMPLICIT_CR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_CHAT_IMPLICIT_CR)


#define IF_NOT_UPTIME if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_UPTIME)
		(__VA_ARGS__...) if def(CONFIG_UPTIME)


#define ENABLE_FEATURE_TFTP_GET if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_TFTP_GET)
		 => 1 if def(CONFIG_FEATURE_TFTP_GET)


#define ENABLE_DD if True 
	expansions 
		 => 0 if !def(CONFIG_DD)
		 => 1 if def(CONFIG_DD)


#define IF_NOT_FEATURE_FIND_PAREN if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FIND_PAREN)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FIND_PAREN)


#define pkill_trivial_usage if True 
	expansions 
		 => "[-l|-SIGNAL] [-fnovx] [-s SID|-P PPID|PATTERN]" if True


#define hush_trivial_usage if True 
	expansions 
		 => NOUSAGE_STR if True


#define ENABLE_FEATURE_LS_COLOR if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_LS_COLOR)
		 => 1 if def(CONFIG_FEATURE_LS_COLOR)


#define IF_NOT_FEATURE_HTTPD_BASIC_AUTH if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_BASIC_AUTH)


#define IF_MESG if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MESG)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MESG)


#define IF_FEATURE_VI_DOT_CMD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VI_DOT_CMD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VI_DOT_CMD)


#define makedev if True 
	expansions 
		(maj, min) => gnu_dev_makedev (maj, min) if True


#define minor if True 
	expansions 
		(dev) => gnu_dev_minor (dev) if True


#define ENABLE_READAHEAD if True 
	expansions 
		 => 0 if !def(CONFIG_READAHEAD)
		 => 1 if def(CONFIG_READAHEAD)


#define _G_HAVE_MREMAP if True 
	expansions 
		 => 1 if True


#define IF_NOT_FEATURE_HTTPD_PROXY if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_HTTPD_PROXY)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_HTTPD_PROXY)


#define IF_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)


#define pgrep_trivial_usage if True 
	expansions 
		 => "[-flnovx] [-s SID|-P PPID|PATTERN]" if True


#define __SIZEOF_PTHREAD_MUTEX_T if True 
	expansions 
		 => 40 if True


#define IF_KILLALL5 if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_KILLALL5)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_KILLALL5)


#define ENABLE_FEATURE_ENV_LONG_OPTIONS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_ENV_LONG_OPTIONS)
		 => 1 if def(CONFIG_FEATURE_ENV_LONG_OPTIONS)


#define IF_NOT_SV_DEFAULT_SERVICE_DIR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_SV_DEFAULT_SERVICE_DIR)
		(__VA_ARGS__...) if def(CONFIG_SV_DEFAULT_SERVICE_DIR)


#define IF_SHOWKEY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SHOWKEY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SHOWKEY)


#define ENABLE_BLKID if True 
	expansions 
		 => 0 if !def(CONFIG_BLKID)
		 => 1 if def(CONFIG_BLKID)


#define IF_NOT_FEATURE_FANCY_TAIL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_FANCY_TAIL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_FANCY_TAIL)


#define __DBL_DIG__ if True 
	expansions 
		 => 15 if True


#define ENABLE_FEATURE_VI_SETOPTS if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_VI_SETOPTS)
		 => 1 if def(CONFIG_FEATURE_VI_SETOPTS)


#define __FD_ISSET if True 
	expansions 
		(d, set) => ((__FDS_BITS (set)[__FDELT (d)] & __FDMASK (d)) != 0) if True


#define IF_FEATURE_SEAMLESS_GZ if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_SEAMLESS_GZ)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_SEAMLESS_GZ)


#define ENABLE_SEQ if True 
	expansions 
		 => 0 if !def(CONFIG_SEQ)
		 => 1 if def(CONFIG_SEQ)


#define ENABLE_FEATURE_NOLOGIN if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_NOLOGIN)
		 => 1 if def(CONFIG_FEATURE_NOLOGIN)


#define IF_NOT_FALSE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FALSE)
		(__VA_ARGS__...) if def(CONFIG_FALSE)


#define IF_FEATURE_FIND_DELETE if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_DELETE)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_DELETE)


#define IF_FEATURE_INSMOD_LOAD_MAP_FULL if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)


#define fakeidentd_full_usage if True 
	expansions 
		 => "\n\n" "Provide fake ident (auth) service\n" "\nOptions:" "\n	-f	Run in foreground" "\n	-i	Inetd mode" "\n	-w	Inetd 'wait' mode" "\n	-b ADDR	Bind to specified address" "\n	STRING	Ident answer string (default: nobody)" if True


#define IF_NOT_FEATURE_TAR_CREATE if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TAR_CREATE)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TAR_CREATE)


#define _PARAMS if True 
	expansions 
		(protos) => __P(protos) if True


#define mv_trivial_usage if True 
	expansions 
		 => "[-fin] SOURCE DEST\n" "or: mv [-fin] SOURCE... DIRECTORY" if True


#define IF_NOT_TR if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_TR)
		(__VA_ARGS__...) if def(CONFIG_TR)


#define ENABLE_INSTALL_APPLET_DONT if True 
	expansions 
		 => 0 if !def(CONFIG_INSTALL_APPLET_DONT)
		 => 1 if def(CONFIG_INSTALL_APPLET_DONT)


#define seq_trivial_usage if True 
	expansions 
		 => "[-w] [-s SEP] [FIRST [INC]] LAST" if True


#define IF_NOT_FEATURE_GREP_FGREP_ALIAS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_GREP_FGREP_ALIAS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_GREP_FGREP_ALIAS)


#define __stub_fchflags if True 
	expansions 
		 if True


#define ENABLE_FEATURE_HTTPD_USE_SENDFILE if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
		 => 1 if def(CONFIG_FEATURE_HTTPD_USE_SENDFILE)


#define ENABLE_FEATURE_BASH_IS_ASH if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BASH_IS_ASH)
		 => 1 if def(CONFIG_FEATURE_BASH_IS_ASH)


#define IF_NOT_FEATURE_EXTRA_QUIET if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_EXTRA_QUIET)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_EXTRA_QUIET)


#define IF_NOT_FEATURE_MOUNT_LABEL if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_MOUNT_LABEL)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_MOUNT_LABEL)


#define ENABLE_VI if True 
	expansions 
		 => 0 if !def(CONFIG_VI)
		 => 1 if def(CONFIG_VI)


#define ENABLE_FEATURE_BUFFERS_GO_ON_STACK if True 
	expansions 
		 => 0 if !def(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
		 => 1 if def(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)


#define deluser_trivial_usage if True 
	expansions 
		 => "USER" if True


#define IF_NOT_FEATURE_TR_CLASSES if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_TR_CLASSES)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_TR_CLASSES)


#define cmp_full_usage if True 
	expansions 
		 => "\n\n" "Compare FILE1 with FILE2 (or stdin)\n" "\nOptions:" "\n	-l	Write the byte numbers (decimal) and values (octal)" "\n		for all differing bytes" "\n	-s	Quiet" if True


#define IF_NOT_FEATURE_PS_UNUSUAL_SYSTEMS if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
		(__VA_ARGS__...) if def(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)


#define IF_ASH_BUILTIN_ECHO if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_ASH_BUILTIN_ECHO)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_ASH_BUILTIN_ECHO)


#define IF_NOT_MOUNTPOINT if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_MOUNTPOINT)
		(__VA_ARGS__...) if def(CONFIG_MOUNTPOINT)


#define ENABLE_BASE64 if True 
	expansions 
		 => 0 if !def(CONFIG_BASE64)
		 => 1 if def(CONFIG_BASE64)


#define IF_SLEEP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_SLEEP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_SLEEP)


#define tc_full_usage if True 
	expansions 
		 => "\n\n" "OBJECT: {qdisc|class|filter}\n" "CMD: {add|del|change|replace|show}\n" "\n" "qdisc [ handle QHANDLE ] [ root |"IF_FEATURE_TC_INGRESS(" ingress |")" parent CLASSID ]\n" "	[ [ QDISC_KIND ] [ help | OPTIONS ] ]\n" "	QDISC_KIND := { [p|b]fifo | tbf | prio | cbq | red | etc. }\n" "qdisc show [ dev STRING ]"IF_FEATURE_TC_INGRESS(" [ingress]")"\n" "class [ classid CLASSID ] [ root | parent CLASSID ]\n" "	[ [ QDISC_KIND ] [ help | OPTIONS ] ]\n" "class show [ dev STRING ] [ root | parent CLASSID ]\n" "filter [ pref PRIO ] [ protocol PROTO ]\n" "	[ root | classid CLASSID ] [ handle FILTERID ]\n" "	[ [ FILTER_TYPE ] [ help | OPTIONS ] ]\n" "filter show [ dev STRING ] [ root | parent CLASSID ]" if True


#define w_termsig if True 
	expansions 
		 => __wait_terminated.__w_termsig if True


#define IF_NOT_BBCONFIG if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BBCONFIG)
		(__VA_ARGS__...) if def(CONFIG_BBCONFIG)


#define nanddump_full_usage if True 
	expansions 
		 => "\n\n" "Dump the sepcified MTD device\n" "\nOptions:" "\n	-o	Omit oob data" "\n	-b	Omit bad block from the dump" "\n	-s ADDR	Start address" "\n	-l LEN	Length" "\n	-f FILE	Dump to file ('-' for stdout)" if True


#define __DEC32_MANT_DIG__ if True 
	expansions 
		 => 7 if True


#define IF_FEATURE_FIND_INUM if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_FIND_INUM)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_FIND_INUM)


#define IF_FEATURE_VOLUMEID_CRAMFS if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_VOLUMEID_CRAMFS)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_VOLUMEID_CRAMFS)


#define __SSE2_MATH__ if True 
	expansions 
		 => 1 if True


#define blkid_trivial_usage if True 
	expansions 
		 => "" if True


#define mdev_notes_usage if True 
	expansions 
		 => "" IF_FEATURE_MDEV_CONFIG( "The mdev config file contains lines that look like:\n" "  hd[a-z][0-9]* 0:3 660\n\n" "That's device name (with regex match), uid:gid, and permissions.\n\n" IF_FEATURE_MDEV_EXEC( "Optionally, that can be followed (on the same line) by a special character\n" "and a command line to run after creating/before deleting the corresponding\n" "device(s). The environment variable $MDEV indicates the active device node\n" "(which is useful if it's a regex match). For example:\n\n" "  hdc root:cdrom 660  *ln -s $MDEV cdrom\n\n" "The special characters are @ (run after creating), $ (run before deleting),\n" "and * (run both after creating and before deleting). The commands run in\n" "the /dev directory, and use system() which calls /bin/sh.\n\n" ) "Config file parsing stops on the first matching line. If no config\n" "entry is matched, devices are created with default 0:0 660. (Make\n" "the last line match .* to override this.)\n\n" ) if True


#define IF_INOTIFYD if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_INOTIFYD)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_INOTIFYD)


#define ENABLE_FALSE if True 
	expansions 
		 => 0 if !def(CONFIG_FALSE)
		 => 1 if def(CONFIG_FALSE)


#define _IO_feof_unlocked if True 
	expansions 
		(__fp) => (((__fp)->_flags & _IO_EOF_SEEN) != 0) if True


#define uuencode_full_usage if True 
	expansions 
		 => "\n\n" "Uuencode a file to stdout\n" "\nOptions:" "\n	-m	Use base64 encoding per RFC1521" if True


#define IF_NOT_BEEP if True 
	expansions 
		(__VA_ARGS__...) => __VA_ARGS__ if !def(CONFIG_BEEP)
		(__VA_ARGS__...) if def(CONFIG_BEEP)


#define IF_MDEV if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MDEV)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MDEV)


#define ENABLE_FLASH_LOCK if True 
	expansions 
		 => 0 if !def(CONFIG_FLASH_LOCK)
		 => 1 if def(CONFIG_FLASH_LOCK)


#define tr_trivial_usage if True 
	expansions 
		 => "[-cds] STRING1 [STRING2]" if True


#define _ENDIAN_H if True 
	expansions 
		 => 1 if True


#define IF_FEATURE_LSMOD_PRETTY_2_6_OUTPUT if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)


#define IF_FEATURE_HDPARM_GET_IDENTITY if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_FEATURE_HDPARM_GET_IDENTITY)


#define wc_trivial_usage if True 
	expansions 
		 => "[-c"IF_UNICODE_SUPPORT("m")"lwL] [FILE]..." if True


#define IF_MKTEMP if True 
	expansions 
		(__VA_ARGS__...) if !def(CONFIG_MKTEMP)
		(__VA_ARGS__...) => __VA_ARGS__ if def(CONFIG_MKTEMP)


#define modprobe_full_usage if True 
	expansions 
		 => "\n\n" "Options:" "\n	-r	Remove MODULE (stacks) or do autoclean" "\n	-q	Quiet" "\n	-v	Verbose" "\n	-f	Force" "\n	-w	Wait for unload" "\n	-s	Report via syslog instead of stderr" if def(CONFIG_MODPROBE_SMALL)
		 => "\n\n" "Options:" "\n	-a	Load multiple MODULEs" "\n	-l	List (MODULE is a pattern)" "\n	-r	Remove MODULE (stacks) or do autoclean" "\n	-q	Quiet" "\n	-v	Verbose" "\n	-s	Log to syslog" IF_FEATURE_MODPROBE_BLACKLIST( "\n	-b	Apply blacklist to module names too" ) if !def(CONFIG_MODPROBE_SMALL)





Statistics (macros,macros with >1 alternative expansions,>2,>3,>4,non-trivial presence conditions):
4007;2527;0;0;0;40
