#line 1 "host/platform-redhat.h" 1
//Generated with:
//echo -|gcc -dM - -E -std=gnu99 







































































































































#line 1 "busybox/config.h" 1
#if definedEx(CONFIG_HAVE_DOT_CONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_HAVE_DOT_CONFIG)
   
   
   
#endif
#if definedEx(CONFIG_DESKTOP)
   
   
   
#endif
#if !definedEx(CONFIG_DESKTOP)
   
   
   
#endif
#if definedEx(CONFIG_EXTRA_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_EXTRA_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_INCLUDE_SUSv2)
   
   
   
#endif
#if !definedEx(CONFIG_INCLUDE_SUSv2)
   
   
   
#endif
#if definedEx(CONFIG_USE_PORTABLE_CODE)
   
   
   
#endif
#if !definedEx(CONFIG_USE_PORTABLE_CODE)
   
   
   
#endif
#if definedEx(CONFIG_PLATFORM_LINUX)
   
   
   
#endif
#if !definedEx(CONFIG_PLATFORM_LINUX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
   
   
   
#endif
#if definedEx(CONFIG_SHOW_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_SHOW_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VERBOSE_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VERBOSE_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSTALLER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)
   
   
   
#endif
#if definedEx(CONFIG_LOCALE_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_LOCALE_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_USING_LOCALE)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_USING_LOCALE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
   
   
   
#endif
#if definedEx(CONFIG_SUBST_WCHAR)
   
   
   
#endif
#if !definedEx(CONFIG_SUBST_WCHAR)
   
   
   
#endif
#if definedEx(CONFIG_LAST_SUPPORTED_WCHAR)
   
   
   
#endif
#if !definedEx(CONFIG_LAST_SUPPORTED_WCHAR)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_COMBINING_WCHARS)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_COMBINING_WCHARS)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_WIDE_WCHARS)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_WIDE_WCHARS)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_BIDI_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_BIDI_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_NEUTRAL_TABLE)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_NEUTRAL_TABLE)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_PRESERVE_BROKEN)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_PRESERVE_BROKEN)
   
   
   
#endif
#if definedEx(CONFIG_LONG_OPTS)
   
   
   
#endif
#if !definedEx(CONFIG_LONG_OPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEVPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEVPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CLEAN_UP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CLEAN_UP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UTMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UTMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WTMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WTMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID_CONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_SELINUX)
   
   
   
#endif
#if !definedEx(CONFIG_SELINUX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PREFER_APPLETS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PREFER_APPLETS)
   
   
   
#endif
#if definedEx(CONFIG_BUSYBOX_EXEC_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_BUSYBOX_EXEC_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HAVE_RPC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HAVE_RPC)
   
   
   
#endif
#if definedEx(CONFIG_STATIC)
   
   
   
#endif
#if !definedEx(CONFIG_STATIC)
   
   
   
#endif
#if definedEx(CONFIG_PIE)
   
   
   
#endif
#if !definedEx(CONFIG_PIE)
   
   
   
#endif
#if definedEx(CONFIG_NOMMU)
   
   
   
#endif
#if !definedEx(CONFIG_NOMMU)
   
   
   
#endif
#if definedEx(CONFIG_BUILD_LIBBUSYBOX)
   
   
   
#endif
#if !definedEx(CONFIG_BUILD_LIBBUSYBOX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
   
   
   
#endif
#if definedEx(CONFIG_LFS)
   
   
   
#endif
#if !definedEx(CONFIG_LFS)
   
   
   
#endif
#if definedEx(CONFIG_CROSS_COMPILER_PREFIX)
   
   
   
#endif
#if !definedEx(CONFIG_CROSS_COMPILER_PREFIX)
   
   
   
#endif
#if definedEx(CONFIG_EXTRA_CFLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_EXTRA_CFLAGS)
   
   
   
#endif
#if definedEx(CONFIG_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_DEBUG_PESSIMIZE)
   
   
   
#endif
#if !definedEx(CONFIG_DEBUG_PESSIMIZE)
   
   
   
#endif
#if definedEx(CONFIG_WERROR)
   
   
   
#endif
#if !definedEx(CONFIG_WERROR)
   
   
   
#endif
#if definedEx(CONFIG_NO_DEBUG_LIB)
   
   
   
#endif
#if !definedEx(CONFIG_NO_DEBUG_LIB)
   
   
   
#endif
#if definedEx(CONFIG_DMALLOC)
   
   
   
#endif
#if !definedEx(CONFIG_DMALLOC)
   
   
   
#endif
#if definedEx(CONFIG_EFENCE)
   
   
   
#endif
#if !definedEx(CONFIG_EFENCE)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_NO_USR)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_NO_USR)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_SYMLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_SYMLINKS)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_HARDLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_HARDLINKS)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_DONT)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_DONT)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_SYMLINK)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_SYMLINK)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_HARDLINK)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_HARDLINK)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
   
   
   
#endif
#if definedEx(CONFIG_PREFIX)
   
   
   
#endif
#if !definedEx(CONFIG_PREFIX)
   
   
   
#endif
#if definedEx(CONFIG_PASSWORD_MINLEN)
   
   
   
#endif
#if !definedEx(CONFIG_PASSWORD_MINLEN)
   
   
   
#endif
#if definedEx(CONFIG_MD5_SIZE_VS_SPEED)
   
   
   
#endif
#if !definedEx(CONFIG_MD5_SIZE_VS_SPEED)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FAST_TOP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FAST_TOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ETC_NETWORKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ETC_NETWORKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_MAX_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_MAX_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_VI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_VI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_HISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_HISTORY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAB_COMPLETION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAB_COMPLETION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NON_POSIX_CP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NON_POSIX_CP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COPYBUF_KB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COPYBUF_KB)
   
   
   
#endif
#if definedEx(CONFIG_MONOTONIC_SYSCALL)
   
   
   
#endif
#if !definedEx(CONFIG_MONOTONIC_SYSCALL)
   
   
   
#endif
#if definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
   
   
   
#endif
#if !definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWIB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWIB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_XZ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_XZ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_LZMA)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_LZMA)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_BZ2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_BZ2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_GZ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_GZ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_Z)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_Z)
   
   
   
#endif
#if definedEx(CONFIG_AR)
   
   
   
#endif
#if !definedEx(CONFIG_AR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AR_LONG_FILENAMES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AR_LONG_FILENAMES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AR_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AR_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_BUNZIP2)
   
   
   
#endif
#if !definedEx(CONFIG_BUNZIP2)
   
   
   
#endif
#if definedEx(CONFIG_BZIP2)
   
   
   
#endif
#if !definedEx(CONFIG_BZIP2)
   
   
   
#endif
#if definedEx(CONFIG_CPIO)
   
   
   
#endif
#if !definedEx(CONFIG_CPIO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CPIO_O)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CPIO_O)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CPIO_P)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CPIO_P)
   
   
   
#endif
#if definedEx(CONFIG_DPKG)
   
   
   
#endif
#if !definedEx(CONFIG_DPKG)
   
   
   
#endif
#if definedEx(CONFIG_DPKG_DEB)
   
   
   
#endif
#if !definedEx(CONFIG_DPKG_DEB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
   
   
   
#endif
#if definedEx(CONFIG_GUNZIP)
   
   
   
#endif
#if !definedEx(CONFIG_GUNZIP)
   
   
   
#endif
#if definedEx(CONFIG_GZIP)
   
   
   
#endif
#if !definedEx(CONFIG_GZIP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_LZOP)
   
   
   
#endif
#if !definedEx(CONFIG_LZOP)
   
   
   
#endif
#if definedEx(CONFIG_LZOP_COMPR_HIGH)
   
   
   
#endif
#if !definedEx(CONFIG_LZOP_COMPR_HIGH)
   
   
   
#endif
#if definedEx(CONFIG_RPM2CPIO)
   
   
   
#endif
#if !definedEx(CONFIG_RPM2CPIO)
   
   
   
#endif
#if definedEx(CONFIG_RPM)
   
   
   
#endif
#if !definedEx(CONFIG_RPM)
   
   
   
#endif
#if definedEx(CONFIG_TAR)
   
   
   
#endif
#if !definedEx(CONFIG_TAR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_AUTODETECT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_AUTODETECT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_FROM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_FROM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_SELINUX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_SELINUX)
   
   
   
#endif
#if definedEx(CONFIG_UNCOMPRESS)
   
   
   
#endif
#if !definedEx(CONFIG_UNCOMPRESS)
   
   
   
#endif
#if definedEx(CONFIG_UNLZMA)
   
   
   
#endif
#if !definedEx(CONFIG_UNLZMA)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LZMA_FAST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LZMA_FAST)
   
   
   
#endif
#if definedEx(CONFIG_LZMA)
   
   
   
#endif
#if !definedEx(CONFIG_LZMA)
   
   
   
#endif
#if definedEx(CONFIG_UNXZ)
   
   
   
#endif
#if !definedEx(CONFIG_UNXZ)
   
   
   
#endif
#if definedEx(CONFIG_XZ)
   
   
   
#endif
#if !definedEx(CONFIG_XZ)
   
   
   
#endif
#if definedEx(CONFIG_UNZIP)
   
   
   
#endif
#if !definedEx(CONFIG_UNZIP)
   
   
   
#endif
#if definedEx(CONFIG_BASENAME)
   
   
   
#endif
#if !definedEx(CONFIG_BASENAME)
   
   
   
#endif
#if definedEx(CONFIG_CAT)
   
   
   
#endif
#if !definedEx(CONFIG_CAT)
   
   
   
#endif
#if definedEx(CONFIG_DATE)
   
   
   
#endif
#if !definedEx(CONFIG_DATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_ISOFMT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_ISOFMT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_NANO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_NANO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_TEST)
   
   
   
#endif
#if !definedEx(CONFIG_TEST)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TEST_64)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TEST_64)
   
   
   
#endif
#if definedEx(CONFIG_TR)
   
   
   
#endif
#if !definedEx(CONFIG_TR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TR_CLASSES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TR_CLASSES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TR_EQUIV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TR_EQUIV)
   
   
   
#endif
#if definedEx(CONFIG_BASE64)
   
   
   
#endif
#if !definedEx(CONFIG_BASE64)
   
   
   
#endif
#if definedEx(CONFIG_CAL)
   
   
   
#endif
#if !definedEx(CONFIG_CAL)
   
   
   
#endif
#if definedEx(CONFIG_CATV)
   
   
   
#endif
#if !definedEx(CONFIG_CATV)
   
   
   
#endif
#if definedEx(CONFIG_CHGRP)
   
   
   
#endif
#if !definedEx(CONFIG_CHGRP)
   
   
   
#endif
#if definedEx(CONFIG_CHMOD)
   
   
   
#endif
#if !definedEx(CONFIG_CHMOD)
   
   
   
#endif
#if definedEx(CONFIG_CHOWN)
   
   
   
#endif
#if !definedEx(CONFIG_CHOWN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_CHROOT)
   
   
   
#endif
#if !definedEx(CONFIG_CHROOT)
   
   
   
#endif
#if definedEx(CONFIG_CKSUM)
   
   
   
#endif
#if !definedEx(CONFIG_CKSUM)
   
   
   
#endif
#if definedEx(CONFIG_COMM)
   
   
   
#endif
#if !definedEx(CONFIG_COMM)
   
   
   
#endif
#if definedEx(CONFIG_CP)
   
   
   
#endif
#if !definedEx(CONFIG_CP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_CUT)
   
   
   
#endif
#if !definedEx(CONFIG_CUT)
   
   
   
#endif
#if definedEx(CONFIG_DD)
   
   
   
#endif
#if !definedEx(CONFIG_DD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_IBS_OBS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_IBS_OBS)
   
   
   
#endif
#if definedEx(CONFIG_DF)
   
   
   
#endif
#if !definedEx(CONFIG_DF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DF_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DF_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_DIRNAME)
   
   
   
#endif
#if !definedEx(CONFIG_DIRNAME)
   
   
   
#endif
#if definedEx(CONFIG_DOS2UNIX)
   
   
   
#endif
#if !definedEx(CONFIG_DOS2UNIX)
   
   
   
#endif
#if definedEx(CONFIG_UNIX2DOS)
   
   
   
#endif
#if !definedEx(CONFIG_UNIX2DOS)
   
   
   
#endif
#if definedEx(CONFIG_DU)
   
   
   
#endif
#if !definedEx(CONFIG_DU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
   
   
   
#endif
#if definedEx(CONFIG_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_ENV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ENV_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ENV_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_EXPAND)
   
   
   
#endif
#if !definedEx(CONFIG_EXPAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_EXPR)
   
   
   
#endif
#if !definedEx(CONFIG_EXPR)
   
   
   
#endif
#if definedEx(CONFIG_EXPR_MATH_SUPPORT_64)
   
   
   
#endif
#if !definedEx(CONFIG_EXPR_MATH_SUPPORT_64)
   
   
   
#endif
#if definedEx(CONFIG_FALSE)
   
   
   
#endif
#if !definedEx(CONFIG_FALSE)
   
   
   
#endif
#if definedEx(CONFIG_FOLD)
   
   
   
#endif
#if !definedEx(CONFIG_FOLD)
   
   
   
#endif
#if definedEx(CONFIG_FSYNC)
   
   
   
#endif
#if !definedEx(CONFIG_FSYNC)
   
   
   
#endif
#if definedEx(CONFIG_HEAD)
   
   
   
#endif
#if !definedEx(CONFIG_HEAD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_HEAD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_HEAD)
   
   
   
#endif
#if definedEx(CONFIG_HOSTID)
   
   
   
#endif
#if !definedEx(CONFIG_HOSTID)
   
   
   
#endif
#if definedEx(CONFIG_ID)
   
   
   
#endif
#if !definedEx(CONFIG_ID)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSTALL_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSTALL_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_LENGTH)
   
   
   
#endif
#if !definedEx(CONFIG_LENGTH)
   
   
   
#endif
#if definedEx(CONFIG_LN)
   
   
   
#endif
#if !definedEx(CONFIG_LN)
   
   
   
#endif
#if definedEx(CONFIG_LOGNAME)
   
   
   
#endif
#if !definedEx(CONFIG_LOGNAME)
   
   
   
#endif
#if definedEx(CONFIG_LS)
   
   
   
#endif
#if !definedEx(CONFIG_LS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_FILETYPES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_FILETYPES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_FOLLOWLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_FOLLOWLINKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_RECURSIVE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_RECURSIVE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_SORTFILES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_SORTFILES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_TIMESTAMPS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_TIMESTAMPS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_USERNAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_USERNAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_COLOR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_COLOR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
   
   
   
#endif
#if definedEx(CONFIG_MD5SUM)
   
   
   
#endif
#if !definedEx(CONFIG_MD5SUM)
   
   
   
#endif
#if definedEx(CONFIG_MKDIR)
   
   
   
#endif
#if !definedEx(CONFIG_MKDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_MKFIFO)
   
   
   
#endif
#if !definedEx(CONFIG_MKFIFO)
   
   
   
#endif
#if definedEx(CONFIG_MKNOD)
   
   
   
#endif
#if !definedEx(CONFIG_MKNOD)
   
   
   
#endif
#if definedEx(CONFIG_MV)
   
   
   
#endif
#if !definedEx(CONFIG_MV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MV_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MV_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_NICE)
   
   
   
#endif
#if !definedEx(CONFIG_NICE)
   
   
   
#endif
#if definedEx(CONFIG_NOHUP)
   
   
   
#endif
#if !definedEx(CONFIG_NOHUP)
   
   
   
#endif
#if definedEx(CONFIG_OD)
   
   
   
#endif
#if !definedEx(CONFIG_OD)
   
   
   
#endif
#if definedEx(CONFIG_PRINTENV)
   
   
   
#endif
#if !definedEx(CONFIG_PRINTENV)
   
   
   
#endif
#if definedEx(CONFIG_PRINTF)
   
   
   
#endif
#if !definedEx(CONFIG_PRINTF)
   
   
   
#endif
#if definedEx(CONFIG_PWD)
   
   
   
#endif
#if !definedEx(CONFIG_PWD)
   
   
   
#endif
#if definedEx(CONFIG_READLINK)
   
   
   
#endif
#if !definedEx(CONFIG_READLINK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_READLINK_FOLLOW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_READLINK_FOLLOW)
   
   
   
#endif
#if definedEx(CONFIG_REALPATH)
   
   
   
#endif
#if !definedEx(CONFIG_REALPATH)
   
   
   
#endif
#if definedEx(CONFIG_RM)
   
   
   
#endif
#if !definedEx(CONFIG_RM)
   
   
   
#endif
#if definedEx(CONFIG_RMDIR)
   
   
   
#endif
#if !definedEx(CONFIG_RMDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SEQ)
   
   
   
#endif
#if !definedEx(CONFIG_SEQ)
   
   
   
#endif
#if definedEx(CONFIG_SHA1SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA1SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA256SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA256SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA512SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA512SUM)
   
   
   
#endif
#if definedEx(CONFIG_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FLOAT_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FLOAT_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_SORT)
   
   
   
#endif
#if !definedEx(CONFIG_SORT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SORT_BIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SORT_BIG)
   
   
   
#endif
#if definedEx(CONFIG_SPLIT)
   
   
   
#endif
#if !definedEx(CONFIG_SPLIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SPLIT_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SPLIT_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_STAT)
   
   
   
#endif
#if !definedEx(CONFIG_STAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_STAT_FORMAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_STAT_FORMAT)
   
   
   
#endif
#if definedEx(CONFIG_STTY)
   
   
   
#endif
#if !definedEx(CONFIG_STTY)
   
   
   
#endif
#if definedEx(CONFIG_SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SUM)
   
   
   
#endif
#if definedEx(CONFIG_SYNC)
   
   
   
#endif
#if !definedEx(CONFIG_SYNC)
   
   
   
#endif
#if definedEx(CONFIG_TAC)
   
   
   
#endif
#if !definedEx(CONFIG_TAC)
   
   
   
#endif
#if definedEx(CONFIG_TAIL)
   
   
   
#endif
#if !definedEx(CONFIG_TAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_TAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_TAIL)
   
   
   
#endif
#if definedEx(CONFIG_TEE)
   
   
   
#endif
#if !definedEx(CONFIG_TEE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
   
   
   
#endif
#if definedEx(CONFIG_TOUCH)
   
   
   
#endif
#if !definedEx(CONFIG_TOUCH)
   
   
   
#endif
#if definedEx(CONFIG_TRUE)
   
   
   
#endif
#if !definedEx(CONFIG_TRUE)
   
   
   
#endif
#if definedEx(CONFIG_TTY)
   
   
   
#endif
#if !definedEx(CONFIG_TTY)
   
   
   
#endif
#if definedEx(CONFIG_UNAME)
   
   
   
#endif
#if !definedEx(CONFIG_UNAME)
   
   
   
#endif
#if definedEx(CONFIG_UNEXPAND)
   
   
   
#endif
#if !definedEx(CONFIG_UNEXPAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_UNIQ)
   
   
   
#endif
#if !definedEx(CONFIG_UNIQ)
   
   
   
#endif
#if definedEx(CONFIG_USLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_USLEEP)
   
   
   
#endif
#if definedEx(CONFIG_UUDECODE)
   
   
   
#endif
#if !definedEx(CONFIG_UUDECODE)
   
   
   
#endif
#if definedEx(CONFIG_UUENCODE)
   
   
   
#endif
#if !definedEx(CONFIG_UUENCODE)
   
   
   
#endif
#if definedEx(CONFIG_WC)
   
   
   
#endif
#if !definedEx(CONFIG_WC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WC_LARGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WC_LARGE)
   
   
   
#endif
#if definedEx(CONFIG_WHO)
   
   
   
#endif
#if !definedEx(CONFIG_WHO)
   
   
   
#endif
#if definedEx(CONFIG_WHOAMI)
   
   
   
#endif
#if !definedEx(CONFIG_WHOAMI)
   
   
   
#endif
#if definedEx(CONFIG_YES)
   
   
   
#endif
#if !definedEx(CONFIG_YES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PRESERVE_HARDLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PRESERVE_HARDLINKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AUTOWIDTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AUTOWIDTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HUMAN_READABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HUMAN_READABLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
   
   
   
#endif
#if definedEx(CONFIG_CHVT)
   
   
   
#endif
#if !definedEx(CONFIG_CHVT)
   
   
   
#endif
#if definedEx(CONFIG_FGCONSOLE)
   
   
   
#endif
#if !definedEx(CONFIG_FGCONSOLE)
   
   
   
#endif
#if definedEx(CONFIG_CLEAR)
   
   
   
#endif
#if !definedEx(CONFIG_CLEAR)
   
   
   
#endif
#if definedEx(CONFIG_DEALLOCVT)
   
   
   
#endif
#if !definedEx(CONFIG_DEALLOCVT)
   
   
   
#endif
#if definedEx(CONFIG_DUMPKMAP)
   
   
   
#endif
#if !definedEx(CONFIG_DUMPKMAP)
   
   
   
#endif
#if definedEx(CONFIG_KBD_MODE)
   
   
   
#endif
#if !definedEx(CONFIG_KBD_MODE)
   
   
   
#endif
#if definedEx(CONFIG_LOADFONT)
   
   
   
#endif
#if !definedEx(CONFIG_LOADFONT)
   
   
   
#endif
#if definedEx(CONFIG_LOADKMAP)
   
   
   
#endif
#if !definedEx(CONFIG_LOADKMAP)
   
   
   
#endif
#if definedEx(CONFIG_OPENVT)
   
   
   
#endif
#if !definedEx(CONFIG_OPENVT)
   
   
   
#endif
#if definedEx(CONFIG_RESET)
   
   
   
#endif
#if !definedEx(CONFIG_RESET)
   
   
   
#endif
#if definedEx(CONFIG_RESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_RESIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RESIZE_PRINT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RESIZE_PRINT)
   
   
   
#endif
#if definedEx(CONFIG_SETCONSOLE)
   
   
   
#endif
#if !definedEx(CONFIG_SETCONSOLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SETFONT)
   
   
   
#endif
#if !definedEx(CONFIG_SETFONT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
   
   
   
#endif
#if definedEx(CONFIG_DEFAULT_SETFONT_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_DEFAULT_SETFONT_DIR)
   
   
   
#endif
#if definedEx(CONFIG_SETKEYCODES)
   
   
   
#endif
#if !definedEx(CONFIG_SETKEYCODES)
   
   
   
#endif
#if definedEx(CONFIG_SETLOGCONS)
   
   
   
#endif
#if !definedEx(CONFIG_SETLOGCONS)
   
   
   
#endif
#if definedEx(CONFIG_SHOWKEY)
   
   
   
#endif
#if !definedEx(CONFIG_SHOWKEY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOADFONT_PSF2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOADFONT_PSF2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOADFONT_RAW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOADFONT_RAW)
   
   
   
#endif
#if definedEx(CONFIG_MKTEMP)
   
   
   
#endif
#if !definedEx(CONFIG_MKTEMP)
   
   
   
#endif
#if definedEx(CONFIG_PIPE_PROGRESS)
   
   
   
#endif
#if !definedEx(CONFIG_PIPE_PROGRESS)
   
   
   
#endif
#if definedEx(CONFIG_RUN_PARTS)
   
   
   
#endif
#if !definedEx(CONFIG_RUN_PARTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUN_PARTS_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUN_PARTS_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_START_STOP_DAEMON)
   
   
   
#endif
#if !definedEx(CONFIG_START_STOP_DAEMON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_WHICH)
   
   
   
#endif
#if !definedEx(CONFIG_WHICH)
   
   
   
#endif
#if definedEx(CONFIG_AWK)
   
   
   
#endif
#if !definedEx(CONFIG_AWK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AWK_LIBM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AWK_LIBM)
   
   
   
#endif
#if definedEx(CONFIG_CMP)
   
   
   
#endif
#if !definedEx(CONFIG_CMP)
   
   
   
#endif
#if definedEx(CONFIG_DIFF)
   
   
   
#endif
#if !definedEx(CONFIG_DIFF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DIFF_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DIFF_DIR)
   
   
   
#endif
#if definedEx(CONFIG_ED)
   
   
   
#endif
#if !definedEx(CONFIG_ED)
   
   
   
#endif
#if definedEx(CONFIG_PATCH)
   
   
   
#endif
#if !definedEx(CONFIG_PATCH)
   
   
   
#endif
#if definedEx(CONFIG_SED)
   
   
   
#endif
#if !definedEx(CONFIG_SED)
   
   
   
#endif
#if definedEx(CONFIG_VI)
   
   
   
#endif
#if !definedEx(CONFIG_VI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_MAX_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_MAX_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_8BIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_8BIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_COLON)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_COLON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_YANKMARK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_YANKMARK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SEARCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SEARCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_USE_SIGNALS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_USE_SIGNALS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_DOT_CMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_DOT_CMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_READONLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_READONLY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SETOPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SETOPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_WIN_RESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_WIN_RESIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ALLOW_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ALLOW_EXEC)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_FIND_PRINT0)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PRINT0)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MTIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MMIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MMIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PERM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PERM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_TYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_TYPE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_XDEV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_XDEV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MAXDEPTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MAXDEPTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_NEWER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_NEWER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_INUM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_INUM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_EXEC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_USER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_USER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_NOT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_NOT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_DEPTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_DEPTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PAREN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PAREN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PRUNE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PRUNE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_DELETE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_DELETE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_REGEX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_REGEX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_CONTEXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_CONTEXT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_LINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_LINKS)
   
   
   
#endif
#if definedEx(CONFIG_GREP)
   
   
   
#endif
#if !definedEx(CONFIG_GREP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_CONTEXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_CONTEXT)
   
   
   
#endif
#if definedEx(CONFIG_XARGS)
   
   
   
#endif
#if !definedEx(CONFIG_XARGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
   
   
   
#endif
#if definedEx(CONFIG_BOOTCHARTD)
   
   
   
#endif
#if !definedEx(CONFIG_BOOTCHARTD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
   
   
   
#endif
#if definedEx(CONFIG_INIT)
   
   
   
#endif
#if !definedEx(CONFIG_INIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USE_INITTAB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USE_INITTAB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KILL_REMOVED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KILL_REMOVED)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KILL_DELAY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KILL_DELAY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_SCTTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_SCTTY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EXTRA_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EXTRA_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_COREDUMPS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_COREDUMPS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INITRD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INITRD)
   
   
   
#endif
#if definedEx(CONFIG_INIT_TERMINAL_TYPE)
   
   
   
#endif
#if !definedEx(CONFIG_INIT_TERMINAL_TYPE)
   
   
   
#endif
#if definedEx(CONFIG_HALT)
   
   
   
#endif
#if !definedEx(CONFIG_HALT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CALL_TELINIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CALL_TELINIT)
   
   
   
#endif
#if definedEx(CONFIG_TELINIT_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_TELINIT_PATH)
   
   
   
#endif
#if definedEx(CONFIG_MESG)
   
   
   
#endif
#if !definedEx(CONFIG_MESG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_PWD_GRP)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_PWD_GRP)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_SHADOW)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_SHADOW)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_CRYPT)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_CRYPT)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_CRYPT_SHA)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_CRYPT_SHA)
   
   
   
#endif
#if definedEx(CONFIG_ADDUSER)
   
   
   
#endif
#if !definedEx(CONFIG_ADDUSER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_NAMES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_NAMES)
   
   
   
#endif
#if definedEx(CONFIG_FIRST_SYSTEM_ID)
   
   
   
#endif
#if !definedEx(CONFIG_FIRST_SYSTEM_ID)
   
   
   
#endif
#if definedEx(CONFIG_LAST_SYSTEM_ID)
   
   
   
#endif
#if !definedEx(CONFIG_LAST_SYSTEM_ID)
   
   
   
#endif
#if definedEx(CONFIG_ADDGROUP)
   
   
   
#endif
#if !definedEx(CONFIG_ADDGROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_DELUSER)
   
   
   
#endif
#if !definedEx(CONFIG_DELUSER)
   
   
   
#endif
#if definedEx(CONFIG_DELGROUP)
   
   
   
#endif
#if !definedEx(CONFIG_DELGROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_GETTY)
   
   
   
#endif
#if !definedEx(CONFIG_GETTY)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN)
   
   
   
#endif
#if definedEx(CONFIG_PAM)
   
   
   
#endif
#if !definedEx(CONFIG_PAM)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN_SCRIPTS)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN_SCRIPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NOLOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NOLOGIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SECURETTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SECURETTY)
   
   
   
#endif
#if definedEx(CONFIG_PASSWD)
   
   
   
#endif
#if !definedEx(CONFIG_PASSWD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
   
   
   
#endif
#if definedEx(CONFIG_CRYPTPW)
   
   
   
#endif
#if !definedEx(CONFIG_CRYPTPW)
   
   
   
#endif
#if definedEx(CONFIG_CHPASSWD)
   
   
   
#endif
#if !definedEx(CONFIG_CHPASSWD)
   
   
   
#endif
#if definedEx(CONFIG_SU)
   
   
   
#endif
#if !definedEx(CONFIG_SU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SU_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SU_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SU_CHECKS_SHELLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SU_CHECKS_SHELLS)
   
   
   
#endif
#if definedEx(CONFIG_SULOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_SULOGIN)
   
   
   
#endif
#if definedEx(CONFIG_VLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_VLOCK)
   
   
   
#endif
#if definedEx(CONFIG_CHATTR)
   
   
   
#endif
#if !definedEx(CONFIG_CHATTR)
   
   
   
#endif
#if definedEx(CONFIG_FSCK)
   
   
   
#endif
#if !definedEx(CONFIG_FSCK)
   
   
   
#endif
#if definedEx(CONFIG_LSATTR)
   
   
   
#endif
#if !definedEx(CONFIG_LSATTR)
   
   
   
#endif
#if definedEx(CONFIG_TUNE2FS)
   
   
   
#endif
#if !definedEx(CONFIG_TUNE2FS)
   
   
   
#endif
#if definedEx(CONFIG_MODINFO)
   
   
   
#endif
#if !definedEx(CONFIG_MODINFO)
   
   
   
#endif
#if definedEx(CONFIG_MODPROBE_SMALL)
   
   
   
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
   
   
   
#endif
#if definedEx(CONFIG_INSMOD)
   
   
   
#endif
#if !definedEx(CONFIG_INSMOD)
   
   
   
#endif
#if definedEx(CONFIG_RMMOD)
   
   
   
#endif
#if !definedEx(CONFIG_RMMOD)
   
   
   
#endif
#if definedEx(CONFIG_LSMOD)
   
   
   
#endif
#if !definedEx(CONFIG_LSMOD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
   
   
   
#endif
#if definedEx(CONFIG_MODPROBE)
   
   
   
#endif
#if !definedEx(CONFIG_MODPROBE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_BLACKLIST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_BLACKLIST)
   
   
   
#endif
#if definedEx(CONFIG_DEPMOD)
   
   
   
#endif
#if !definedEx(CONFIG_DEPMOD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_2_4_MODULES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_2_4_MODULES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_TRY_MMAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_TRY_MMAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOADINKMEM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOADINKMEM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODUTILS_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODUTILS_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODUTILS_SYMBOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODUTILS_SYMBOLS)
   
   
   
#endif
#if definedEx(CONFIG_DEFAULT_MODULES_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_DEFAULT_MODULES_DIR)
   
   
   
#endif
#if definedEx(CONFIG_DEFAULT_DEPMOD_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_DEFAULT_DEPMOD_FILE)
   
   
   
#endif
#if definedEx(CONFIG_BLOCKDEV)
   
   
   
#endif
#if !definedEx(CONFIG_BLOCKDEV)
   
   
   
#endif
#if definedEx(CONFIG_REV)
   
   
   
#endif
#if !definedEx(CONFIG_REV)
   
   
   
#endif
#if definedEx(CONFIG_ACPID)
   
   
   
#endif
#if !definedEx(CONFIG_ACPID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ACPID_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ACPID_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_BLKID)
   
   
   
#endif
#if !definedEx(CONFIG_BLKID)
   
   
   
#endif
#if definedEx(CONFIG_DMESG)
   
   
   
#endif
#if !definedEx(CONFIG_DMESG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DMESG_PRETTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DMESG_PRETTY)
   
   
   
#endif
#if definedEx(CONFIG_FBSET)
   
   
   
#endif
#if !definedEx(CONFIG_FBSET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FBSET_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FBSET_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FBSET_READMODE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FBSET_READMODE)
   
   
   
#endif
#if definedEx(CONFIG_FDFLUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FDFLUSH)
   
   
   
#endif
#if definedEx(CONFIG_FDFORMAT)
   
   
   
#endif
#if !definedEx(CONFIG_FDFORMAT)
   
   
   
#endif
#if definedEx(CONFIG_FDISK)
   
   
   
#endif
#if !definedEx(CONFIG_FDISK)
   
   
   
#endif
#if definedEx(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
   
   
   
#endif
#if !definedEx(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FDISK_WRITABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FDISK_WRITABLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AIX_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AIX_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SGI_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SGI_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUN_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUN_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_OSF_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_OSF_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FDISK_ADVANCED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FDISK_ADVANCED)
   
   
   
#endif
#if definedEx(CONFIG_FINDFS)
   
   
   
#endif
#if !definedEx(CONFIG_FINDFS)
   
   
   
#endif
#if definedEx(CONFIG_FLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FREERAMDISK)
   
   
   
#endif
#if !definedEx(CONFIG_FREERAMDISK)
   
   
   
#endif
#if definedEx(CONFIG_FSCK_MINIX)
   
   
   
#endif
#if !definedEx(CONFIG_FSCK_MINIX)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_EXT2)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_EXT2)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_MINIX)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_MINIX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MINIX2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MINIX2)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_REISER)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_REISER)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_VFAT)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_VFAT)
   
   
   
#endif
#if definedEx(CONFIG_GETOPT)
   
   
   
#endif
#if !definedEx(CONFIG_GETOPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GETOPT_LONG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GETOPT_LONG)
   
   
   
#endif
#if definedEx(CONFIG_HEXDUMP)
   
   
   
#endif
#if !definedEx(CONFIG_HEXDUMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HEXDUMP_REVERSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HEXDUMP_REVERSE)
   
   
   
#endif
#if definedEx(CONFIG_HD)
   
   
   
#endif
#if !definedEx(CONFIG_HD)
   
   
   
#endif
#if definedEx(CONFIG_HWCLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_HWCLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
   
   
   
#endif
#if definedEx(CONFIG_IPCRM)
   
   
   
#endif
#if !definedEx(CONFIG_IPCRM)
   
   
   
#endif
#if definedEx(CONFIG_IPCS)
   
   
   
#endif
#if !definedEx(CONFIG_IPCS)
   
   
   
#endif
#if definedEx(CONFIG_LOSETUP)
   
   
   
#endif
#if !definedEx(CONFIG_LOSETUP)
   
   
   
#endif
#if definedEx(CONFIG_LSPCI)
   
   
   
#endif
#if !definedEx(CONFIG_LSPCI)
   
   
   
#endif
#if definedEx(CONFIG_LSUSB)
   
   
   
#endif
#if !definedEx(CONFIG_LSUSB)
   
   
   
#endif
#if definedEx(CONFIG_MDEV)
   
   
   
#endif
#if !definedEx(CONFIG_MDEV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_CONF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_CONF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_RENAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_RENAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_EXEC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
   
   
   
#endif
#if definedEx(CONFIG_MKSWAP)
   
   
   
#endif
#if !definedEx(CONFIG_MKSWAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MKSWAP_UUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MKSWAP_UUID)
   
   
   
#endif
#if definedEx(CONFIG_MORE)
   
   
   
#endif
#if !definedEx(CONFIG_MORE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USE_TERMIOS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USE_TERMIOS)
   
   
   
#endif
#if definedEx(CONFIG_MOUNT)
   
   
   
#endif
#if !definedEx(CONFIG_MOUNT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FAKE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FAKE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_HELPERS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_HELPERS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_NFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_NFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_CIFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_CIFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FLAGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FSTAB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FSTAB)
   
   
   
#endif
#if definedEx(CONFIG_PIVOT_ROOT)
   
   
   
#endif
#if !definedEx(CONFIG_PIVOT_ROOT)
   
   
   
#endif
#if definedEx(CONFIG_RDATE)
   
   
   
#endif
#if !definedEx(CONFIG_RDATE)
   
   
   
#endif
#if definedEx(CONFIG_RDEV)
   
   
   
#endif
#if !definedEx(CONFIG_RDEV)
   
   
   
#endif
#if definedEx(CONFIG_READPROFILE)
   
   
   
#endif
#if !definedEx(CONFIG_READPROFILE)
   
   
   
#endif
#if definedEx(CONFIG_RTCWAKE)
   
   
   
#endif
#if !definedEx(CONFIG_RTCWAKE)
   
   
   
#endif
#if definedEx(CONFIG_SCRIPT)
   
   
   
#endif
#if !definedEx(CONFIG_SCRIPT)
   
   
   
#endif
#if definedEx(CONFIG_SCRIPTREPLAY)
   
   
   
#endif
#if !definedEx(CONFIG_SCRIPTREPLAY)
   
   
   
#endif
#if definedEx(CONFIG_SETARCH)
   
   
   
#endif
#if !definedEx(CONFIG_SETARCH)
   
   
   
#endif
#if definedEx(CONFIG_SWAPONOFF)
   
   
   
#endif
#if !definedEx(CONFIG_SWAPONOFF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SWAPON_PRI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SWAPON_PRI)
   
   
   
#endif
#if definedEx(CONFIG_SWITCH_ROOT)
   
   
   
#endif
#if !definedEx(CONFIG_SWITCH_ROOT)
   
   
   
#endif
#if definedEx(CONFIG_UMOUNT)
   
   
   
#endif
#if !definedEx(CONFIG_UMOUNT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UMOUNT_ALL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UMOUNT_ALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LOOP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LOOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MTAB_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MTAB_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_VOLUMEID)
   
   
   
#endif
#if !definedEx(CONFIG_VOLUMEID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_EXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_EXT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_BTRFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_BTRFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_REISERFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_REISERFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_FAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_FAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_HFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_HFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_JFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_JFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_XFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_XFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_NTFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_NTFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_ISO9660)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_ISO9660)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_UDF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_UDF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LUKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LUKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_CRAMFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_CRAMFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_ROMFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_ROMFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_SYSV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_SYSV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_OCFS2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_OCFS2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
   
   
   
#endif
#if definedEx(CONFIG_CONSPY)
   
   
   
#endif
#if !definedEx(CONFIG_CONSPY)
   
   
   
#endif
#if definedEx(CONFIG_NANDWRITE)
   
   
   
#endif
#if !definedEx(CONFIG_NANDWRITE)
   
   
   
#endif
#if definedEx(CONFIG_UBIATTACH)
   
   
   
#endif
#if !definedEx(CONFIG_UBIATTACH)
   
   
   
#endif
#if definedEx(CONFIG_UBIDETACH)
   
   
   
#endif
#if !definedEx(CONFIG_UBIDETACH)
   
   
   
#endif
#if definedEx(CONFIG_ADJTIMEX)
   
   
   
#endif
#if !definedEx(CONFIG_ADJTIMEX)
   
   
   
#endif
#if definedEx(CONFIG_BBCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_BBCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_BBCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_BBCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_BEEP)
   
   
   
#endif
#if !definedEx(CONFIG_BEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BEEP_FREQ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BEEP_FREQ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BEEP_LENGTH_MS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BEEP_LENGTH_MS)
   
   
   
#endif
#if definedEx(CONFIG_CHAT)
   
   
   
#endif
#if !definedEx(CONFIG_CHAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_NOFAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_NOFAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_TTY_HIFI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_TTY_HIFI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_CLR_ABORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_CLR_ABORT)
   
   
   
#endif
#if definedEx(CONFIG_CHRT)
   
   
   
#endif
#if !definedEx(CONFIG_CHRT)
   
   
   
#endif
#if definedEx(CONFIG_CROND)
   
   
   
#endif
#if !definedEx(CONFIG_CROND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_D)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_D)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_DIR)
   
   
   
#endif
#if definedEx(CONFIG_CRONTAB)
   
   
   
#endif
#if !definedEx(CONFIG_CRONTAB)
   
   
   
#endif
#if definedEx(CONFIG_DC)
   
   
   
#endif
#if !definedEx(CONFIG_DC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DC_LIBM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DC_LIBM)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_MODLOAD)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_MODLOAD)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_FG_NP)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_FG_NP)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEVFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEVFS)
   
   
   
#endif
#if definedEx(CONFIG_DEVMEM)
   
   
   
#endif
#if !definedEx(CONFIG_DEVMEM)
   
   
   
#endif
#if definedEx(CONFIG_EJECT)
   
   
   
#endif
#if !definedEx(CONFIG_EJECT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EJECT_SCSI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EJECT_SCSI)
   
   
   
#endif
#if definedEx(CONFIG_FBSPLASH)
   
   
   
#endif
#if !definedEx(CONFIG_FBSPLASH)
   
   
   
#endif
#if definedEx(CONFIG_FLASHCP)
   
   
   
#endif
#if !definedEx(CONFIG_FLASHCP)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_LOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_LOCK)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_UNLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_UNLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_ERASEALL)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_ERASEALL)
   
   
   
#endif
#if definedEx(CONFIG_IONICE)
   
   
   
#endif
#if !definedEx(CONFIG_IONICE)
   
   
   
#endif
#if definedEx(CONFIG_INOTIFYD)
   
   
   
#endif
#if !definedEx(CONFIG_INOTIFYD)
   
   
   
#endif
#if definedEx(CONFIG_LAST)
   
   
   
#endif
#if !definedEx(CONFIG_LAST)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LAST_SMALL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LAST_SMALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LAST_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LAST_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_LESS)
   
   
   
#endif
#if !definedEx(CONFIG_LESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_MAXLINES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_MAXLINES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_BRACKETS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_BRACKETS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_FLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_FLAGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_MARKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_MARKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_REGEXP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_REGEXP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_WINCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_WINCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_DASHCMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_DASHCMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_LINENUMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_LINENUMS)
   
   
   
#endif
#if definedEx(CONFIG_HDPARM)
   
   
   
#endif
#if !definedEx(CONFIG_HDPARM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
   
   
   
#endif
#if definedEx(CONFIG_MAKEDEVS)
   
   
   
#endif
#if !definedEx(CONFIG_MAKEDEVS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MAKEDEVS_LEAF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MAKEDEVS_LEAF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MAKEDEVS_TABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MAKEDEVS_TABLE)
   
   
   
#endif
#if definedEx(CONFIG_MAN)
   
   
   
#endif
#if !definedEx(CONFIG_MAN)
   
   
   
#endif
#if definedEx(CONFIG_MICROCOM)
   
   
   
#endif
#if !definedEx(CONFIG_MICROCOM)
   
   
   
#endif
#if definedEx(CONFIG_MOUNTPOINT)
   
   
   
#endif
#if !definedEx(CONFIG_MOUNTPOINT)
   
   
   
#endif
#if definedEx(CONFIG_MT)
   
   
   
#endif
#if !definedEx(CONFIG_MT)
   
   
   
#endif
#if definedEx(CONFIG_RAIDAUTORUN)
   
   
   
#endif
#if !definedEx(CONFIG_RAIDAUTORUN)
   
   
   
#endif
#if definedEx(CONFIG_READAHEAD)
   
   
   
#endif
#if !definedEx(CONFIG_READAHEAD)
   
   
   
#endif
#if definedEx(CONFIG_RFKILL)
   
   
   
#endif
#if !definedEx(CONFIG_RFKILL)
   
   
   
#endif
#if definedEx(CONFIG_RUNLEVEL)
   
   
   
#endif
#if !definedEx(CONFIG_RUNLEVEL)
   
   
   
#endif
#if definedEx(CONFIG_RX)
   
   
   
#endif
#if !definedEx(CONFIG_RX)
   
   
   
#endif
#if definedEx(CONFIG_SETSID)
   
   
   
#endif
#if !definedEx(CONFIG_SETSID)
   
   
   
#endif
#if definedEx(CONFIG_STRINGS)
   
   
   
#endif
#if !definedEx(CONFIG_STRINGS)
   
   
   
#endif
#if definedEx(CONFIG_TASKSET)
   
   
   
#endif
#if !definedEx(CONFIG_TASKSET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TASKSET_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TASKSET_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_TIME)
   
   
   
#endif
#if definedEx(CONFIG_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_TTYSIZE)
   
   
   
#endif
#if !definedEx(CONFIG_TTYSIZE)
   
   
   
#endif
#if definedEx(CONFIG_VOLNAME)
   
   
   
#endif
#if !definedEx(CONFIG_VOLNAME)
   
   
   
#endif
#if definedEx(CONFIG_WALL)
   
   
   
#endif
#if !definedEx(CONFIG_WALL)
   
   
   
#endif
#if definedEx(CONFIG_WATCHDOG)
   
   
   
#endif
#if !definedEx(CONFIG_WATCHDOG)
   
   
   
#endif
#if definedEx(CONFIG_NBDCLIENT)
   
   
   
#endif
#if !definedEx(CONFIG_NBDCLIENT)
   
   
   
#endif
#if definedEx(CONFIG_NC)
   
   
   
#endif
#if !definedEx(CONFIG_NC)
   
   
   
#endif
#if definedEx(CONFIG_NC_SERVER)
   
   
   
#endif
#if !definedEx(CONFIG_NC_SERVER)
   
   
   
#endif
#if definedEx(CONFIG_NC_EXTRA)
   
   
   
#endif
#if !definedEx(CONFIG_NC_EXTRA)
   
   
   
#endif
#if definedEx(CONFIG_NC_110_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_NC_110_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPV6)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPV6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UNIX_LOCAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UNIX_LOCAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
   
   
   
#endif
#if definedEx(CONFIG_VERBOSE_RESOLUTION_ERRORS)
   
   
   
#endif
#if !definedEx(CONFIG_VERBOSE_RESOLUTION_ERRORS)
   
   
   
#endif
#if definedEx(CONFIG_ARP)
   
   
   
#endif
#if !definedEx(CONFIG_ARP)
   
   
   
#endif
#if definedEx(CONFIG_ARPING)
   
   
   
#endif
#if !definedEx(CONFIG_ARPING)
   
   
   
#endif
#if definedEx(CONFIG_BRCTL)
   
   
   
#endif
#if !definedEx(CONFIG_BRCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BRCTL_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BRCTL_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BRCTL_SHOW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BRCTL_SHOW)
   
   
   
#endif
#if definedEx(CONFIG_DNSD)
   
   
   
#endif
#if !definedEx(CONFIG_DNSD)
   
   
   
#endif
#if definedEx(CONFIG_ETHER_WAKE)
   
   
   
#endif
#if !definedEx(CONFIG_ETHER_WAKE)
   
   
   
#endif
#if definedEx(CONFIG_FAKEIDENTD)
   
   
   
#endif
#if !definedEx(CONFIG_FAKEIDENTD)
   
   
   
#endif
#if definedEx(CONFIG_FTPD)
   
   
   
#endif
#if !definedEx(CONFIG_FTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTP_WRITE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTP_WRITE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
   
   
   
#endif
#if definedEx(CONFIG_FTPGET)
   
   
   
#endif
#if !definedEx(CONFIG_FTPGET)
   
   
   
#endif
#if definedEx(CONFIG_FTPPUT)
   
   
   
#endif
#if !definedEx(CONFIG_FTPPUT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_HOSTNAME)
   
   
   
#endif
#if !definedEx(CONFIG_HOSTNAME)
   
   
   
#endif
#if definedEx(CONFIG_HTTPD)
   
   
   
#endif
#if !definedEx(CONFIG_HTTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_RANGES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_RANGES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_SETUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_SETUID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_AUTH_MD5)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_AUTH_MD5)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_CGI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_CGI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_PROXY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_PROXY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_GZIP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_GZIP)
   
   
   
#endif
#if definedEx(CONFIG_IFCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_IFCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_STATUS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_STATUS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_SLIP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_SLIP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_HW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_HW)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
   
   
   
#endif
#if definedEx(CONFIG_IFENSLAVE)
   
   
   
#endif
#if !definedEx(CONFIG_IFENSLAVE)
   
   
   
#endif
#if definedEx(CONFIG_IFPLUGD)
   
   
   
#endif
#if !definedEx(CONFIG_IFPLUGD)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN_IFSTATE_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN_IFSTATE_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IPV4)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IPV4)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IPV6)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IPV6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_MAPPING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_MAPPING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
   
   
   
#endif
#if definedEx(CONFIG_INETD)
   
   
   
#endif
#if !definedEx(CONFIG_INETD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_RPC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_RPC)
   
   
   
#endif
#if definedEx(CONFIG_IP)
   
   
   
#endif
#if !definedEx(CONFIG_IP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_ADDRESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_ADDRESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_LINK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_LINK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_TUNNEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_TUNNEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_RULE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_RULE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_SHORT_FORMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_SHORT_FORMS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
   
   
   
#endif
#if definedEx(CONFIG_IPADDR)
   
   
   
#endif
#if !definedEx(CONFIG_IPADDR)
   
   
   
#endif
#if definedEx(CONFIG_IPLINK)
   
   
   
#endif
#if !definedEx(CONFIG_IPLINK)
   
   
   
#endif
#if definedEx(CONFIG_IPROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_IPROUTE)
   
   
   
#endif
#if definedEx(CONFIG_IPTUNNEL)
   
   
   
#endif
#if !definedEx(CONFIG_IPTUNNEL)
   
   
   
#endif
#if definedEx(CONFIG_IPRULE)
   
   
   
#endif
#if !definedEx(CONFIG_IPRULE)
   
   
   
#endif
#if definedEx(CONFIG_IPCALC)
   
   
   
#endif
#if !definedEx(CONFIG_IPCALC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPCALC_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPCALC_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_NAMEIF)
   
   
   
#endif
#if !definedEx(CONFIG_NAMEIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NAMEIF_EXTENDED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NAMEIF_EXTENDED)
   
   
   
#endif
#if definedEx(CONFIG_NETSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_NETSTAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NETSTAT_WIDE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NETSTAT_WIDE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NETSTAT_PRG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NETSTAT_PRG)
   
   
   
#endif
#if definedEx(CONFIG_NSLOOKUP)
   
   
   
#endif
#if !definedEx(CONFIG_NSLOOKUP)
   
   
   
#endif
#if definedEx(CONFIG_NTPD)
   
   
   
#endif
#if !definedEx(CONFIG_NTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NTPD_SERVER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NTPD_SERVER)
   
   
   
#endif
#if definedEx(CONFIG_PING)
   
   
   
#endif
#if !definedEx(CONFIG_PING)
   
   
   
#endif
#if definedEx(CONFIG_PING6)
   
   
   
#endif
#if !definedEx(CONFIG_PING6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_PING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_PING)
   
   
   
#endif
#if definedEx(CONFIG_PSCAN)
   
   
   
#endif
#if !definedEx(CONFIG_PSCAN)
   
   
   
#endif
#if definedEx(CONFIG_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_SLATTACH)
   
   
   
#endif
#if !definedEx(CONFIG_SLATTACH)
   
   
   
#endif
#if definedEx(CONFIG_TCPSVD)
   
   
   
#endif
#if !definedEx(CONFIG_TCPSVD)
   
   
   
#endif
#if definedEx(CONFIG_TELNET)
   
   
   
#endif
#if !definedEx(CONFIG_TELNET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNET_TTYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNET_TTYPE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNET_AUTOLOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNET_AUTOLOGIN)
   
   
   
#endif
#if definedEx(CONFIG_TELNETD)
   
   
   
#endif
#if !definedEx(CONFIG_TELNETD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNETD_STANDALONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNETD_STANDALONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNETD_INETD_WAIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNETD_INETD_WAIT)
   
   
   
#endif
#if definedEx(CONFIG_TFTP)
   
   
   
#endif
#if !definedEx(CONFIG_TFTP)
   
   
   
#endif
#if definedEx(CONFIG_TFTPD)
   
   
   
#endif
#if !definedEx(CONFIG_TFTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_GET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_GET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_PUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_PUT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_BLOCKSIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_BLOCKSIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
   
   
   
#endif
#if definedEx(CONFIG_TFTP_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_TFTP_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_TRACEROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_TRACEROUTE)
   
   
   
#endif
#if definedEx(CONFIG_TRACEROUTE6)
   
   
   
#endif
#if !definedEx(CONFIG_TRACEROUTE6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
   
   
   
#endif
#if definedEx(CONFIG_TUNCTL)
   
   
   
#endif
#if !definedEx(CONFIG_TUNCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TUNCTL_UG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TUNCTL_UG)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPD)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPD)
   
   
   
#endif
#if definedEx(CONFIG_DHCPRELAY)
   
   
   
#endif
#if !definedEx(CONFIG_DHCPRELAY)
   
   
   
#endif
#if definedEx(CONFIG_DUMPLEASES)
   
   
   
#endif
#if !definedEx(CONFIG_DUMPLEASES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
   
   
   
#endif
#if definedEx(CONFIG_DHCPD_LEASES_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_DHCPD_LEASES_FILE)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPC_ARPING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPC_ARPING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_PORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_PORT)
   
   
   
#endif
#if definedEx(CONFIG_UDHCP_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCP_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_RFC3397)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_RFC3397)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC_DEFAULT_SCRIPT)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC_DEFAULT_SCRIPT)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_UDPSVD)
   
   
   
#endif
#if !definedEx(CONFIG_UDPSVD)
   
   
   
#endif
#if definedEx(CONFIG_VCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_VCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_WGET)
   
   
   
#endif
#if !definedEx(CONFIG_WGET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WGET_STATUSBAR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_STATUSBAR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WGET_AUTHENTICATION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_AUTHENTICATION)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_WGET_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_ZCIP)
   
   
   
#endif
#if !definedEx(CONFIG_ZCIP)
   
   
   
#endif
#if definedEx(CONFIG_LPD)
   
   
   
#endif
#if !definedEx(CONFIG_LPD)
   
   
   
#endif
#if definedEx(CONFIG_LPR)
   
   
   
#endif
#if !definedEx(CONFIG_LPR)
   
   
   
#endif
#if definedEx(CONFIG_LPQ)
   
   
   
#endif
#if !definedEx(CONFIG_LPQ)
   
   
   
#endif
#if definedEx(CONFIG_MAKEMIME)
   
   
   
#endif
#if !definedEx(CONFIG_MAKEMIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MIME_CHARSET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MIME_CHARSET)
   
   
   
#endif
#if definedEx(CONFIG_POPMAILDIR)
   
   
   
#endif
#if !definedEx(CONFIG_POPMAILDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
   
   
   
#endif
#if definedEx(CONFIG_REFORMIME)
   
   
   
#endif
#if !definedEx(CONFIG_REFORMIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REFORMIME_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REFORMIME_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_SENDMAIL)
   
   
   
#endif
#if !definedEx(CONFIG_SENDMAIL)
   
   
   
#endif
#if definedEx(CONFIG_IOSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_IOSTAT)
   
   
   
#endif
#if definedEx(CONFIG_MPSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_MPSTAT)
   
   
   
#endif
#if definedEx(CONFIG_PMAP)
   
   
   
#endif
#if !definedEx(CONFIG_PMAP)
   
   
   
#endif
#if definedEx(CONFIG_SMEMCAP)
   
   
   
#endif
#if !definedEx(CONFIG_SMEMCAP)
   
   
   
#endif
#if definedEx(CONFIG_FREE)
   
   
   
#endif
#if !definedEx(CONFIG_FREE)
   
   
   
#endif
#if definedEx(CONFIG_FUSER)
   
   
   
#endif
#if !definedEx(CONFIG_FUSER)
   
   
   
#endif
#if definedEx(CONFIG_KILL)
   
   
   
#endif
#if !definedEx(CONFIG_KILL)
   
   
   
#endif
#if definedEx(CONFIG_KILLALL)
   
   
   
#endif
#if !definedEx(CONFIG_KILLALL)
   
   
   
#endif
#if definedEx(CONFIG_KILLALL5)
   
   
   
#endif
#if !definedEx(CONFIG_KILLALL5)
   
   
   
#endif
#if definedEx(CONFIG_NMETER)
   
   
   
#endif
#if !definedEx(CONFIG_NMETER)
   
   
   
#endif
#if definedEx(CONFIG_PGREP)
   
   
   
#endif
#if !definedEx(CONFIG_PGREP)
   
   
   
#endif
#if definedEx(CONFIG_PIDOF)
   
   
   
#endif
#if !definedEx(CONFIG_PIDOF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDOF_SINGLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDOF_SINGLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDOF_OMIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDOF_OMIT)
   
   
   
#endif
#if definedEx(CONFIG_PKILL)
   
   
   
#endif
#if !definedEx(CONFIG_PKILL)
   
   
   
#endif
#if definedEx(CONFIG_PS)
   
   
   
#endif
#if !definedEx(CONFIG_PS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_WIDE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_WIDE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
   
   
   
#endif
#if definedEx(CONFIG_RENICE)
   
   
   
#endif
#if !definedEx(CONFIG_RENICE)
   
   
   
#endif
#if definedEx(CONFIG_BB_SYSCTL)
   
   
   
#endif
#if !definedEx(CONFIG_BB_SYSCTL)
   
   
   
#endif
#if definedEx(CONFIG_TOP)
   
   
   
#endif
#if !definedEx(CONFIG_TOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_SMP_CPU)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_CPU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_DECIMALS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_DECIMALS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOPMEM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOPMEM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHOW_THREADS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHOW_THREADS)
   
   
   
#endif
#if definedEx(CONFIG_UPTIME)
   
   
   
#endif
#if !definedEx(CONFIG_UPTIME)
   
   
   
#endif
#if definedEx(CONFIG_WATCH)
   
   
   
#endif
#if !definedEx(CONFIG_WATCH)
   
   
   
#endif
#if definedEx(CONFIG_RUNSV)
   
   
   
#endif
#if !definedEx(CONFIG_RUNSV)
   
   
   
#endif
#if definedEx(CONFIG_RUNSVDIR)
   
   
   
#endif
#if !definedEx(CONFIG_RUNSVDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUNSVDIR_LOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUNSVDIR_LOG)
   
   
   
#endif
#if definedEx(CONFIG_SV)
   
   
   
#endif
#if !definedEx(CONFIG_SV)
   
   
   
#endif
#if definedEx(CONFIG_SV_DEFAULT_SERVICE_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_SV_DEFAULT_SERVICE_DIR)
   
   
   
#endif
#if definedEx(CONFIG_SVLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_SVLOGD)
   
   
   
#endif
#if definedEx(CONFIG_CHPST)
   
   
   
#endif
#if !definedEx(CONFIG_CHPST)
   
   
   
#endif
#if definedEx(CONFIG_SETUIDGID)
   
   
   
#endif
#if !definedEx(CONFIG_SETUIDGID)
   
   
   
#endif
#if definedEx(CONFIG_ENVUIDGID)
   
   
   
#endif
#if !definedEx(CONFIG_ENVUIDGID)
   
   
   
#endif
#if definedEx(CONFIG_ENVDIR)
   
   
   
#endif
#if !definedEx(CONFIG_ENVDIR)
   
   
   
#endif
#if definedEx(CONFIG_SOFTLIMIT)
   
   
   
#endif
#if !definedEx(CONFIG_SOFTLIMIT)
   
   
   
#endif
#if definedEx(CONFIG_CHCON)
   
   
   
#endif
#if !definedEx(CONFIG_CHCON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_GETENFORCE)
   
   
   
#endif
#if !definedEx(CONFIG_GETENFORCE)
   
   
   
#endif
#if definedEx(CONFIG_GETSEBOOL)
   
   
   
#endif
#if !definedEx(CONFIG_GETSEBOOL)
   
   
   
#endif
#if definedEx(CONFIG_LOAD_POLICY)
   
   
   
#endif
#if !definedEx(CONFIG_LOAD_POLICY)
   
   
   
#endif
#if definedEx(CONFIG_MATCHPATHCON)
   
   
   
#endif
#if !definedEx(CONFIG_MATCHPATHCON)
   
   
   
#endif
#if definedEx(CONFIG_RESTORECON)
   
   
   
#endif
#if !definedEx(CONFIG_RESTORECON)
   
   
   
#endif
#if definedEx(CONFIG_RUNCON)
   
   
   
#endif
#if !definedEx(CONFIG_RUNCON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SELINUXENABLED)
   
   
   
#endif
#if !definedEx(CONFIG_SELINUXENABLED)
   
   
   
#endif
#if definedEx(CONFIG_SETENFORCE)
   
   
   
#endif
#if !definedEx(CONFIG_SETENFORCE)
   
   
   
#endif
#if definedEx(CONFIG_SETFILES)
   
   
   
#endif
#if !definedEx(CONFIG_SETFILES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
   
   
   
#endif
#if definedEx(CONFIG_SETSEBOOL)
   
   
   
#endif
#if !definedEx(CONFIG_SETSEBOOL)
   
   
   
#endif
#if definedEx(CONFIG_SESTATUS)
   
   
   
#endif
#if !definedEx(CONFIG_SESTATUS)
   
   
   
#endif
#if definedEx(CONFIG_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_ASH)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BASH_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BASH_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_JOB_CONTROL)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_JOB_CONTROL)
   
   
   
#endif
#if definedEx(CONFIG_ASH_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_ASH_GETOPTS)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_GETOPTS)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_PRINTF)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_PRINTF)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_TEST)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_TEST)
   
   
   
#endif
#if definedEx(CONFIG_ASH_CMDCMD)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_CMDCMD)
   
   
   
#endif
#if definedEx(CONFIG_ASH_MAIL)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_MAIL)
   
   
   
#endif
#if definedEx(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_ASH_RANDOM_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_RANDOM_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_EXPAND_PRMT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_EXPAND_PRMT)
   
   
   
#endif
#if definedEx(CONFIG_CTTYHACK)
   
   
   
#endif
#if !definedEx(CONFIG_CTTYHACK)
   
   
   
#endif
#if definedEx(CONFIG_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_BASH_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_BASH_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_HELP)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_HELP)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_INTERACTIVE)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_INTERACTIVE)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_SAVEHISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_SAVEHISTORY)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_JOB)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_JOB)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_TICK)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_TICK)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_IF)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_IF)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_LOOPS)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_LOOPS)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_CASE)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_CASE)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_FUNCTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_FUNCTIONS)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_LOCAL)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_LOCAL)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_RANDOM_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_RANDOM_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_EXPORT_N)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_EXPORT_N)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_MODE_X)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_MODE_X)
   
   
   
#endif
#if definedEx(CONFIG_MSH)
   
   
   
#endif
#if !definedEx(CONFIG_MSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_ASH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_NONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_NONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_ASH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_NONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_NONE)
   
   
   
#endif
#if definedEx(CONFIG_SH_MATH_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_SH_MATH_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_SH_MATH_SUPPORT_64)
   
   
   
#endif
#if !definedEx(CONFIG_SH_MATH_SUPPORT_64)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_EXTRA_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_EXTRA_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_STANDALONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_STANDALONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_NOFORK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_NOFORK)
   
   
   
#endif
#if definedEx(CONFIG_SYSLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_SYSLOGD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ROTATE_LOGFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ROTATE_LOGFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REMOTE_LOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REMOTE_LOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOGD_DUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOGD_DUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPC_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPC_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_LOGREAD)
   
   
   
#endif
#if !definedEx(CONFIG_LOGREAD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
   
   
   
#endif
#if definedEx(CONFIG_KLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_KLOGD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KLOGD_KLOGCTL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KLOGD_KLOGCTL)
   
   
   
#endif
#if definedEx(CONFIG_LOGGER)
   
   
   
#endif
#if !definedEx(CONFIG_LOGGER)
   
   
   
#endif
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 1
/* A Bison parser, made by GNU Bison 2.0.  */

/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* Written by Richard Stallman by simplifying the original so called
   ``semantic'' parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */


/* Skeleton name.  */


/* Pure parsers.  */


/* Using locations.  */


/* Substitute the variable and function names.  */









/* Tokens.  */


   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     T_MAINMENU = 258,
     T_MENU = 259,
     T_ENDMENU = 260,
     T_SOURCE = 261,
     T_CHOICE = 262,
     T_ENDCHOICE = 263,
     T_COMMENT = 264,
     T_CONFIG = 265,
     T_MENUCONFIG = 266,
     T_HELP = 267,
     T_HELPTEXT = 268,
     T_IF = 269,
     T_ENDIF = 270,
     T_DEPENDS = 271,
     T_REQUIRES = 272,
     T_OPTIONAL = 273,
     T_PROMPT = 274,
     T_TYPE = 275,
     T_DEFAULT = 276,
     T_SELECT = 277,
     T_RANGE = 278,
     T_ON = 279,
     T_WORD = 280,
     T_WORD_QUOTE = 281,
     T_UNEQUAL = 282,
     T_CLOSE_PAREN = 283,
     T_OPEN_PAREN = 284,
     T_EOL = 285,
     T_OR = 286,
     T_AND = 287,
     T_EQUAL = 288,
     T_NOT = 289
   };





































/* Copy the first part of user declarations.  */


/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 1
/* Copyright (C) 1991,92,93,95,96,97,98,99,2001,2002,2004,2007,2008,2009
   	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard 7.4: Character handling	<ctype.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* These are defined by the user (or the compiler)
   to specify the desired environment:

   __STRICT_ANSI__	ISO Standard C.
   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.
   _POSIX_SOURCE	IEEE Std 1003.1.
   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if >=2 add IEEE Std 1003.2;
			if >=199309L, add IEEE Std 1003.1b-1993;
			if >=199506L, add IEEE Std 1003.1c-1995;
			if >=200112L, all of IEEE 1003.1-2004
			if >=200809L, all of IEEE 1003.1-2008
   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if
			Single Unix conformance is wanted, to 600 for the
			sixth revision, to 700 for the seventh revision.
   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.
   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.
   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.
   _FILE_OFFSET_BITS=N	Select default filesystem interface.
   _BSD_SOURCE		ISO C, POSIX, and 4.3BSD things.
   _SVID_SOURCE		ISO C, POSIX, and SVID things.
   _ATFILE_SOURCE	Additional *at interfaces.
   _GNU_SOURCE		All of the above, plus GNU extensions.
   _REENTRANT		Select additionally reentrant object.
   _THREAD_SAFE		Same as _REENTRANT, often used by other systems.
   _FORTIFY_SOURCE	If set to numeric value > 0 additional security
			measures are defined, according to level.

   The `-ansi' switch to the GNU C compiler defines __STRICT_ANSI__.
   If none of these are defined, the default is to have _SVID_SOURCE,
   _BSD_SOURCE, and _POSIX_SOURCE set to one and _POSIX_C_SOURCE set to
   200112L.  If more than one of these are defined, they accumulate.
   For example __STRICT_ANSI__, _POSIX_SOURCE and _POSIX_C_SOURCE
   together give you ISO C, 1003.1, and 1003.2, but nothing else.

   These are defined by this file and are used by the
   header files to decide what to declare or define:

   __USE_ISOC99		Define ISO C99 things.
   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.
   __USE_POSIX		Define IEEE Std 1003.1 things.
   __USE_POSIX2		Define IEEE Std 1003.2 things.
   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.
   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.
   __USE_XOPEN		Define XPG things.
   __USE_XOPEN_EXTENDED	Define X/Open Unix things.
   __USE_UNIX98		Define Single Unix V2 things.
   __USE_XOPEN2K        Define XPG6 things.
   __USE_XOPEN2KXSI     Define XPG6 XSI things.
   __USE_XOPEN2K8XSI    Define XPG7 XSI things.
   __USE_LARGEFILE	Define correct standard I/O things.
   __USE_LARGEFILE64	Define LFS things with separate names.
   __USE_FILE_OFFSET64	Define 64bit interface as default.
   __USE_BSD		Define 4.3BSD things.
   __USE_SVID		Define SVID things.
   __USE_MISC		Define things common to BSD and System V Unix.
   __USE_ATFILE		Define *at interfaces and AT_* constants for them.
   __USE_GNU		Define GNU extensions.
   __USE_REENTRANT	Define reentrant/thread-safe *_r functions.
   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.
   __FAVOR_BSD		Favor 4.3BSD things in cases of conflict.

   The macros `__GNU_LIBRARY__', `__GLIBC__', and `__GLIBC_MINOR__' are
   defined by this file unconditionally.  `__GNU_LIBRARY__' is provided
   only for compatibility.  All new code should use the other symbols
   to test for features.

   All macros listed above as possibly being defined by this file are
   explicitly undefined if they are not explicitly defined.
   Feature-test macros that are not defined by the user or compiler
   but are implied by the other feature-test macros defined (or by the
   lack of any definitions) are defined by the file.  */


/* Undefine everything, so we get a clean slate.  */


























/* Suppress kernel-name space pollution unless user expressedly asks
   for it.  */



/* Always use ISO C things.  */


/* Convenience macros to test the versions of glibc and gcc.
   Use them like this:
   #if __GNUC_PREREQ (2,8)
   ... code requiring gcc 2.8 or later ...
   #endif
   Note - they won't work for gcc1 or glibc1, since the _MINOR macros
   were not defined then.  */



 

/* If _BSD_SOURCE was defined by the user, favor BSD over POSIX.  */



/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */






















/* If nothing (other than _GNU_SOURCE) is defined,
   define _BSD_SOURCE and _SVID_SOURCE.  */




/* This is to enable the ISO C99 extension.  Also recognize the old macro
   which was used prior to the standard acceptance.  This macro will
   eventually go away and the features enabled by default once the ISO C99
   standard is widely adopted.  */



/* This is to enable the ISO C90 Amendment 1:1995 extension.  */



/* If none of the ANSI/POSIX macros are defined, use POSIX.1 and POSIX.2
   (and IEEE Std 1003.1b-1993 unless _XOPEN_SOURCE is defined).  */




 
 
 














































 





































 
 

 

/* We do support the IEC 559 math functionality, real and complex.  */



/* wchar_t uses ISO 10646-1 (2nd ed., published 2000-09-15) / Unicode 3.1.  */


/* This macro indicates that the installed library is the GNU C Library.
   For historic reasons the value now is 6 and this will stay from now
   on.  The use of this variable is deprecated.  Use __GLIBC__ and
   __GLIBC_MINOR__ now (see below) when you want to test for a specific
   GNU C library version and use the values in <gnu/lib-names.h> to get
   the sonames of the shared libraries.  */



/* Major and minor version number of the GNU C library package.  Use
   these macros to test for features in specific releases.  */






/* Decide whether a compiler supports the long long datatypes.  */



/* This is here only because every header file already includes this one.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/cdefs.h" 1
/* Copyright (C) 1992-2001, 2002, 2004, 2005, 2006, 2007, 2009
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* We are almost always included from features.h. */



/* The GNU libc does not support any K&R compilers or the traditional mode
   of ISO C compilers anymore.  Check for some of the combinations not
   anymore supported.  */



/* Some user header file might have defined this before.  */




/* GCC can always grok prototypes.  For C++ programs we add throw()
   to help it optimize the function calls.  But this works only with
   gcc 2.8.x and egcs.  For gcc 3.2 and up we even mark C functions
   as non-throwing using a function attribute since programs can use
   the -fexceptions options for C code as well.  */



 


 



 









/* These two macros are not used in glibc anymore.  They are kept here
   only because some other projects expect the macros to be defined.  */



/* For these things, GCC behaves the ANSI way normally,
   and the non-ANSI way under -traditional.  */




/* This is not a typedef so `const __ptr_t' does the right thing.  */




/* C++ needs to know that types and declarations are C, not C++.  */



 


/* The standard library needs the functions from the ISO C90 standard
   in the std namespace.  At the same time we want to be safe for
   future changes and we include the ISO C99 code in the non-standard
   namespace __c99.  The C++ wrapper header take case of adding the
   definitions to the global namespace.  */







 /* For compatibility we do not add the declarations into any
   namespace.  They will end up in the global namespace which is what
   old code expects.  */







/* Support for bounded pointers.  */





/* Fortify support.  */









 



/* Support for flexible arrays.  */

/* GCC 2.97 supports C99 flexible array members.  */

 

 

 




/* __asm__ ("xyz") is used throughout the headers to rename functions
   at the assembly language level.  This is wrapped by the __REDIRECT
   macro, in order to support compilers that can do this some other
   way.  When compilers don't support asm-names at all, we have to do
   preprocessor tricks instead (which don't have exactly the right
   semantics, but it's the best we can do).

   Example:
   int __REDIRECT(setpgrp, (__pid_t pid, __pid_t pgrp), setpgid); */






 





/*
#elif __SOME_OTHER_COMPILER__

# define __REDIRECT(name, proto, alias) name proto; 	_Pragma("let " #name " = " #alias)

*/

/* GCC has various useful declarations that can be made with the
   `__attribute__' syntax.  All of the ways we use this do fine if
   they are omitted for compilers that don't understand it. */



/* At some point during the gcc 2.96 development the `malloc' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */


 

/* At some point during the gcc 2.96 development the `pure' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */


 

/* At some point during the gcc 3.1 development the `used' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */



 


/* gcc allows marking deprecated functions.  */


 

/* At some point during the gcc 2.8 development the `format_arg' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.
   If several `format_arg' attributes are given for the same function, in
   gcc-3.0 and older, all but the last one are ignored.  In newer gccs,
   all designated arguments are considered.  */


 

/* At some point during the gcc 2.97 development the `strfmon' format
   attribute for functions was introduced.  We don't want to use it
   unconditionally (although this would be possible) since it
   generates warnings.  */



 

/* The nonull function attribute allows to mark pointer parameters which
   must not be NULL.  */


 

/* If fortification mode, we warn about unused results of certain
   function calls which can lead to problems.  */






 




/* Forces a function to be always inlined.  */


 

/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  */






 


 



 



/* GCC 4.3 and above allow passing all anonymous arguments of an
   __extern_always_inline function to some other vararg function.  */




/* It is possible to compile containing GCC extensions even if GCC is
   run in pedantic mode if the uses are carefully marked using the
   `__extension__' keyword.  But this is not generally available before
   version 2.8.  */



/* __restrict is known in EGCS 1.2 and above. */



/* ISO C99 also allows to declare arrays as non-overlapping.  The syntax is
     array_name[restrict]
   GCC 3.1 supports this.  */


 

 

 




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 367 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/cdefs.h" 2

































#line 363 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 2

/* If we don't have __REDIRECT, prototypes will be missing if
   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */





/* Decide whether we can define 'extern inline' functions in headers.  */



/* This is here only because every header file already includes this one.
   Get the definitions of all the appropriate `__stub_FUNCTION' symbols.
   <gnu/stubs.h> contains `#define __stub_FUNCTION' when FUNCTION is a stub
   that will always return failure (and set errno to ENOSYS).  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs.h" 1
/* This file selects the right generated file of `__stub_FUNCTION' macros
   based on the architecture being compiled for.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 6 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs.h" 2



 #line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs-64.h" 1
/* This file is automatically generated.
   It defines a symbol `__stub_FUNCTION' for each function
   in the C library which is a stub, meaning it will fail
   every time called, usually setting errno to ENOSYS.  */


 















#line 11 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs.h" 2
 

#line 387 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 2



#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 2

/* Convenience types.  */
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;

/* Fixed-size types, underlying types depend on word size and compiler.  */
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;
 


/* quad_t is also 64 bits.  */

typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
 

 

  



  


/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE
   macros for each of the OS types we define below.  The definitions
   of those macros must use the following macros for underlying types.
   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned
   variants of each of the following integer types on this machine.

	16		-- "natural" 16-bit type (always short)
	32		-- "natural" 32-bit type (always int)
	64		-- "natural" 64-bit type (long or long long)
	LONG32		-- 32-bit type, traditionally long
	QUAD		-- 64-bit type, always long long
	WORD		-- natural type of __WORDSIZE bits (int or long)
	LONGWORD	-- type of __WORDSIZE bits, traditionally long

   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the
   conventional uses of `long' or `long long' type modifiers match the
   types we define, even when a less-adorned type would be the same size.
   This matters for (somewhat) portably writing printf/scanf formats for
   these types, where using the appropriate l or ll format modifiers can
   make the typedefs and the formats match up across all GNU platforms.  If
   we used `long' when it's 64 bits where `long long' is expected, then the
   compiler would warn about the formats not matching the argument types,
   and the programmer changing them to shut up the compiler would break the
   program's portability.

   Here we assume what is presently the case in all the GCC configurations
   we support: long long is always 64 bits, long is always word/address size,
   and int is always 32 bits.  */



















 







/* No need to mark the typedef with __extension__.   */

 

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/typesizes.h" 1
/* bits/typesizes.h -- underlying types for *_t.  Generic version.
   Copyright (C) 2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







/* See <bits/types.h> for the meaning of these macros.  This file exists so
   that <bits/types.h> need not vary across different GNU platforms.  */

































/* Number of descriptors that can fit in an `fd_set'.  */




#line 133 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 2


typedef unsigned long int __dev_t;	/* Type of device numbers.  */
typedef unsigned int __uid_t;	/* Type of user identifications.  */
typedef unsigned int __gid_t;	/* Type of group identifications.  */
typedef unsigned long int __ino_t;	/* Type of file serial numbers.  */
typedef unsigned long int __ino64_t;	/* Type of file serial numbers (LFS).*/
typedef unsigned int __mode_t;	/* Type of file attribute bitmasks.  */
typedef unsigned long int __nlink_t;	/* Type of file link counts.  */
typedef long int __off_t;	/* Type of file sizes and offsets.  */
typedef long int __off64_t;	/* Type of file sizes and offsets (LFS).  */
typedef int __pid_t;	/* Type of process identifications.  */
typedef struct { int __val[2]; } __fsid_t;	/* Type of file system IDs.  */
typedef long int __clock_t;	/* Type of CPU usage counts.  */
typedef unsigned long int __rlim_t;	/* Type for resource measurement.  */
typedef unsigned long int __rlim64_t;	/* Type for resource measurement (LFS).  */
typedef unsigned int __id_t;		/* General type for IDs.  */
typedef long int __time_t;	/* Seconds since the Epoch.  */
typedef unsigned int __useconds_t; /* Count of microseconds.  */
typedef long int __suseconds_t; /* Signed count of microseconds.  */

typedef int __daddr_t;	/* The type of a disk address.  */
typedef long int __swblk_t;	/* Type of a swap block maybe?  */
typedef int __key_t;	/* Type of an IPC key.  */

/* Clock ID used in clock and timer functions.  */
typedef int __clockid_t;

/* Timer ID returned by `timer_create'.  */
typedef void * __timer_t;

/* Type to represent block size.  */
typedef long int __blksize_t;

/* Types from the Large File Support interface.  */

/* Type to count number of disk blocks.  */
typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;

/* Type to count file system blocks.  */
typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;

/* Type to count file system nodes.  */
typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;

typedef long int __ssize_t; /* Type of a byte count, or error.  */

/* These few don't really vary by system, they always correspond
   to one of the other defined types.  */
typedef __off64_t __loff_t;	/* Type of file sizes and offsets (LFS).  */
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;

/* Duplicates info from stdint.h but this is used in unistd.h.  */
typedef long int __intptr_t;

/* Duplicate info from sys/socket.h.  */
typedef unsigned int __socklen_t;





#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 2




/* These are all the characteristics of characters.
   If there get to be more than 16 distinct characteristics,
   many things must be changed that use `unsigned short int's.

   The characteristics are stored always in network byte order (big
   endian).  We define the bit value interpretations here dependent on the
   machine's byte order.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 2

/* Definitions for byte order, according to significance of bytes,
   from low addresses to high addresses.  The value is what you get by
   putting '4' in the most significant byte, '3' in the second most
   significant byte, '2' in the second least significant byte, and '1'
   in the least significant byte, and then writing down one digit for
   each byte, starting with the byte at the lowest address at the left,
   and proceeding to the byte with the highest address at the right.  */





/* This file defines `__BYTE_ORDER' for the particular machine.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/endian.h" 1
/* x86_64 is little-endian.  */





#line 39 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 2

/* Some machines may need to use a different endianness for floating point
   values.  */











 


/* Conversion interfaces.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/byteswap.h" 1
/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997, 1998, 2000, 2002, 2003, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/byteswap.h" 2

/* Swap bytes in 16 bit value.  */















 




/* Swap bytes in 32 bit value.  */






/* To swap the bytes in a word the i486 processors and up provide the
   `bswap' opcode.  On i386 we have to use three instructions.  */








 













 




/* Swap bytes in 64 bit value.  */



















 















#line 63 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 2
















 
















#line 43 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 2


 

enum
{
  _ISupper = ((0) < 8 ? ((1 << (0)) << 8) : ((1 << (0)) >> 8)),	/* UPPERCASE.  */
  _ISlower = ((1) < 8 ? ((1 << (1)) << 8) : ((1 << (1)) >> 8)),	/* lowercase.  */
  _ISalpha = ((2) < 8 ? ((1 << (2)) << 8) : ((1 << (2)) >> 8)),	/* Alphabetic.  */
  _ISdigit = ((3) < 8 ? ((1 << (3)) << 8) : ((1 << (3)) >> 8)),	/* Numeric.  */
  _ISxdigit = ((4) < 8 ? ((1 << (4)) << 8) : ((1 << (4)) >> 8)),	/* Hexadecimal numeric.  */
  _ISspace = ((5) < 8 ? ((1 << (5)) << 8) : ((1 << (5)) >> 8)),	/* Whitespace.  */
  _ISprint = ((6) < 8 ? ((1 << (6)) << 8) : ((1 << (6)) >> 8)),	/* Printing.  */
  _ISgraph = ((7) < 8 ? ((1 << (7)) << 8) : ((1 << (7)) >> 8)),	/* Graphical.  */
  _ISblank = ((8) < 8 ? ((1 << (8)) << 8) : ((1 << (8)) >> 8)),	/* Blank (usually SPC and TAB).  */
  _IScntrl = ((9) < 8 ? ((1 << (9)) << 8) : ((1 << (9)) >> 8)),	/* Control character.  */
  _ISpunct = ((10) < 8 ? ((1 << (10)) << 8) : ((1 << (10)) >> 8)),	/* Punctuation.  */
  _ISalnum = ((11) < 8 ? ((1 << (11)) << 8) : ((1 << (11)) >> 8))	/* Alphanumeric.  */
};

/* These are defined in ctype-info.c.
   The declarations here must match those in localeinfo.h.

   In the thread-specific locale model (see `uselocale' in <locale.h>)
   we cannot use global variables for these as was done in the past.
   Instead, the following accessor functions return the address of
   each variable, which is local to the current thread if multithreaded.

   These point into arrays of 384, so they can be indexed by any `unsigned
   char' value [0,255]; by EOF (-1); or by any `signed char' value
   [-128,-1).  ISO C requires that the ctype functions work for `unsigned
   char' values and for EOF; we also support negative `signed char' values
   for broken old programs.  The case conversion arrays are of `int's
   rather than `unsigned char's because tolower (EOF) must be EOF, which
   doesn't fit into an `unsigned char'.  But today more important is that
   the arrays are also used for multi-byte character sets.  */
extern __const unsigned short int **__ctype_b_loc (void)
     __attribute__ ((__nothrow__)) __attribute__ ((__const));
extern __const __int32_t **__ctype_tolower_loc (void)
     __attribute__ ((__nothrow__)) __attribute__ ((__const));
extern __const __int32_t **__ctype_toupper_loc (void)
     __attribute__ ((__nothrow__)) __attribute__ ((__const));











/* The following names are all functions:
     int isCHARACTERISTIC(int c);
   which return nonzero iff C has CHARACTERISTIC.
   For the meaning of the characteristic names, see the `enum' above.  */
extern int isalnum (int) __attribute__ ((__nothrow__));
extern int isalpha (int) __attribute__ ((__nothrow__));
extern int iscntrl (int) __attribute__ ((__nothrow__));
extern int isdigit (int) __attribute__ ((__nothrow__));
extern int islower (int) __attribute__ ((__nothrow__));
extern int isgraph (int) __attribute__ ((__nothrow__));
extern int isprint (int) __attribute__ ((__nothrow__));
extern int ispunct (int) __attribute__ ((__nothrow__));
extern int isspace (int) __attribute__ ((__nothrow__));
extern int isupper (int) __attribute__ ((__nothrow__));
extern int isxdigit (int) __attribute__ ((__nothrow__));


/* Return the lowercase version of C.  */
extern int tolower (int __c) __attribute__ ((__nothrow__));

/* Return the uppercase version of C.  */
extern int toupper (int __c) __attribute__ ((__nothrow__));




/* ISO C99 introduced one new function.  */



extern int isblank (int) __attribute__ ((__nothrow__));








/* Return nonzero iff C is in the ASCII set
   (i.e., is no more than 7 bits wide).  */
extern int isascii (int __c) __attribute__ ((__nothrow__));

/* Return the part of C that is in the ASCII set
   (i.e., the low-order 7 bits of C).  */
extern int toascii (int __c) __attribute__ ((__nothrow__));

/* These are the same as `toupper' and `tolower' except that they do not
   check the argument for being in the range of a `char'.  */
extern int _toupper (int) __attribute__ ((__nothrow__));
extern int _tolower (int) __attribute__ ((__nothrow__));

/* This code is needed for the optimized mapping functions.  */





































  





  















/* The concept of one static locale per category is not very well
   thought out.  Many applications will need to process its data using
   information from several different locales.  Another application is
   the implementation of the internationalization handling in the
   upcoming ISO C++ standard library.  To support this another set of
   the functions using locale data exist which have an additional
   argument.

   Attention: all these functions are *not* standardized in any form.
   This is a proof-of-concept implementation.  */

/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  The file and
   this data structure is not standardized.  Don't rely on it.  It can
   go away without warning.  */
typedef struct __locale_struct
{
  /* Note: LC_ALL is not a valid index into this array.  */
  struct __locale_data *__locales[13]; /* 13 = __LC_LAST. */

  /* To increase the speed of this solution we add some special members.  */
  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;

  /* Note: LC_ALL is not a valid index into this array.  */
  const char *__names[13];
} *__locale_t;

/* POSIX 2008 makes locale_t official.  */
typedef __locale_t locale_t;


#line 235 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 2

/* These definitions are similar to the ones above but all functions
   take as an argument a handle for the locale which shall be used.  */






/* The following names are all functions:
     int isCHARACTERISTIC(int c, locale_t *locale);
   which return nonzero iff C has CHARACTERISTIC.
   For the meaning of the characteristic names, see the `enum' above.  */
extern int isalnum_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isalpha_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int iscntrl_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isdigit_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int islower_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isgraph_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isprint_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int ispunct_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isspace_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isupper_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isxdigit_l (int, __locale_t) __attribute__ ((__nothrow__));

extern int isblank_l (int, __locale_t) __attribute__ ((__nothrow__));


/* Return the lowercase version of C in locale L.  */
extern int __tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));
extern int tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));

/* Return the uppercase version of C.  */
extern int __toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));
extern int toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));



















































#line 144 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdarg.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */









/* Define __gnuc_va_list.  */



typedef __builtin_va_list __gnuc_va_list;

/* Define the standard macros for the user,
   if this invocation was from the user program.  */









/* Define va_list, if desired, from __gnuc_va_list. */
/* We deliberately do not define va_list when called from
   stdio.h, because ANSI C says that stdio.h is not supposed to define
   va_list.  stdio.h needs to have access to that data type, 
   but must not use that name.  It should use the name __gnuc_va_list,
   which is safe because it is reserved for the implementation.  */
























 /* The macro _VA_LIST_ is the same thing used by this file in Ultrix.
   But on BSD NET2 we must not test or define or undef it.
   (Note that the comments in NET 2's ansi.h
   are incorrect for _VA_LIST_--see stdio.h!)  */

/* The macro _VA_LIST_DEFINED is used in Windows NT 3.5  */

/* The macro _VA_LIST is used in SCO Unix 3.2.  */

/* The macro _VA_LIST_T_H is used in the Bull dpx2  */

/* The macro __va_list__ is used by BeOS.  */

typedef __gnuc_va_list va_list;
























#line 145 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 2





#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





typedef long unsigned int size_t;























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 36 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 2

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 38 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 2




/* Define outside of namespace so the C++ is happy.  */
struct _IO_FILE;


/* The opaque type of streams.  This is the definition used elsewhere.  */
typedef struct _IO_FILE FILE;










/* The opaque type of streams.  This is the definition used elsewhere.  */
typedef struct _IO_FILE __FILE;









#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/libio.h" 1
/* Copyright (C) 1991-1995,1997-2006,2007,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Written by Per Bothner <bothner@cygnus.com>.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.

   As a special exception, if you link the code in this file with
   files compiled with a GNU compiler to produce an executable,
   that does not cause the resulting executable to be covered by
   the GNU Lesser General Public License.  This exception does not
   however invalidate any other reasons why the executable file
   might be covered by the GNU Lesser General Public License.
   This exception applies to code released by its copyright holders
   in files containing the exception.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/_G_config.h" 1
/* This file is needed by libio to define various configuration parameters.
   These are always the same in the GNU C library.  */




/* Define types for libio in terms of the standard internal type names.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 11 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/_G_config.h" 2





#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 17 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/_G_config.h" 2




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/wchar.h" 1
/* Copyright (C) 1995-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *      ISO C99 Standard: 7.24
 *	Extended multibyte and wide character utilities	<wchar.h>
 */






































 














/* Conversion state information.  */
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;
     

    char __wchb[4];
  } __value;		/* Value so far.  */
} __mbstate_t;




/* The rest of the file is only used if used if __need_mbstate_t is not
   defined.  */





































			


			 
     



			


			 
     



     


     








			






			 


			  









		       









		      





			 








     

     
 
     




     

     
 
     







     





     



     



     

				       
     
 
     




     

				      
     
 
     



			
			









     

				      
     
 
     





     





     

				       
     
 
     



		    
     



			 




     









			  
     

















		       
		       



		       



			

		      












	  





	  



	       

	  





			 
			 




			 
			 







			  
			  




			  
			  
			  














		      






		     

			    






			




				  
     








			      
     





					
					







			     
     





				       
				       




















			  
			  


				    
				    



				
				



					  
					  
     


			
     


		       
     


			      
			      









     




















		     
     





     


		     
     






		      
		      
     





		     
     



		      
		      
     







		    
     





     


		    
     







				 
		       
     

		       
     

				     
				     
     
 
			     


			     
     














		     
		     
     





		    
     


		     
		     
     




				  
				  
     

				 
     

				      
				      
     
 
			      
			      

			     

			      
			      










































			






		   























































				 








			    






			
			








			  
			  
			  






















/* Undefine all __need_* constants in case we are included to get those
   constants but the whole file was already read.  */


#line 22 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/_G_config.h" 2

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;












  
  
  
    
    
  


typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));




/* These library features are always available in the GNU C library.  */




















/* This is defined by <bits/stat.h> if `st_blksize' exists.  */




/* These are the vtbl details for ELF.  */









 


#line 34 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/libio.h" 2
/* ALL of these should be defined in _G_config.h */

















/* This define avoids name pollution if we're using GNU stdarg.h */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdarg.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */
























































 





































#line 55 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/libio.h" 2








 


 




/* For backward compatibility */


















 

 












/* Magic numbers and bits for the _flags field.
   The magic numbers use the high-order bits of _flags;
   the remaining bits are available for variable flags.
   Note: The magic numbers must all be negative if stdio
   emulation is desired. */






























/* These are "formatting flags" matching the iostream fmtflags enum values. */



















struct _IO_jump_t;  struct _IO_FILE;

/* Handle lock.  */



 

 typedef void _IO_lock_t;

/* A streammarker remembers a position in a buffer. */

struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;
  /* If _pos >= 0
 it points to _buf->Gbase()+_pos. FIXME comment */
  /* if _pos < 0, it points to _buf->eBptr()+_pos. FIXME comment */
  int _pos;

    
    
  
    
    
    
    
    

};

/* This is the structure from the libstdc++ codecvt class.  */
enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};






  
  
					     
					     
					     
					     
					     
  
						 
						 
  
					    
					    
					    
					    
  
  
  
			      
  

  
  





  
  
  
  
  
  
  
  
  
  
  
  

  
  
  

  

  


struct _IO_FILE {
  int _flags;		/* High-order word is _IO_MAGIC; rest is flags. */


  /* The following pointers correspond to the C++ streambuf protocol. */
  /* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */
  char* _IO_read_ptr;	/* Current read pointer */
  char* _IO_read_end;	/* End of get area. */
  char* _IO_read_base;	/* Start of putback+get area. */
  char* _IO_write_base;	/* Start of put area. */
  char* _IO_write_ptr;	/* Current put pointer. */
  char* _IO_write_end;	/* End of put area. */
  char* _IO_buf_base;	/* Start of reserve area. */
  char* _IO_buf_end;	/* End of reserve area. */
  /* The following fields are used to support backing up and undo. */
  char *_IO_save_base; /* Pointer to start of non-current get area. */
  char *_IO_backup_base;  /* Pointer to first valid character of backup area */
  char *_IO_save_end; /* Pointer to end of non-current get area. */

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;

  
   int _flags2;

  __off_t _old_offset; /* This used to be _offset but it's too small.  */


  /* 1+column number of pbase(); 0 is unknown. */
  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  /*  char* _save_gptr;  char* _save_egptr; */

  _IO_lock_t *_lock;





  


  __off64_t _offset;

  
  
  
  
  
  
   void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;
  /* Make sure we don't get into trouble again.  */
  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;

struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;




 



/* Functions to do I/O and file management for a stream.  */

/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.
   Return number of bytes read.  */
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);

/* Write N bytes pointed to by BUF to COOKIE.  Write all N bytes
   unless there is an error.  Return number of bytes written, or -1 if
   there is an error without writing anything.  If the file has been
   opened for append (__mode.__append set), then set the file pointer
   to the end of the file and then do the write; if not, just write at
   the current file pointer.  */
typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
				 size_t __n);

/* Move COOKIE's file position to *POS bytes from the
   beginning of the file (if W is SEEK_SET),
   the current position (if W is SEEK_CUR),
   or the end of the file (if W is SEEK_END).
   Set *POS to the new file position.
   Returns zero if successful, nonzero if not.  */
typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);

/* Close COOKIE.  */
typedef int __io_close_fn (void *__cookie);












  
  
  
  







			     




extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);







 





























extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));

extern int _IO_peekc_locked (_IO_FILE *__fp);

/* This one is for Emacs. */



extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));







 






extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
			__gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
			 __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));






































			 

			  










#line 77 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 2







 





typedef __off_t off_t;
 








typedef __ssize_t ssize_t;



/* The type of the second argument to `fgetpos' and `fsetpos'.  */


typedef _G_fpos_t fpos_t;
 





/* The possibilities for the third argument to `setvbuf'.  */





/* Default buffer size.  */



/* End of file character.
   Some things throughout the library rely on this being -1.  */



/* The possibilities for the third argument to `fseek'.
   These values should not be changed.  */






/* Default path prefix for `tempnam' and `tmpnam'.  */


/* Get the values:
   L_tmpnam	How long an array of chars must be to be passed to `tmpnam'.
   TMP_MAX	The minimum number of unique filenames generated by tmpnam
   		(and tempnam when it uses tmpnam's name space),
		or tempnam (the two are separate).
   L_ctermid	How long an array to pass to `ctermid'.
   L_cuserid	How long an array to pass to `cuserid'.
   FOPEN_MAX	Minimum number of files that can be open at once.
   FILENAME_MAX	Maximum length of a filename.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/stdio_lim.h" 1
/* Copyright (C) 1994, 1997, 1998, 1999, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */























#line 163 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 2


/* Standard streams.  */
extern struct _IO_FILE *stdin;		/* Standard input stream.  */
extern struct _IO_FILE *stdout;		/* Standard output stream.  */
extern struct _IO_FILE *stderr;		/* Standard error output stream.  */

/* C89/C99 say they're macros.  Make them happy.  */





/* Remove file FILENAME.  */
extern int remove (__const char *__filename) __attribute__ ((__nothrow__));
/* Rename file OLD to NEW.  */
extern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));



/* Rename file OLD relative to OLDFD to NEW relative to NEWFD.  */
extern int renameat (int __oldfd, __const char *__old, int __newfd,
		     __const char *__new) __attribute__ ((__nothrow__));


/* Create a temporary file and open it read/write.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */

extern FILE *tmpfile (void) ;
 

 





/* Generate a temporary filename.  */
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__)) ;



/* This is the reentrant variant of `tmpnam'.  The only difference is
   that it does not allow S to be NULL.  */
extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__)) ;


/* Generate a unique temporary filename using up to five characters of PFX
   if it is not NULL.  The directory to put this file in is searched for
   as follows: First the environment variable "TMPDIR" is checked.
   If it contains the name of a writable directory, that directory is used.
   If not and if DIR is not NULL, that value is checked.  If that fails,
   P_tmpdir is tried and finally "/tmp".  The storage for the filename
   is allocated by `malloc'.  */
extern char *tempnam (__const char *__dir, __const char *__pfx)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;


/* Close STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fclose (FILE *__stream);
/* Flush STREAM, or all streams if STREAM is NULL.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fflush (FILE *__stream);



/* Faster versions when locking is not required.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fflush_unlocked (FILE *__stream);












/* Open a file and create a new stream for it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern FILE *fopen (__const char *__restrict __filename,
		    __const char *__restrict __modes) ;
/* Open a file, replacing an existing stream with it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern FILE *freopen (__const char *__restrict __filename,
		      __const char *__restrict __modes,
		      FILE *__restrict __stream) ;
 

				 
  

				   
				   
  
 






		      

			
			


/* Create a new stream that refers to an existing system file descriptor.  */
extern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__)) ;





			  
			  


/* Create a new stream that refers to a memory buffer.  */
extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes)
  __attribute__ ((__nothrow__)) ;

/* Open a stream that writes into a malloc'd buffer that is expanded as
   necessary.  *BUFLOC and *SIZELOC are updated with the buffer's location
   and the number of characters written on fflush or fclose.  */
extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__)) ;


/* If BUF is NULL, make STREAM unbuffered.
   Else make it use buffer BUF, of size BUFSIZ.  */
extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));
/* Make STREAM use buffering mode MODE.
   If BUF is not NULL, use N bytes of it for buffering;
   else allocate an internal buffer N bytes long.  */
extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
		    int __modes, size_t __n) __attribute__ ((__nothrow__));



/* If BUF is NULL, make STREAM unbuffered.
   Else make it use SIZE bytes of BUF for buffering.  */
extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
		       size_t __size) __attribute__ ((__nothrow__));

/* Make STREAM line-buffered.  */
extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));


/* Write formatted output to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fprintf (FILE *__restrict __stream,
		    __const char *__restrict __format, ...);
/* Write formatted output to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int printf (__const char *__restrict __format, ...);
/* Write formatted output to S.  */
extern int sprintf (char *__restrict __s,
		    __const char *__restrict __format, ...) __attribute__ ((__nothrow__));

/* Write formatted output to S from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
		     __gnuc_va_list __arg);
/* Write formatted output to stdout from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);
/* Write formatted output to S from argument list ARG.  */
extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
		     __gnuc_va_list __arg) __attribute__ ((__nothrow__));




/* Maximum chars of output to write in MAXLEN.  */
extern int snprintf (char *__restrict __s, size_t __maxlen,
		     __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
		      __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));






		      
     

		       
     

		     
     


/* Write formatted output to a file descriptor.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int vdprintf (int __fd, __const char *__restrict __fmt,
		     __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));


/* Read formatted input from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fscanf (FILE *__restrict __stream,
		   __const char *__restrict __format, ...) ;
/* Read formatted input from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int scanf (__const char *__restrict __format, ...) ;
/* Read formatted input from S.  */
extern int sscanf (__const char *__restrict __s,
		   __const char *__restrict __format, ...) __attribute__ ((__nothrow__));



/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */
extern int fscanf (FILE *__restrict __stream,
 __const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf") ;
extern int scanf (__const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf") ;
extern int sscanf (__const char *__restrict __s,
 __const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__));
 
			    


			    









/* Read formatted input from S into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
		    __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;

/* Read formatted input from stdin into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;

/* Read formatted input from S into argument list ARG.  */
extern int vsscanf (__const char *__restrict __s,
		    __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));



/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */
extern int vfscanf 
(FILE *__restrict __s,
 __const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (__const char *__restrict __format,
 __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf 
(__const char *__restrict __s,
 __const char *__restrict __format,
 __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__))
     __attribute__ ((__format__ (__scanf__, 2, 0)));
 
			     
			     

			    

			     
			     








/* Read a character from STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);

/* Read a character from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int getchar (void);


/* The C standard explicitly says this is a macro, so we always do the
   optimization for it.  */



/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);


/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fgetc_unlocked (FILE *__stream);


/* Write a character to STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.

   These functions is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);

/* Write a character to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int putchar (int __c);


/* The C standard explicitly says this can be a macro,
   so we always do the optimization for it.  */



/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fputc_unlocked (int __c, FILE *__stream);


/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);


/* Get a word (int) from STREAM.  */
extern int getw (FILE *__stream);

/* Write a word (int) to STREAM.  */
extern int putw (int __w, FILE *__stream);


/* Get a newline-terminated string of finite length from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;

/* Get a newline-terminated string from stdin, removing the newline.
   DO NOT USE THIS FUNCTION!!  There is no limit on how much it will read.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern char *gets (char *__s) ;










			     


/* Read up to (and including) a DELIMITER from STREAM into *LINEPTR
   (and null-terminate it). *LINEPTR is a pointer returned from malloc (or
   NULL), pointing to *N characters of space.  It is realloc'd as
   necessary.  Returns the number of characters read (not including the
   null terminator), or -1 on error or EOF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern __ssize_t __getdelim (char **__restrict __lineptr,
			       size_t *__restrict __n, int __delimiter,
			       FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
			     size_t *__restrict __n, int __delimiter,
			     FILE *__restrict __stream) ;

/* Like `getdelim', but reads up to a newline.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern __ssize_t getline (char **__restrict __lineptr,
			    size_t *__restrict __n,
			    FILE *__restrict __stream) ;


/* Write a string to STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);

/* Write a string, followed by a newline, to stdout.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int puts (__const char *__s);


/* Push a character back onto the input buffer of STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int ungetc (int __c, FILE *__stream);


/* Read chunks of generic data from STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern size_t fread (void *__restrict __ptr, size_t __size,
		     size_t __n, FILE *__restrict __stream) ;
/* Write chunks of generic data to STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
		      size_t __n, FILE *__restrict __s) ;










			   


/* Faster versions when locking is not necessary.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
			      size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
			       size_t __n, FILE *__restrict __stream) ;


/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fseek (FILE *__stream, long int __off, int __whence);
/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern long int ftell (FILE *__stream) ;
/* Rewind to the beginning of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void rewind (FILE *__stream);


/* The Single Unix Specification, Version 2, specifies an alternative,
   more adequate interface for the two functions above which deal with
   file offset.  `long int' is not the right type.  These definitions
   are originally defined in the Large File Support API.  */



/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fseeko (FILE *__stream, __off_t __off, int __whence);
/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern __off_t ftello (FILE *__stream) ;
 

		       
		       

 






/* Get STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);
/* Set STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
 

				 

		       
 












/* Clear the error and EOF indicators for STREAM.  */
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));
/* Return the EOF indicator for STREAM.  */
extern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;
/* Return the error indicator for STREAM.  */
extern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;



/* Faster versions when locking is not required.  */
extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;


/* Print a message describing the meaning of the value of errno.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void perror (__const char *__s);


/* Provide the declarations for `sys_errlist' and `sys_nerr' if they
   are available on this system.  Even if available, these variables
   should not be used directly.  The `strerror' function provides
   all the necessary functionality.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/sys_errlist.h" 1
/* Declare sys_errlist and sys_nerr, or don't.  Compatibility (do) version.
   Copyright (C) 2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* sys_errlist and sys_nerr are deprecated.  Use strerror instead.  */


extern int sys_nerr;
extern __const char *__const sys_errlist[];





#line 850 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 2



/* Return the system file descriptor for STREAM.  */
extern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;


/* Faster version when locking is not required.  */
extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;


/* Create a new stream connected to a pipe running the given command.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern FILE *popen (__const char *__command, __const char *__modes) ;

/* Close a stream opened by popen and return the status of its child.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int pclose (FILE *__stream);


/* Return the name of the controlling terminal.  */
extern char *ctermid (char *__s) __attribute__ ((__nothrow__));










			   
     

			    
			    
     


/* These are defined in POSIX.1:1996.  */

/* Acquire ownership of STREAM.  */
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));

/* Try to acquire ownership of STREAM but do not block if it is not
   possible.  */
extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;

/* Relinquish the ownership granted for STREAM.  */
extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));








/* If we are compiling with optimizing read this file.  It contains
   several optimizing inline functions and macros.  */













#line 146 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2

/* Get size_t, wchar_t and NULL from <stddef.h>.  */





#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */


































/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, "Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type." */

















/* FreeBSD 5 can't be handled well using "traditional" logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */














typedef int wchar_t;































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 35 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2







/* XPG requires a few symbols from <sys/wait.h> being defined.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/waitflags.h" 1
/* Definitions of flag bits for `waitpid' et al.
   Copyright (C) 1992,1996,1997,2000,2004,2005 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Bits in the third argument to `waitpid'.  */



/* Bits in the fourth argument to `waitid'.  */








#line 44 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/waitstatus.h" 1
/* Definitions of status bits for `wait' et al.
   Copyright (C) 1992,1994,1996,1997,2000,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Everything extant so far uses these same bits.  */


/* If WIFEXITED(STATUS), the low-order 8 bits of the status.  */


/* If WIFSIGNALED(STATUS), the terminating signal.  */


/* If WIFSTOPPED(STATUS), the signal that stopped the child.  */


/* Nonzero if STATUS indicates normal termination.  */


/* Nonzero if STATUS indicates termination by a signal.  */



/* Nonzero if STATUS indicates the child is stopped.  */


/* Nonzero if STATUS indicates the child continued after a stop.  We only
   define this if <bits/waitflags.h> provides the WCONTINUED flag bit.  */



/* Nonzero if STATUS indicates the child dumped core.  */


/* Macros for constructing status values.  */







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 67 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/waitstatus.h" 2

union wait
  {
    int w_status;
    struct
      {

	unsigned int __w_termsig:7; /* Terminating signal.  */
	unsigned int __w_coredump:1; /* Set if dumped core.  */
	unsigned int __w_retcode:8; /* Return code if exited normally.  */
	unsigned int:16;


	
	
	
	

      } __wait_terminated;
    struct
      {

	unsigned int __w_stopval:8; /* W_STOPPED if stopped.  */
	unsigned int __w_stopsig:8; /* Stopping signal.  */
	unsigned int:16;


	
	
	

      } __wait_stopped;
  };








#line 45 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2


/* Lots of hair to allow traditional BSD use of `union wait'
   as well as POSIX.1 use of `int' for the status word.  */





 

/* This is the type of the argument to `wait'.  The funky union
   causes redeclarations with either `int *' or `union wait *' to be
   allowed without complaint.  __WAIT_STATUS_DEFN is the type used in
   the actual function definitions.  */




 /* This works in GCC 2.6.1 and later.  */
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));


 




/* Define the macros <sys/wait.h> also would define this way.  */











/* Returned by `div'.  */
typedef struct
  {
    int quot;			/* Quotient.  */
    int rem;			/* Remainder.  */
  } div_t;

/* Returned by `ldiv'.  */

typedef struct
  {
    long int quot;		/* Quotient.  */
    long int rem;		/* Remainder.  */
  } ldiv_t;






/* Returned by `lldiv'.  */
__extension__ typedef struct
  {
    long long int quot;		/* Quotient.  */
    long long int rem;		/* Remainder.  */
  } lldiv_t;



/* The largest number rand will return (same as INT_MAX).  */



/* We define these the same for all machines.
   Changes from this to the outside world should be done in `_exit'.  */




/* Maximum length of a multibyte character in the current locale.  */

extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;



/* Convert a string to a floating-point number.  */
extern double atof (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an integer.  */
extern int atoi (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to a long integer.  */
extern long int atol (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




/* Convert a string to a long long integer.  */
__extension__ extern long long int atoll (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a floating-point number.  */
extern double strtod (__const char *__restrict __nptr,
		      char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




/* Likewise for `float' and `long double' sizes of floating-point numbers.  */
extern float strtof (__const char *__restrict __nptr,
		     char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern long double strtold (__const char *__restrict __nptr,
			    char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a long integer.  */
extern long int strtol (__const char *__restrict __nptr,
			char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned long integer.  */
extern unsigned long int strtoul (__const char *__restrict __nptr,
				  char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a quadword integer.  */
__extension__
extern long long int strtoq (__const char *__restrict __nptr,
			     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned quadword integer.  */
__extension__
extern unsigned long long int strtouq (__const char *__restrict __nptr,
				       char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a quadword integer.  */
__extension__
extern long long int strtoll (__const char *__restrict __nptr,
			      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned quadword integer.  */
__extension__
extern unsigned long long int strtoull (__const char *__restrict __nptr,
					char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  





/* Convert N to base 64 using the digits "./0-9A-Za-z", least-significant
   digit first.  Returns a pointer to static storage overwritten by the
   next call.  */
extern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;

/* Read a number from a string S in base 64 as above.  */
extern long int a64l (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 32 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;



typedef __loff_t loff_t;



typedef __ino_t ino_t;
 








typedef __dev_t dev_t;



typedef __gid_t gid_t;



typedef __mode_t mode_t;



typedef __nlink_t nlink_t;



typedef __uid_t uid_t;





 








typedef __pid_t pid_t;



typedef __id_t id_t;








typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;




typedef __key_t key_t;








#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */





























#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 58 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2


/* Returned by `clock'.  */
typedef __clock_t clock_t;










#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 74 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2


/* Returned by `time'.  */
typedef __time_t time_t;










#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 91 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* Clock ID used in clock and timer functions.  */
typedef __clockid_t clockid_t;







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 103 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* Timer ID returned by `timer_create'.  */
typedef __timer_t timer_t;













  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 135 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2












#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 149 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2


/* Old compatibility names for C types.  */
typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;

/* These size-specific names are used by some of the inet code.  */










 








 



 /* For GCC 2.7 and later, we can use specific type-size attributes.  */







typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));

typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));


/* Some code from BIND tests this macro to see if the types above are
   defined.  */





/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 219 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2

/* It also defines `fd_set' and the FD_* macros for `select'.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 1
/* `fd_set' type and related macros, and `select'/`pselect' declarations.
   Copyright (C) 1996-2003, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*	POSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

/* Get definition of needed basic types.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

/* Get __FD_* definitions.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/select.h" 1
/* Copyright (C) 1997,1998,1999,2001,2008,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/select.h" 2





 












 














#line 33 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

/* Get __sigset_t.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




typedef int __sig_atomic_t;

/* A `sigset_t' has a bit for each signal.  */


typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */

















































































#line 36 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2



typedef __sigset_t sigset_t;

/* Get definition of timer specification structures.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */


















































































#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 118 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* POSIX.1b structure for a time value.  This is like a `struct timeval' but
   has nanoseconds instead of microseconds.  */
struct timespec
  {
    __time_t tv_sec;		/* Seconds.  */
    long int tv_nsec;		/* Nanoseconds.  */
  };










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 46 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */













































#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 73 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/time.h" 2

/* A time value that is accurate to the nearest
   microsecond but also has a range of years.  */
struct timeval
  {
    __time_t tv_sec;		/* Seconds.  */
    __suseconds_t tv_usec;	/* Microseconds.  */
  };


#line 48 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2


typedef __suseconds_t suseconds_t;


/* The fd_set member is required to be an array of longs.  */
typedef long int __fd_mask;

/* Some versions of <linux/posix_types.h> define these macros.  */



/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */




/* fd_set for select and pselect.  */
typedef struct
  {
    /* XPG4.2 requires this member name.  Otherwise avoid the name
       from the global namespace.  */

    

     __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;

/* Maximum number of file descriptors in `fd_set'.  */



/* Sometimes the fd_set member is assumed to have this type.  */
typedef __fd_mask fd_mask;

/* Number of bits per word of `fd_set' (some code assumes this is 32).  */


/* Access macros for `fd_set'.  */








/* Check the first NFDS descriptors each in READFDS (if not NULL) for read
   readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS
   (if not NULL) for exceptional conditions.  If TIMEOUT is not NULL, time out
   after waiting the interval specified therein.  Returns the number of ready
   descriptors, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int select (int __nfds, fd_set *__restrict __readfds,
		   fd_set *__restrict __writefds,
		   fd_set *__restrict __exceptfds,
		   struct timeval *__restrict __timeout);


/* Same as above only that the TIMEOUT value is given with higher
   resolution and a sigmask which is been set temporarily.  This version
   should be used.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int pselect (int __nfds, fd_set *__restrict __readfds,
		    fd_set *__restrict __writefds,
		    fd_set *__restrict __exceptfds,
		    const struct timespec *__restrict __timeout,
		    const __sigset_t *__restrict __sigmask);




#line 222 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2

/* BSD defines these symbols, so we follow.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/sysmacros.h" 1
/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996, 1997, 1999, 2003, 2004, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/sysmacros.h" 2

/* If the compiler does not know long long it is out of luck.  We are
   not going to hack weird hacks to support the dev_t representation
   they need.  */

__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
					       unsigned int __minor)
     __attribute__ ((__nothrow__));





  





  





  
	  
	  


/* Access the functions with their traditional names.  */





#line 225 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2


typedef __blksize_t blksize_t;


/* Types from the Large File Support interface.  */


typedef __blkcnt_t blkcnt_t;	 /* Type to count number of disk blocks.  */



typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */



typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */


 

















/* Now add the thread types.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/pthreadtypes.h" 1
/* Copyright (C) 2002,2003,2004,2005,2006,2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@redhat.com>, 2002.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/pthreadtypes.h" 2











 









/* Thread identifiers.  The structure of the attribute type is not
   exposed on purpose.  */
typedef unsigned long int pthread_t;


typedef union
{
  char __size[56];
  long int __align;
} pthread_attr_t;



typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
 

  


/* Data structures for mutex handling.  The structure of the attribute
   type is not exposed on purpose.  */
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;

    /* KIND must stay at this position in the structure to maintain
       binary compatibility.  */
    int __kind;

    int __spins;
    __pthread_list_t __list;

     
    
    
      
      
    

  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;


/* Data structure for conditional variable handling.  The structure of
   the attribute type is not exposed on purpose.  */
typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;


/* Keys for thread-specific data */
typedef unsigned int pthread_key_t;


/* Once-only execution */
typedef int pthread_once_t;



/* Data structure for read-write lock variable handling.  The
   structure of the attribute type is not exposed on purpose.  */
typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    unsigned long int __pad1;
    unsigned long int __pad2;
    /* FLAGS must stay at this position in the structure to maintain
       binary compatibility.  */
    unsigned int __flags;
  } __data;
   
  
    
    
    
    
    
    
    

    
    
    
    
    
  

  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;


/* POSIX spinlock data type.  */
typedef volatile int pthread_spinlock_t;


/* POSIX barriers data type.  The structure of the type is
   deliberately not exposed.  */
typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;






#line 273 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2




#line 322 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2

/* These are the functions that actually do things.  The `random', `srandom',
   `initstate' and `setstate' functions are those from BSD Unices.
   The `rand' and `srand' functions are required by the ANSI standard.
   We provide both interfaces to the same random number generator.  */
/* Return a random long integer between 0 and RAND_MAX inclusive.  */
extern long int random (void) __attribute__ ((__nothrow__));

/* Seed the random number generator with the given number.  */
extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));

/* Initialize the random number generator to use state buffer STATEBUF,
   of length STATELEN, and seed it with SEED.  Optimal lengths are 8, 16,
   32, 64, 128 and 256, the bigger the better; values less than 8 will
   cause an error and values greater than 256 will be rounded down.  */
extern char *initstate (unsigned int __seed, char *__statebuf,
			size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Switch the random number generator to state buffer STATEBUF,
   which should have been previously initialized by `initstate'.  */
extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



/* Reentrant versions of the `random' family of functions.
   These functions all use the following data structure to contain
   state, rather than global state variables.  */

struct random_data
  {
    int32_t *fptr;		/* Front pointer.  */
    int32_t *rptr;		/* Rear pointer.  */
    int32_t *state;		/* Array of state values.  */
    int rand_type;		/* Type of random number generator.  */
    int rand_deg;		/* Degree of random number generator.  */
    int rand_sep;		/* Distance between front and rear.  */
    int32_t *end_ptr;		/* Pointer behind state table.  */
  };

extern int random_r (struct random_data *__restrict __buf,
		     int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
			size_t __statelen,
			struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
		       struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



/* Return a random integer between 0 and RAND_MAX inclusive.  */
extern int rand (void) __attribute__ ((__nothrow__));
/* Seed the random number generator with the given number.  */
extern void srand (unsigned int __seed) __attribute__ ((__nothrow__));



/* Reentrant interface according to POSIX.1.  */
extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));


/* System V style 48-bit random number generator functions.  */

/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */
extern double drand48 (void) __attribute__ ((__nothrow__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return non-negative, long integer in [0,2^31).  */
extern long int lrand48 (void) __attribute__ ((__nothrow__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return signed, long integers in [-2^31,2^31).  */
extern long int mrand48 (void) __attribute__ ((__nothrow__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Seed random number generator.  */
extern void srand48 (long int __seedval) __attribute__ ((__nothrow__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Data structure for communication with thread safe versions.  This
   type is to be regarded as opaque.  It's only exported because users
   have to allocate objects of this type.  */
struct drand48_data
  {
    unsigned short int __x[3];	/* Current state.  */
    unsigned short int __old_x[3]; /* Old state.  */
    unsigned short int __c;	/* Additive const. in congruential formula.  */
    unsigned short int __init;	/* Flag for initializing.  */
    unsigned long long int __a;	/* Factor in congruential formula.  */
  };

/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */
extern int drand48_r (struct drand48_data *__restrict __buffer,
		      double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return non-negative, long integer in [0,2^31).  */
extern int lrand48_r (struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return signed, long integers in [-2^31,2^31).  */
extern int mrand48_r (struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Seed random number generator.  */
extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
		     struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
		      struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






/* Allocate SIZE bytes of memory.  */
extern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;
/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;




/* Re-allocate the previously allocated block
   in PTR, making the new block SIZE bytes long.  */
/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */
extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__warn_unused_result__));
/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
extern void free (void *__ptr) __attribute__ ((__nothrow__));



/* Free a block.  An alias for `free'.	(Sun Unices).  */
extern void cfree (void *__ptr) __attribute__ ((__nothrow__));


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/alloca.h" 1
/* Copyright (C) 1992, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/alloca.h" 2


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/alloca.h" 2



/* Remove any previous definitions.  */


/* Allocate a block that will be freed when the calling function exits.  */
extern void *alloca (size_t __size) __attribute__ ((__nothrow__));







#line 499 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2


/* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */
extern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;


/* Allocate memory of SIZE bytes with an alignment of ALIGNMENT.  */
extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Abort execution and generate a core-dump.  */
extern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


/* Register a function to be called when `exit' is called.  */
extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







     
 





/* Register a function to be called with the status
   given to `exit' and the given argument.  */
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Call all functions registered with `atexit' and `on_exit',
   in the reverse of the order in which they were registered,
   perform stdio cleanup, and terminate program execution with STATUS.  */
extern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));













/* Terminate the program with STATUS without calling any of the
   functions registered with `atexit' or `on_exit'.  */
extern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



/* Return the value of envariable NAME, or NULL if it doesn't exist.  */
extern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* This function is similar to the above but returns NULL if the
   programs is running with SUID or SGID enabled.  */
extern char *__secure_getenv (__const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* The SVID says this is in <stdio.h>, but this seems a better place.	*/
/* Put STRING, which is of the form "NAME=VALUE", in the environment.
   If there is no `=', remove NAME from the environment.  */
extern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set NAME to VALUE in the environment.
   If REPLACE is nonzero, overwrite an existing value.  */
extern int setenv (__const char *__name, __const char *__value, int __replace)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Remove the variable NAME from the environment.  */
extern int unsetenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* The `clearenv' was planned to be added to POSIX.1 but probably
   never made it.  Nevertheless the POSIX.9 standard (POSIX bindings
   for Fortran 77) requires this function.  */
extern int clearenv (void) __attribute__ ((__nothrow__));


/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the file name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique file name.  */
extern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the filename unique.
   Returns a file descriptor open on the file for reading and writing,
   or -1 if it cannot create a uniquely-named file.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
 

     
 







/* Similar to mkstemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
 

		       
 




     



/* Create a unique temporary directory from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the directory name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique name.
   The directory is created mode 700.  */
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;










 

     
 













     
 

				   
     
 




     



/* Execute the given line as a shell command.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int system (__const char *__command) ;







     


/* Return the canonical absolute name of file NAME.  If RESOLVED is
   null, the result is malloc'd; otherwise, if the canonical name is
   PATH_MAX chars or more, returns null with `errno' set to
   ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  */
extern char *realpath (__const char *__restrict __name,
		       char *__restrict __resolved) __attribute__ ((__nothrow__)) ;

/* Shorthand for type of comparison functions.  */


typedef int (*__compar_fn_t) (__const void *, __const void *);









/* Do a binary search for KEY in BASE, which consists of NMEMB elements
   of SIZE bytes each, using COMPAR to perform the comparisons.  */
extern void *bsearch (__const void *__key, __const void *__base,
		      size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;

/* Sort NMEMB elements of BASE, of SIZE bytes each,
   using COMPAR to perform the comparisons.  */
extern void qsort (void *__base, size_t __nmemb, size_t __size,
		   __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));


		     
  

/* Return the absolute value of X.  */
extern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;


/* Return the `div_t', `ldiv_t' or `lldiv_t' representation
   of the value of NUMER over DENOM. */
/* GCC may have built-ins for these someday.  */
extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
				    long long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



/* Convert floating point numbers to strings.  The returned values are
   valid only until another call to the same function.  */

/* Convert VALUE to a string with NDIGIT digits and return a pointer to
   this.  Set *DECPT with the position of the decimal character and *SIGN
   with the sign of the number.  */
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;

/* Convert VALUE to a string rounded to NDIGIT decimal digits.  Set *DECPT
   with the position of the decimal character and *SIGN with the sign of
   the number.  */
extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;

/* If possible convert VALUE to a string with NDIGIT significant digits.
   Otherwise use exponential representation.  The resulting string will
   be written to BUF.  */
extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;



/* Long double versions of above functions.  */
extern char *qecvt (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;


/* Reentrant version of the functions above which provide their own
   buffers.  */
extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign, char *__restrict __buf,
		   size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign, char *__restrict __buf,
		   size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign,
		    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign,
		    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));



/* Return the length of the multibyte character
   in S, which is no longer than N.  */
extern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;
/* Return the length of the given multibyte character,
   putting its `wchar_t' representation in *PWC.  */
extern int mbtowc (wchar_t *__restrict __pwc,
		   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;
/* Put the multibyte character represented
   by WCHAR in S, returning its length.  */
extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;


/* Convert a multibyte string to a wide char string.  */
extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
			__const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));
/* Convert a wide char string to multibyte string.  */
extern size_t wcstombs (char *__restrict __s,
			__const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__));




/* Determine whether the string value of RESPONSE matches the affirmation
   or negative response expression as specified by the LC_MESSAGES category
   in the program's current locale.  Returns 1 if affirmative, 0 if
   negative, and -1 if not matching.  */
extern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Parse comma separated suboption from *OPTIONP and match against
   strings in TOKENS.  If found return index and set *VALUEP to
   optional value introduced by an equal sign.  If the suboption is
   not part of TOKENS return in *VALUEP beginning of unknown
   suboption.  On exit *OPTIONP is set to the beginning of the next
   token or at the terminating NUL character.  */
extern int getsubopt (char **__restrict __optionp,
		      char *__const *__restrict __tokens,
		      char **__restrict __valuep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;





/* X/Open pseudo terminal handling.  */


























     





/* Put the 1 minute, 5 minute and 15 minute load averages into the first
   NELEM elements of LOADAVG.  Return the number written (never more than
   three, but may be less than NELEM), or -1 if an error occurred.  */
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Define some macros helping to catch buffer overflows.  */












#line 147 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 2



/* Get size_t and NULL from <stddef.h>.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 36 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 2

/* Tell the caller that we provide correct C++ prototypes.  */




/* Copy N bytes of SRC to DEST.  */
extern void *memcpy (void *__restrict __dest,
		     __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Copy N bytes of SRC to DEST, guaranteeing
   correct behavior for overlapping strings.  */
extern void *memmove (void *__dest, __const void *__src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Copy no more than N bytes of SRC to DEST, stopping when C is found.
   Return the position in DEST one byte past where C was copied,
   or NULL if C was not found in the first N bytes of SRC.  */

extern void *memccpy (void *__restrict __dest, __const void *__restrict __src,
		      int __c, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Set N bytes of S to C.  */
extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Compare N bytes of S1 and S2.  */
extern int memcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Search N bytes of S for C.  */




      

      





  





  



 extern void *memchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));








     

     
 
     




      

      
 
      



/* Copy SRC to DEST.  */
extern char *strcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Copy no more than N characters of SRC to DEST.  */
extern char *strncpy (char *__restrict __dest,
		      __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Append SRC onto DEST.  */
extern char *strcat (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Append no more than N characters from SRC onto DEST.  */
extern char *strncat (char *__restrict __dest, __const char *__restrict __src,
		      size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare S1 and S2.  */
extern int strcmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Compare N characters of S1 and S2.  */
extern int strncmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare the collated forms of S1 and S2.  */
extern int strcoll (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Put a transformation of SRC into no more than N bytes of DEST.  */
extern size_t strxfrm (char *__restrict __dest,
		       __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



/* The following functions are equivalent to the both above but they
   take the locale they use for the collation as an extra argument.
   This is not standardsized but something like will come.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
  

  
  
  
  

  
  






#line 164 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 2

/* Compare the collated forms of S1 and S2 using rules from L.  */
extern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));
/* Put a transformation of SRC into no more than N bytes of DEST.  */
extern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,
			 __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));


/* Duplicate S, returning an identical malloc'd string.  */
extern char *strdup (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));

/* Return a malloc'd copy of at most N bytes of STRING.  The
   resultant string is terminated even if no null terminator
   appears before STRING[N].  */

extern char *strndup (__const char *__string, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
























/* Find the first occurrence of C in S.  */




     

     





  





  



 extern char *strchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Find the last occurrence of C in S.  */




     

     





  





  



 extern char *strrchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));








     

     
 
     



/* Return the length of the initial segment of S which
   consists entirely of characters not in REJECT.  */
extern size_t strcspn (__const char *__s, __const char *__reject)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Return the length of the initial segment of S which
   consists entirely of characters in ACCEPT.  */
extern size_t strspn (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Find the first occurrence in S of any character in ACCEPT.  */




     

     





  





  



 extern char *strpbrk (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Find the first occurrence of NEEDLE in HAYSTACK.  */




     

			     
     





  





  



 extern char *strstr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Divide S into tokens separated by characters in DELIM.  */
extern char *strtok (char *__restrict __s, __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Divide S into tokens separated by characters in DELIM.  Information
   passed between calls are stored in SAVE_PTR.  */
extern char *__strtok_r (char *__restrict __s,
			 __const char *__restrict __delim,
			 char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,
		       char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));





     

				       
     
 
     







		     
     




			
     

		      
     


/* Return the length of S.  */
extern size_t strlen (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



/* Find the length of STRING, but scan at most MAXLEN characters.
   If no '\0' terminator is found in that many characters, return MAXLEN.  */
extern size_t strnlen (__const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


/* Return a string describing the meaning of the `errno' code in ERRNUM.  */
extern char *strerror (int __errnum) __attribute__ ((__nothrow__));


/* Reentrant version of `strerror'.
   There are 2 flavors of `strerror_r', GNU which returns the string
   and may or may not use the supplied temporary buffer and POSIX one
   which fills the string into the buffer.
   To use the POSIX version, -D_XOPEN_SOURCE=600 or -D_POSIX_C_SOURCE=200112L
   without -D_GNU_SOURCE is needed, otherwise the GNU version is
   preferred.  */

/* Fill BUF with a string describing the meaning of the `errno' code in
   ERRNUM.  */

extern int strerror_r 
(int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
 
     


 


     



/* Translate error number to string according to the locale L.  */
extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__));

/* We define this function always since `bzero' is sometimes needed when
   the namespace rules does not allow this.  */
extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Copy N bytes of SRC to DEST (like memmove, but args reversed).  */
extern void bcopy (__const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Set N bytes of S to 0.  */
extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Compare N bytes of S1 and S2 (same as memcmp).  */
extern int bcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Find the first occurrence of C in S (same as strchr).  */




     

     





  





  



 extern char *index (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Find the last occurrence of C in S (same as strrchr).  */




     

     





  





  



 extern char *rindex (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Return the position of the first bit set in I, or 0 if none are set.
   The least-significant bit is position 1, the most-significant 32.  */
extern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* The following two functions are non-standard but necessary for non-32 bit
   platforms.  */




     


/* Compare S1 and S2, ignoring case.  */
extern int strcasecmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare no more than N chars of S1 and S2, ignoring case.  */
extern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





			 
     


			  
     


/* Return the next DELIM-delimited token from *STRINGP,
   terminating it with a '\0', and update *STRINGP to point past it.  */
extern char *strsep (char **__restrict __stringp,
		     __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Return a string describing the meaning of the signal number in SIG.  */
extern char *strsignal (int __sig) __attribute__ ((__nothrow__));

/* Copy SRC to DEST, returning the address of the terminating '\0' in DEST.  */
extern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Copy no more than N characters of SRC to DEST, returning the address of
   the last character written into DEST.  */
extern char *__stpncpy (char *__restrict __dest,
			__const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
		      __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));




     














     

     
 





































#line 148 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdbool.h" 1
/* Copyright (C) 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.16  Boolean type and values  <stdbool.h>
 */









 






/* Signal that all the definitions are present.  */



#line 149 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */




#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 15 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.h" 2

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdbool.h" 1
/* Copyright (C) 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.16  Boolean type and values  <stdbool.h>
 */









 










#line 17 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.h" 2

struct file {
	struct file *next;
	struct file *parent;
	char *name;
	int lineno;
	int flags;
};





typedef enum tristate {
	no, mod, yes
} tristate;

enum expr_type {
	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE
};

union expr_data {
	struct expr *expr;
	struct symbol *sym;
};

struct expr {
	enum expr_type type;
	union expr_data left, right;
};





struct expr_value {
	struct expr *expr;
	tristate tri;
};

struct symbol_value {
	void *val;
	tristate tri;
};

enum symbol_type {
	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER
};

struct symbol {
	struct symbol *next;
	char *name;
	char *help;
	enum symbol_type type;
	struct symbol_value curr, user;
	tristate visible;
	int flags;
	struct property *prop;
	struct expr *dep, *dep2;
	struct expr_value rev_dep;
};
























enum prop_type {
	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE
};

struct property {
	struct property *next;
	struct symbol *sym;
	enum prop_type type;
	const char *text;
	struct expr_value visible;
	struct expr *expr;
	struct menu *menu;
	struct file *file;
	int lineno;
};










struct menu {
	struct menu *next;
	struct menu *parent;
	struct menu *list;
	struct symbol *sym;
	struct property *prompt;
	struct expr *dep;
	unsigned int flags;
	//char *help;
	struct file *file;
	int lineno;
	void *data;
};





extern struct file *file_list;
extern struct file *current_file;
struct file *lookup_file(const char *name);

extern struct symbol symbol_yes, symbol_no, symbol_mod;
extern struct symbol *modules_sym;
extern int cdebug;
struct expr *expr_alloc_symbol(struct symbol *sym);
struct expr *expr_alloc_one(enum expr_type type, struct expr *ce);
struct expr *expr_alloc_two(enum expr_type type, struct expr *e1, struct expr *e2);
struct expr *expr_alloc_comp(enum expr_type type, struct symbol *s1, struct symbol *s2);
struct expr *expr_alloc_and(struct expr *e1, struct expr *e2);
struct expr *expr_alloc_or(struct expr *e1, struct expr *e2);
struct expr *expr_copy(struct expr *org);
void expr_free(struct expr *e);
int expr_eq(struct expr *e1, struct expr *e2);
void expr_eliminate_eq(struct expr **ep1, struct expr **ep2);
tristate expr_calc_value(struct expr *e);
struct expr *expr_eliminate_yn(struct expr *e);
struct expr *expr_trans_bool(struct expr *e);
struct expr *expr_eliminate_dups(struct expr *e);
struct expr *expr_transform(struct expr *e);
int expr_contains_symbol(struct expr *dep, struct symbol *sym);
_Bool expr_depends_symbol(struct expr *dep, struct symbol *sym);
struct expr *expr_extract_eq_and(struct expr **ep1, struct expr **ep2);
struct expr *expr_extract_eq_or(struct expr **ep1, struct expr **ep2);
void expr_extract_eq(enum expr_type type, struct expr **ep, struct expr **ep1, struct expr **ep2);
struct expr *expr_trans_compare(struct expr *e, enum expr_type type, struct symbol *sym);

void expr_fprint(struct expr *e, FILE *out);
struct gstr; /* forward */
void expr_gstr_print(struct expr *e, struct gstr *gs);

static inline int expr_is_yes(struct expr *e)
{
	return !e || (e->type == E_SYMBOL && e->left.sym == &symbol_yes);
}

static inline int expr_is_no(struct expr *e)
{
	return e && (e->type == E_SYMBOL && e->left.sym == &symbol_no);
}





#line 11 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 2


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/libintl.h" 1
/* Message catalogs for internationalization.
   Copyright (C) 1995-2002, 2004, 2005 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   This file is derived from the file libgettext.h in the GNU gettext package.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/libintl.h" 2

/* We define an additional symbol to signal that we use the GNU
   implementation of gettext.  */


/* Provide information about the supported file formats.  Returns the
   maximum minor revision number supported for a given major revision.  */





/* Look up MSGID in the current default message catalog for the current
   LC_MESSAGES locale.  If not found, returns MSGID itself (the default
   text).  */
extern char *gettext (__const char *__msgid)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (1)));

/* Look up MSGID in the DOMAINNAME message catalog for the current
   LC_MESSAGES locale.  */
extern char *dgettext (__const char *__domainname, __const char *__msgid)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));
extern char *__dgettext (__const char *__domainname, __const char *__msgid)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));

/* Look up MSGID in the DOMAINNAME message catalog for the current CATEGORY
   locale.  */
extern char *dcgettext (__const char *__domainname,
			__const char *__msgid, int __category)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));
extern char *__dcgettext (__const char *__domainname,
			  __const char *__msgid, int __category)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2)));


/* Similar to `gettext' but select the plural form corresponding to the
   number N.  */
extern char *ngettext (__const char *__msgid1, __const char *__msgid2,
		       unsigned long int __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (1))) __attribute__ ((__format_arg__ (2)));

/* Similar to `dgettext' but select the plural form corresponding to the
   number N.  */
extern char *dngettext (__const char *__domainname, __const char *__msgid1,
			__const char *__msgid2, unsigned long int __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2))) __attribute__ ((__format_arg__ (3)));

/* Similar to `dcgettext' but select the plural form corresponding to the
   number N.  */
extern char *dcngettext (__const char *__domainname, __const char *__msgid1,
			 __const char *__msgid2, unsigned long int __n,
			 int __category)
     __attribute__ ((__nothrow__)) __attribute__ ((__format_arg__ (2))) __attribute__ ((__format_arg__ (3)));


/* Set the current default message catalog to DOMAINNAME.
   If DOMAINNAME is null, return the current default.
   If DOMAINNAME is "", reset to the default of "messages".  */
extern char *textdomain (__const char *__domainname) __attribute__ ((__nothrow__));

/* Specify that the DOMAINNAME message catalog will be found
   in DIRNAME rather than in the system locale data base.  */
extern char *bindtextdomain (__const char *__domainname,
			     __const char *__dirname) __attribute__ ((__nothrow__));

/* Specify the character encoding in which the messages from the
   DOMAINNAME message catalog will be returned.  */
extern char *bind_textdomain_codeset (__const char *__domainname,
				      __const char *__codeset) __attribute__ ((__nothrow__));


/* Optimized version of the function above.  */


























#line 14 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 2
 








 


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc_proto.h" 1

/* confdata.c */
extern void conf_parse (const char *name);
extern int conf_read (const char *name);
extern int conf_read_simple (const char *name);
extern int conf_write (const char *name);

/* menu.c */
extern struct menu rootmenu ;

extern _Bool menu_is_visible (struct menu *menu);
extern const char * menu_get_prompt (struct menu *menu);
extern struct menu * menu_get_root_menu (struct menu *menu);
extern struct menu * menu_get_parent_menu (struct menu *menu);

/* symbol.c */
extern struct symbol * symbol_hash [257];
extern int sym_change_count ;

extern struct symbol * sym_lookup (const char *name, int isconst);
extern struct symbol * sym_find (const char *name);
extern struct symbol ** sym_re_search (const char *pattern);
extern const char * sym_type_name (enum symbol_type type);
extern void sym_calc_value (struct symbol *sym);
extern enum symbol_type sym_get_type (struct symbol *sym);
extern _Bool sym_tristate_within_range (struct symbol *sym,tristate tri);
extern _Bool sym_set_tristate_value (struct symbol *sym,tristate tri);
extern tristate sym_toggle_tristate_value (struct symbol *sym);
extern _Bool sym_string_valid (struct symbol *sym, const char *newval);
extern _Bool sym_string_within_range (struct symbol *sym, const char *str);
extern _Bool sym_set_string_value (struct symbol *sym, const char *newval);
extern _Bool sym_is_changable (struct symbol *sym);
extern struct property * sym_get_choice_prop (struct symbol *sym);
extern struct property * sym_get_default_prop (struct symbol *sym);
extern const char * sym_get_string_value (struct symbol *sym);

extern const char * prop_get_type_name (enum prop_type type);

/* expr.c */
extern int expr_compare_type (enum expr_type t1, enum expr_type t2);
extern void expr_print (struct expr *e, void(*fn)(void *, const char *), void *data, int prevtoken);
#line 31 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 2














struct kconf_id {
	int name;
	int token;
	unsigned int flags;
	enum symbol_type stype;
};

int zconfparse(void);
void zconfdump(FILE *out);

extern int zconfdebug;
void zconf_starthelp(void);
FILE *zconf_fopen(const char *name);
void zconf_initscan(const char *name);
void zconf_nextfile(const char *name);
int zconf_lineno(void);
char *zconf_curname(void);

/* confdata.c */
extern const char conf_def_filename[];

char *conf_get_default_confname(void);

/* kconfig_load.c */
void kconfig_load(void);

/* menu.c */
void menu_init(void);
struct menu *menu_add_menu(void);
void menu_end_menu(void);
void menu_add_entry(struct symbol *sym);
void menu_end_entry(void);
void menu_add_dep(struct expr *dep);
struct property *menu_add_prop(enum prop_type type, char *prompt, struct expr *expr, struct expr *dep);
struct property *menu_add_prompt(enum prop_type type, char *prompt, struct expr *dep);
void menu_add_expr(enum prop_type type, struct expr *expr, struct expr *dep);
void menu_add_symbol(enum prop_type type, struct symbol *sym, struct expr *dep);
void menu_finalize(struct menu *parent);
void menu_set_type(int type);

/* util.c */
struct file *file_lookup(const char *name);
int file_write_dep(const char *name);

struct gstr {
	size_t len;
	char  *s;
};
struct gstr str_new(void);
struct gstr str_assign(const char *s);
void str_free(struct gstr *gs);
void str_append(struct gstr *gs, const char *s);
void str_printf(struct gstr *gs, const char *fmt, ...);
const char *str_get(struct gstr *gs);

/* symbol.c */
void sym_init(void);
void sym_clear_all_valid(void);
void sym_set_changed(struct symbol *sym);
struct symbol *sym_check_deps(struct symbol *sym);
struct property *prop_alloc(enum prop_type type, struct symbol *sym);
struct symbol *prop_get_symbol(struct property *prop);

static inline tristate sym_get_tristate_value(struct symbol *sym)
{
	return sym->curr.tri;
}


static inline struct symbol *sym_get_choice_value(struct symbol *sym)
{
	return (struct symbol *)sym->curr.val;
}

static inline _Bool sym_set_choice_value(struct symbol *ch, struct symbol *chval)
{
	return sym_set_tristate_value(chval, yes);
}

static inline _Bool sym_is_choice(struct symbol *sym)
{
	return sym->flags & 0x0010 ? 1 : 0;
}

static inline _Bool sym_is_choice_value(struct symbol *sym)
{
	return sym->flags & 0x0020 ? 1 : 0;
}

static inline _Bool sym_is_optional(struct symbol *sym)
{
	return sym->flags & 0x0100 ? 1 : 0;
}

static inline _Bool sym_has_value(struct symbol *sym)
{
	return sym->flags & 0x0800 ? 0 : 1;
}





#line 152 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2

#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.hash.c" 1
/* ANSI-C code produced by gperf version 3.0.1 */
/* Command-line: gperf  */
/* Computed positions: -k'1,3' */





struct kconf_id;
/* maximum key range = 45, duplicates = 0 */


__inline
 



static unsigned int
kconf_id_hash (register const char *str, register unsigned int len)
{
  static unsigned char asso_values[] =
    {
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 25, 10, 15,
       0,  0,  5, 47,  0,  0, 47, 47,  0, 10,
       0, 20, 20, 20,  5,  0,  0, 20, 47, 47,
      20, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
      47, 47, 47, 47, 47, 47
    };
  register int hval = len;

  switch (hval)
    {
      default:
        hval += asso_values[(unsigned char)str[2]];
      /*FALLTHROUGH*/
      case 2:
      case 1:
        hval += asso_values[(unsigned char)str[0]];
        break;
    }
  return hval;
}

struct kconf_id_strings_t
  {
    char kconf_id_strings_str2[sizeof("if")];
    char kconf_id_strings_str3[sizeof("int")];
    char kconf_id_strings_str4[sizeof("help")];
    char kconf_id_strings_str5[sizeof("endif")];
    char kconf_id_strings_str6[sizeof("select")];
    char kconf_id_strings_str7[sizeof("endmenu")];
    char kconf_id_strings_str8[sizeof("tristate")];
    char kconf_id_strings_str9[sizeof("endchoice")];
    char kconf_id_strings_str10[sizeof("range")];
    char kconf_id_strings_str11[sizeof("string")];
    char kconf_id_strings_str12[sizeof("default")];
    char kconf_id_strings_str13[sizeof("def_bool")];
    char kconf_id_strings_str14[sizeof("menu")];
    char kconf_id_strings_str16[sizeof("def_boolean")];
    char kconf_id_strings_str17[sizeof("def_tristate")];
    char kconf_id_strings_str18[sizeof("mainmenu")];
    char kconf_id_strings_str20[sizeof("menuconfig")];
    char kconf_id_strings_str21[sizeof("config")];
    char kconf_id_strings_str22[sizeof("on")];
    char kconf_id_strings_str23[sizeof("hex")];
    char kconf_id_strings_str26[sizeof("source")];
    char kconf_id_strings_str27[sizeof("depends")];
    char kconf_id_strings_str28[sizeof("optional")];
    char kconf_id_strings_str31[sizeof("enable")];
    char kconf_id_strings_str32[sizeof("comment")];
    char kconf_id_strings_str33[sizeof("requires")];
    char kconf_id_strings_str34[sizeof("bool")];
    char kconf_id_strings_str37[sizeof("boolean")];
    char kconf_id_strings_str41[sizeof("choice")];
    char kconf_id_strings_str46[sizeof("prompt")];
  };
static struct kconf_id_strings_t kconf_id_strings_contents =
  {
    "if",
    "int",
    "help",
    "endif",
    "select",
    "endmenu",
    "tristate",
    "endchoice",
    "range",
    "string",
    "default",
    "def_bool",
    "menu",
    "def_boolean",
    "def_tristate",
    "mainmenu",
    "menuconfig",
    "config",
    "on",
    "hex",
    "source",
    "depends",
    "optional",
    "enable",
    "comment",
    "requires",
    "bool",
    "boolean",
    "choice",
    "prompt"
  };


__inline

struct kconf_id *
kconf_id_lookup (register const char *str, register unsigned int len)
{
  enum
    {
      TOTAL_KEYWORDS = 30,
      MIN_WORD_LENGTH = 2,
      MAX_WORD_LENGTH = 12,
      MIN_HASH_VALUE = 2,
      MAX_HASH_VALUE = 46
    };

  static struct kconf_id wordlist[] =
    {
      {-1}, {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str2,		269,		0x0001|0x0002},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str3,		275,		0x0001, S_INT},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str4,		267,		0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str5,		270,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str6,		277,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str7,	260,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str8,	275,		0x0001, S_TRISTATE},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str9,	263,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str10,		278,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str11,		275,		0x0001, S_STRING},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str12,	276,	0x0001, S_UNKNOWN},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str13,	276,	0x0001, S_BOOLEAN},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str14,		259,		0x0001},
      {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str16,	276,	0x0001, S_BOOLEAN},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str17,	276,	0x0001, S_TRISTATE},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str18,	258,	0x0001},
      {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str20,	266,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str21,		265,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str22,		279,		0x0002},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str23,		275,		0x0001, S_HEX},
      {-1}, {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str26,		261,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str27,	271,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str28,	273,	0x0001},
      {-1}, {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str31,		277,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str32,	264,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str33,	272,	0x0001},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str34,		275,		0x0001, S_BOOLEAN},
      {-1}, {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str37,	275,		0x0001, S_BOOLEAN},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str41,		262,	0x0001},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str46,		274,	0x0001}
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register int key = kconf_id_hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          register int o = wordlist[key].name;
          if (o >= 0)
            {
              register const char *s = o + ((const char *) &kconf_id_strings_contents);

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &wordlist[key];
            }
        }
    }
  return 0;
}
#line 154 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2






int cdebug = 0x0001;

extern int zconflex(void);
static void zconfprint(const char *err, ...);
static void zconf_error(const char *err, ...);
static void zconferror(const char *err);
static _Bool zconf_endtoken(struct kconf_id *id, int starttoken, int endtoken);

struct symbol *symbol_hash[257];

static struct menu *current_menu, *current_entry;





/* Enabling traces.  */



/* Enabling verbose error messages.  */



 


typedef union YYSTYPE {
	char *string;
	struct file *file;
	struct symbol *symbol;
	struct expr *expr;
	struct menu *menu;
	struct kconf_id *id;
} YYSTYPE;
/* Line 190 of yacc.c.  */





/* Copy the second part of user declarations.  */


/* Line 213 of yacc.c.  */









/* The parser invokes alloca or malloc; define the necessary symbols.  */





 




   

 
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 243 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2







/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short int yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */


/* The size of an array large to enough to hold all stacks, each with
   N elements.  */




/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */




 









/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */













   typedef signed char yysigned_char;
    

/* YYFINAL -- State number of the termination state. */

/* YYLAST -- Last index in YYTABLE.  */


/* YYNTOKENS -- Number of terminals. */

/* YYNNTS -- Number of nonterminals. */

/* YYNRULES -- Number of rules. */

/* YYNRULES -- Number of states. */


/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */






/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const unsigned char yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34
};






       
      
      
      
     
     
     
     
     
     
     





      
      
      
       
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      





       
     
     
     
     
     
     
     
     
     
     







  
  
  
  
  
  
  
  
  
  
  
  
  
  
  







       
     
     
     


/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const unsigned char yyr1[] =
{
       0,    35,    36,    37,    37,    37,    37,    37,    37,    37,
      37,    37,    38,    38,    38,    38,    38,    38,    38,    39,
      39,    39,    39,    39,    39,    40,    40,    41,    42,    43,
      44,    45,    45,    45,    45,    45,    45,    46,    46,    46,
      46,    46,    47,    48,    49,    50,    51,    51,    51,    51,
      51,    51,    52,    52,    52,    52,    53,    53,    54,    55,
      56,    57,    57,    57,    57,    58,    59,    60,    61,    62,
      62,    62,    62,    63,    64,    65,    66,    67,    68,    68,
      68,    68,    69,    69,    69,    70,    70,    71,    71,    72,
      72,    72,    73,    73,    74,    74,    75,    75,    75,    75,
      75,    75,    75,    76,    76
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const unsigned char yyr2[] =
{
       0,     2,     1,     0,     2,     2,     2,     4,     2,     4,
       4,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     2,     3,     2,     3,
       2,     0,     2,     2,     2,     2,     2,     3,     4,     4,
       4,     5,     2,     2,     1,     3,     0,     2,     2,     2,
       2,     2,     4,     3,     2,     4,     0,     2,     3,     1,
       3,     0,     2,     2,     2,     3,     2,     1,     3,     0,
       2,     2,     2,     3,     3,     2,     2,     2,     0,     2,
       2,     2,     4,     3,     3,     0,     2,     1,     1,     2,
       2,     2,     1,     2,     0,     2,     1,     3,     3,     3,
       2,     3,     3,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const unsigned char yydefact[] =
{
       3,     0,     0,     1,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    12,    16,    13,    14,
      18,    15,    17,     0,    19,     0,     4,    31,    22,    31,
      23,    46,    56,     5,    61,    20,    78,    69,     6,    24,
      78,    21,     8,    11,    87,    88,     0,     0,    89,     0,
      42,    90,     0,     0,     0,   103,   104,     0,     0,     0,
      96,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,     7,    65,    73,    74,    27,    29,     0,
     100,     0,     0,    58,     0,     0,     9,    10,     0,     0,
       0,     0,     0,    85,     0,     0,     0,     0,    36,    35,
      32,     0,    34,    33,     0,     0,    85,     0,    50,    51,
      47,    49,    48,    57,    45,    44,    62,    64,    60,    63,
      59,    80,    81,    79,    70,    72,    68,    71,    67,    93,
      99,   101,   102,    98,    97,    26,    76,     0,     0,     0,
      94,     0,    94,    94,    94,     0,     0,    77,    54,    94,
       0,    94,     0,    83,    84,     0,     0,    37,    86,     0,
       0,    94,    25,     0,    53,     0,    82,    95,    38,    39,
      40,     0,    52,    55,    41
};

/* YYDEFGOTO[NTERM-NUM]. */
static const short int yydefgoto[] =
{
      -1,     1,     2,    25,    26,    99,    27,    28,    29,    30,
      64,   100,    31,    32,   114,    33,    66,   110,    67,    34,
     118,    35,    68,    36,    37,   126,    38,    70,    39,    40,
      41,   101,   102,    69,   103,   141,   142,    42,    73,   156,
      59,    60
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */

static const short int yypact[] =
{
     -78,     2,   159,   -78,   -21,     0,     0,   -12,     0,     1,
       4,     0,    27,    38,    60,    58,   -78,   -78,   -78,   -78,
     -78,   -78,   -78,   100,   -78,   104,   -78,   -78,   -78,   -78,
     -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,
     -78,   -78,   -78,   -78,   -78,   -78,    86,   113,   -78,   114,
     -78,   -78,   125,   127,   128,   -78,   -78,    60,    60,   210,
      65,   -78,   141,   142,    39,   103,   182,   200,     6,    66,
       6,   131,   -78,   146,   -78,   -78,   -78,   -78,   -78,   196,
     -78,    60,    60,   146,    40,    40,   -78,   -78,   155,   156,
      -2,    60,     0,     0,    60,   105,    40,   194,   -78,   -78,
     -78,   206,   -78,   -78,   183,     0,     0,   195,   -78,   -78,
     -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,
     -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,   -78,
     -78,   197,   -78,   -78,   -78,   -78,   -78,    60,   213,   216,
     212,   203,   212,   190,   212,    40,   208,   -78,   -78,   212,
     222,   212,   219,   -78,   -78,    60,   223,   -78,   -78,   224,
     225,   212,   -78,   226,   -78,   227,   -78,    47,   -78,   -78,
     -78,   228,   -78,   -78,   -78
};

/* YYPGOTO[NTERM-NUM].  */
static const short int yypgoto[] =
{
     -78,   -78,   -78,   -78,   164,   -36,   -78,   -78,   -78,   -78,
     230,   -78,   -78,   -78,   -78,    29,   -78,   -78,   -78,   -78,
     -78,   -78,   -78,   -78,   -78,   -78,    59,   -78,   -78,   -78,
     -78,   -78,   198,   220,    24,   157,    -5,   169,   202,    74,
     -53,   -77
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */

static const short int yytable[] =
{
      46,    47,     3,    49,    79,    80,    52,   133,   134,    43,
       6,     7,     8,     9,    10,    11,    12,    13,    48,   145,
      14,    15,   137,    55,    56,    44,    45,    57,   131,   132,
     109,    50,    58,   122,    51,   122,    24,   138,   139,   -28,
      88,   143,   -28,   -28,   -28,   -28,   -28,   -28,   -28,   -28,
     -28,    89,    53,   -28,   -28,    90,    91,   -28,    92,    93,
      94,    95,    96,    54,    97,    55,    56,    88,   161,    98,
     -66,   -66,   -66,   -66,   -66,   -66,   -66,   -66,    81,    82,
     -66,   -66,    90,    91,   152,    55,    56,   140,    61,    57,
     112,    97,    84,   123,    58,   123,   121,   117,    85,   125,
     149,    62,   167,   -30,    88,    63,   -30,   -30,   -30,   -30,
     -30,   -30,   -30,   -30,   -30,    89,    72,   -30,   -30,    90,
      91,   -30,    92,    93,    94,    95,    96,   119,    97,   127,
     144,   -75,    88,    98,   -75,   -75,   -75,   -75,   -75,   -75,
     -75,   -75,   -75,    74,    75,   -75,   -75,    90,    91,   -75,
     -75,   -75,   -75,   -75,   -75,    76,    97,    77,    78,    -2,
       4,   121,     5,     6,     7,     8,     9,    10,    11,    12,
      13,    86,    87,    14,    15,    16,   129,    17,    18,    19,
      20,    21,    22,    88,    23,   135,   136,   -43,   -43,    24,
     -43,   -43,   -43,   -43,    89,   146,   -43,   -43,    90,    91,
     104,   105,   106,   107,   155,     7,     8,    97,    10,    11,
      12,    13,   108,   148,    14,    15,   158,   159,   160,   147,
     151,    81,    82,   163,   130,   165,   155,    81,    82,    82,
      24,   113,   116,   157,   124,   171,   115,   120,   162,   128,
      72,    81,    82,   153,    81,    82,   154,    81,    82,   166,
      81,    82,   164,   168,   169,   170,   172,   173,   174,    65,
      71,    83,     0,   150,   111
};

static const short int yycheck[] =
{
       5,     6,     0,     8,    57,    58,    11,    84,    85,    30,
       4,     5,     6,     7,     8,     9,    10,    11,    30,    96,
      14,    15,    24,    25,    26,    25,    26,    29,    81,    82,
      66,    30,    34,    69,    30,    71,    30,    90,    91,     0,
       1,    94,     3,     4,     5,     6,     7,     8,     9,    10,
      11,    12,    25,    14,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    25,    25,    25,    26,     1,   145,    30,
       4,     5,     6,     7,     8,     9,    10,    11,    31,    32,
      14,    15,    16,    17,   137,    25,    26,    92,    30,    29,
      66,    25,    27,    69,    34,    71,    30,    68,    33,    70,
     105,     1,   155,     0,     1,     1,     3,     4,     5,     6,
       7,     8,     9,    10,    11,    12,    30,    14,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    68,    25,    70,
      25,     0,     1,    30,     3,     4,     5,     6,     7,     8,
       9,    10,    11,    30,    30,    14,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    30,    25,    30,    30,     0,
       1,    30,     3,     4,     5,     6,     7,     8,     9,    10,
      11,    30,    30,    14,    15,    16,    30,    18,    19,    20,
      21,    22,    23,     1,    25,    30,    30,     5,     6,    30,
       8,     9,    10,    11,    12,     1,    14,    15,    16,    17,
      18,    19,    20,    21,    14,     5,     6,    25,     8,     9,
      10,    11,    30,    30,    14,    15,   142,   143,   144,    13,
      25,    31,    32,   149,    28,   151,    14,    31,    32,    32,
      30,    67,    68,    30,    70,   161,    67,    68,    30,    70,
      30,    31,    32,    30,    31,    32,    30,    31,    32,    30,
      31,    32,    30,    30,    30,    30,    30,    30,    30,    29,
      40,    59,    -1,   106,    66
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const unsigned char yystos[] =
{
       0,    36,    37,     0,     1,     3,     4,     5,     6,     7,
       8,     9,    10,    11,    14,    15,    16,    18,    19,    20,
      21,    22,    23,    25,    30,    38,    39,    41,    42,    43,
      44,    47,    48,    50,    54,    56,    58,    59,    61,    63,
      64,    65,    72,    30,    25,    26,    71,    71,    30,    71,
      30,    30,    71,    25,    25,    25,    26,    29,    34,    75,
      76,    30,     1,     1,    45,    45,    51,    53,    57,    68,
      62,    68,    30,    73,    30,    30,    30,    30,    30,    75,
      75,    31,    32,    73,    27,    33,    30,    30,     1,    12,
      16,    17,    19,    20,    21,    22,    23,    25,    30,    40,
      46,    66,    67,    69,    18,    19,    20,    21,    30,    40,
      52,    67,    69,    39,    49,    72,    39,    50,    55,    61,
      72,    30,    40,    69,    39,    50,    60,    61,    72,    30,
      28,    75,    75,    76,    76,    30,    30,    24,    75,    75,
      71,    70,    71,    75,    25,    76,     1,    13,    30,    71,
      70,    25,    75,    30,    30,    14,    74,    30,    74,    74,
      74,    76,    30,    74,    30,    74,    30,    75,    30,    30,
      30,    74,    30,    30,    30
};


























/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */



























/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */





















/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */







 


/* YYLEX -- calling `yylex' with the right arguments.  */



 

/* Enable debugging if requested.  */






























 

    
    


  
  
    
  
















 

    


  
  
  
             
  
  
    
  











 




/* YYINITDEPTH -- initial size of the parser's stacks.  */



/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */










 



 
     


  

  
    

  






 




 
     
     


  
  

  
    

  














 

    
    
    


  
  

  
    
  
    



  
    

  
    
      
        
    
  



/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/


static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
 

    
    
    

{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (!yymsg)
    yymsg = "Deleting";
  ;

  switch (yytype)
    {
      case 48: /* choice_entry */

        {
	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
	if (current_menu == (yyvaluep->menu))
		menu_end_menu();
};

        break;
      case 54: /* if_entry */

        {
	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
	if (current_menu == (yyvaluep->menu))
		menu_end_menu();
};

        break;
      case 59: /* menu_entry */

        {
	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
	if (current_menu == (yyvaluep->menu))
		menu_end_menu();
};

        break;

      default:
        break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */




 

 
int zconfparse (void);
 


/* The look-ahead symbol.  */
int zconfchar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE zconflval;

/* Number of syntax errors so far.  */
int zconfnerrs;



/*----------.
| yyparse.  |
`----------*/




 
  

 
int
zconfparse (void)
 




{

  register int yystate;
  register int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks through separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  short int yyssa[200];
  short int *yyss = yyssa;
  register short int *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[200];
  YYSTYPE *yyvs = yyvsa;
  register YYSTYPE *yyvsp;





  size_t yystacksize = 200;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* When reducing, the number of symbols on the RHS of the reduced
     rule.  */
  int yylen;

  ;

  yystate = 0;
  yyerrstatus = 0;
  zconfnerrs = 0;
  zconfchar = (-2);		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;


  yyvsp[0] = zconflval;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed. so pushing a state here evens the stacks.
     */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      size_t yysize = yyssp - yyss + 1;


      
	


	
	


	



	
		    
		    

		    

	
	
      
 
      
       /* Extend the stack our own way.  */
      if (10000 <= yystacksize)
	goto yyoverflowlab;
      yystacksize *= 2;
      if (10000 < yystacksize)
	yystacksize = 10000;

      {
	short int *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) malloc (((yystacksize) * (sizeof (short int) + sizeof (YYSTYPE)) + (sizeof (union yyalloc) - 1)));
	if (! yyptr)
	  goto yyoverflowlab;
	do { size_t yynewbytes; __builtin_memcpy (&yyptr->yyss, yyss, (yysize) * sizeof (*(yyss))); yyss = &yyptr->yyss; yynewbytes = yystacksize * sizeof (*yyss) + (sizeof (union yyalloc) - 1); yyptr += yynewbytes / sizeof (*yyptr); } while (0);
	do { size_t yynewbytes; __builtin_memcpy (&yyptr->yyvs, yyvs, (yysize) * sizeof (*(yyvs))); yyvs = &yyptr->yyvs; yynewbytes = yystacksize * sizeof (*yyvs) + (sizeof (union yyalloc) - 1); yyptr += yynewbytes / sizeof (*yyptr); } while (0);


	if (yyss1 != yyssa)
	  free (yyss1);
      }


      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      ;

      if (yyss + yystacksize - 1 <= yyssp)
	goto yyabortlab;
    }

  ;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

/* Do appropriate processing given the current state.  */
/* Read a look-ahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to look-ahead token.  */

  yyn = yypact[yystate];
  if (yyn == -78)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (zconfchar == (-2))
    {
      ;
      zconfchar = zconflex ();
    }

  if (zconfchar <= 0)
    {
      zconfchar = yytoken = 0;
      ;
    }
  else
    {
      yytoken = ((unsigned int) (zconfchar) <= 289 ? yytranslate[zconfchar] : 2);
      ;
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || 264 < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == -76)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == 3)
    goto yyacceptlab;

  /* Shift the look-ahead token.  */
  ;

  /* Discard the token being shifted unless it is eof.  */
  if (zconfchar != 0)
    zconfchar = (-2);

  *++yyvsp = zconflval;


  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  yystate = yyn;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  ;
  switch (yyn)
    {
        case 8:

    { zconf_error("unexpected end statement"); ;}
    break;

  case 9:

    { zconf_error("unknown statement \"%s\"", (yyvsp[-2].string)); ;}
    break;

  case 10:

    {
	zconf_error("unexpected option \"%s\"", ((const char *) &kconf_id_strings_contents) + (yyvsp[-2].id)->name);
;}
    break;

  case 11:

    { zconf_error("invalid statement"); ;}
    break;

  case 25:

    { zconf_error("unknown option \"%s\"", (yyvsp[-2].string)); ;}
    break;

  case 26:

    { zconf_error("invalid option"); ;}
    break;

  case 27:

    {
	struct symbol *sym = sym_lookup((yyvsp[-1].string), 0);
	sym->flags |= 0x0100;
	menu_add_entry(sym);
	if (cdebug & (0x0002)) printf("%s:%d:config %s\n", zconf_curname(), zconf_lineno(), (yyvsp[-1].string));
;}
    break;

  case 28:

    {
	menu_end_entry();
	if (cdebug & (0x0002)) printf("%s:%d:endconfig\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 29:

    {
	struct symbol *sym = sym_lookup((yyvsp[-1].string), 0);
	sym->flags |= 0x0100;
	menu_add_entry(sym);
	if (cdebug & (0x0002)) printf("%s:%d:menuconfig %s\n", zconf_curname(), zconf_lineno(), (yyvsp[-1].string));
;}
    break;

  case 30:

    {
	if (current_entry->prompt)
		current_entry->prompt->type = P_MENU;
	else
		zconfprint("warning: menuconfig statement without prompt");
	menu_end_entry();
	if (cdebug & (0x0002)) printf("%s:%d:endconfig\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 37:

    {
	menu_set_type((yyvsp[-2].id)->stype);
	if (cdebug & (0x0002)) printf("%s:%d:type(%u)\n", 
 zconf_curname(), zconf_lineno(), 
(yyvsp[-2].id)->stype);
;}
    break;

  case 38:

    {
	menu_add_prompt(P_PROMPT, (yyvsp[-2].string), (yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:prompt\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 39:

    {
	menu_add_expr(P_DEFAULT, (yyvsp[-2].expr), (yyvsp[-1].expr));
	if ((yyvsp[-3].id)->stype != S_UNKNOWN)
		menu_set_type((yyvsp[-3].id)->stype);
	if (cdebug & (0x0002)) printf("%s:%d:default(%u)\n", 
 zconf_curname(), zconf_lineno(), 
(yyvsp[-3].id)->stype);
;}
    break;

  case 40:

    {
	menu_add_symbol(P_SELECT, sym_lookup((yyvsp[-2].string), 0), (yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:select\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 41:

    {
	menu_add_expr(P_RANGE, expr_alloc_comp(E_RANGE,(yyvsp[-3].symbol), (yyvsp[-2].symbol)), (yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:range\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 42:

    {
	struct symbol *sym = sym_lookup(((void *)0), 0);
	sym->flags |= 0x0010;
	menu_add_entry(sym);
	menu_add_expr(P_CHOICE, ((void *)0), ((void *)0));
	if (cdebug & (0x0002)) printf("%s:%d:choice\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 43:

    {
	(yyval.menu) = menu_add_menu();
;}
    break;

  case 44:

    {
	if (zconf_endtoken((yyvsp[0].id), 262, 263)) {
		menu_end_menu();
		if (cdebug & (0x0002)) printf("%s:%d:endchoice\n", zconf_curname(), zconf_lineno());
	}
;}
    break;

  case 52:

    {
	menu_add_prompt(P_PROMPT, (yyvsp[-2].string), (yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:prompt\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 53:

    {
	if ((yyvsp[-2].id)->stype == S_BOOLEAN || (yyvsp[-2].id)->stype == S_TRISTATE) {
		menu_set_type((yyvsp[-2].id)->stype);
		if (cdebug & (0x0002)) printf("%s:%d:type(%u)\n", 
 zconf_curname(), zconf_lineno(), 
(yyvsp[-2].id)->stype);
	} else
		goto yyerrorlab;
;}
    break;

  case 54:

    {
	current_entry->sym->flags |= 0x0100;
	if (cdebug & (0x0002)) printf("%s:%d:optional\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 55:

    {
	if ((yyvsp[-3].id)->stype == S_UNKNOWN) {
		menu_add_symbol(P_DEFAULT, sym_lookup((yyvsp[-2].string), 0), (yyvsp[-1].expr));
		if (cdebug & (0x0002)) printf("%s:%d:default\n", 
 zconf_curname(), zconf_lineno());
	} else
		goto yyerrorlab;
;}
    break;

  case 58:

    {
	if (cdebug & (0x0002)) printf("%s:%d:if\n", zconf_curname(), zconf_lineno());
	menu_add_entry(((void *)0));
	menu_add_dep((yyvsp[-1].expr));
	(yyval.menu) = menu_add_menu();
;}
    break;

  case 59:

    {
	if (zconf_endtoken((yyvsp[0].id), 269, 270)) {
		menu_end_menu();
		if (cdebug & (0x0002)) printf("%s:%d:endif\n", zconf_curname(), zconf_lineno());
	}
;}
    break;

  case 65:

    {
	menu_add_entry(((void *)0));
	menu_add_prompt(P_MENU, (yyvsp[-1].string), ((void *)0));
	if (cdebug & (0x0002)) printf("%s:%d:menu\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 66:

    {
	(yyval.menu) = menu_add_menu();
;}
    break;

  case 67:

    {
	if (zconf_endtoken((yyvsp[0].id), 259, 260)) {
		menu_end_menu();
		if (cdebug & (0x0002)) printf("%s:%d:endmenu\n", zconf_curname(), zconf_lineno());
	}
;}
    break;

  case 73:

    {
	if (cdebug & (0x0002)) printf("%s:%d:source %s\n", zconf_curname(), zconf_lineno(), (yyvsp[-1].string));
	zconf_nextfile((yyvsp[-1].string));
;}
    break;

  case 74:

    {
	menu_add_entry(((void *)0));
	menu_add_prompt(P_COMMENT, (yyvsp[-1].string), ((void *)0));
	if (cdebug & (0x0002)) printf("%s:%d:comment\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 75:

    {
	menu_end_entry();
;}
    break;

  case 76:

    {
	if (cdebug & (0x0002)) printf("%s:%d:help\n", zconf_curname(), zconf_lineno());
	zconf_starthelp();
;}
    break;

  case 77:

    {
	current_entry->sym->help = (yyvsp[0].string);
;}
    break;

  case 82:

    {
	menu_add_dep((yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:depends on\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 83:

    {
	menu_add_dep((yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:depends\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 84:

    {
	menu_add_dep((yyvsp[-1].expr));
	if (cdebug & (0x0002)) printf("%s:%d:requires\n", zconf_curname(), zconf_lineno());
;}
    break;

  case 86:

    {
	menu_add_prompt(P_PROMPT, (yyvsp[-1].string), (yyvsp[0].expr));
;}
    break;

  case 89:

    { (yyval.id) = (yyvsp[-1].id); ;}
    break;

  case 90:

    { (yyval.id) = (yyvsp[-1].id); ;}
    break;

  case 91:

    { (yyval.id) = (yyvsp[-1].id); ;}
    break;

  case 94:

    { (yyval.expr) = ((void *)0); ;}
    break;

  case 95:

    { (yyval.expr) = (yyvsp[0].expr); ;}
    break;

  case 96:

    { (yyval.expr) = expr_alloc_symbol((yyvsp[0].symbol)); ;}
    break;

  case 97:

    { (yyval.expr) = expr_alloc_comp(E_EQUAL, (yyvsp[-2].symbol), (yyvsp[0].symbol)); ;}
    break;

  case 98:

    { (yyval.expr) = expr_alloc_comp(E_UNEQUAL, (yyvsp[-2].symbol), (yyvsp[0].symbol)); ;}
    break;

  case 99:

    { (yyval.expr) = (yyvsp[-1].expr); ;}
    break;

  case 100:

    { (yyval.expr) = expr_alloc_one(E_NOT, (yyvsp[0].expr)); ;}
    break;

  case 101:

    { (yyval.expr) = expr_alloc_two(E_OR, (yyvsp[-2].expr), (yyvsp[0].expr)); ;}
    break;

  case 102:

    { (yyval.expr) = expr_alloc_two(E_AND, (yyvsp[-2].expr), (yyvsp[0].expr)); ;}
    break;

  case 103:

    { (yyval.symbol) = sym_lookup((yyvsp[0].string), 0); free((yyvsp[0].string)); ;}
    break;

  case 104:

    { (yyval.symbol) = sym_lookup((yyvsp[0].string), 1); free((yyvsp[0].string)); ;}
    break;


    }

/* Line 1037 of yacc.c.  */


  yyvsp -= yylen;
  yyssp -= yylen;


  ;

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - 35] + *yyssp;
  if (0 <= yystate && yystate <= 264 && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - 35];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++zconfnerrs;

      

      
	
	  
	  
	  
	  
	  

	  

	  

	  
	  
	  
	  

	  
	  
	    
	      
		
		
		
		  
		    
		    
		  
	      
	  
		     
	  
	  
	    
	      
	      

	      
		
		  
		  
		    
		      
			
			
			
		      
		
	      
	      
	    
	  
	    
	
      

	zconferror ("syntax error");
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (zconfchar <= 0)
        {
          /* If at end of input, pop the error token,
	     then the rest of the stack, then return failure.  */
	  if (zconfchar == 0)
	     for (;;)
	       {

		 (yyvsp--, yyssp--);
		 if (yyssp == yyss)
		   goto yyabortlab;
		 yydestruct ("Error: popping",
                             yystos[*yyssp], yyvsp);
	       }
        }
      else
	{
	  yydestruct ("Error: discarding", yytoken, &zconflval);
	  zconfchar = (-2);
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:


  /* Pacify GCC when the user code never invokes YYERROR and the label
     yyerrorlab therefore never appears in user code.  */
  if (0)
     goto yyerrorlab;

yyvsp -= yylen;
  yyssp -= yylen;
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != -78)
	{
	  yyn += 1;
	  if (0 <= yyn && yyn <= 264 && yycheck[yyn] == 1)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	goto yyabortlab;


      yydestruct ("Error: popping", yystos[yystate], yyvsp);
      (yyvsp--, yyssp--);
      yystate = *yyssp;
      ;
    }

  if (yyn == 3)
    goto yyacceptlab;

  *++yyvsp = zconflval;


  /* Shift the error token. */
  ;

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yydestruct ("Error: discarding lookahead",
              yytoken, &zconflval);
  zconfchar = (-2);
  yyresult = 1;
  goto yyreturn;


/*----------------------------------------------.
| yyoverflowlab -- parser overflow comes here.  |
`----------------------------------------------*/
yyoverflowlab:
  zconferror ("parser stack overflow");
  yyresult = 2;
  /* Fall through.  */

yyreturn:

  if (yyss != yyssa)
    free (yyss);

  return yyresult;
}





void conf_parse(const char *name)
{
	struct symbol *sym;
	int i;

	zconf_initscan(name);

	sym_init();
	menu_init();
	modules_sym = sym_lookup("MODULES", 0);
	rootmenu.prompt = menu_add_prompt(P_MENU, "Busybox Configuration", ((void *)0));


	
		

	zconfparse();
	if (zconfnerrs)
		exit(1);
	menu_finalize(&rootmenu);
	for (i = 0; i < 257; i++) for (sym = symbol_hash[i]; sym; sym = sym->next) if (sym->type != S_OTHER) {
		sym_check_deps(sym);
        }

	sym_change_count = 1;
}

const char *zconf_tokenname(int token)
{
	switch (token) {
	case 259:		return "menu";
	case 260:		return "endmenu";
	case 262:		return "choice";
	case 263:	return "endchoice";
	case 269:		return "if";
	case 270:		return "endif";
	case 271:		return "depends";
	}
	return "<token>";
}

static _Bool zconf_endtoken(struct kconf_id *id, int starttoken, int endtoken)
{
	if (id->token != endtoken) {
		zconf_error("unexpected '%s' within %s block",
			((const char *) &kconf_id_strings_contents) + id->name, zconf_tokenname(starttoken));
		zconfnerrs++;
		return 0;
	}
	if (current_menu->file != current_file) {
		zconf_error("'%s' in different file than '%s'",
			((const char *) &kconf_id_strings_contents) + id->name, zconf_tokenname(starttoken));
		fprintf(stderr, "%s:%d: location of the '%s'\n",
			current_menu->file->name, current_menu->lineno,
			zconf_tokenname(starttoken));
		zconfnerrs++;
		return 0;
	}
	return 1;
}

static void zconfprint(const char *err, ...)
{
	va_list ap;

	fprintf(stderr, "%s:%d: ", zconf_curname(), zconf_lineno());
	__builtin_va_start(ap,err);
	vfprintf(stderr, err, ap);
	__builtin_va_end(ap);
	fprintf(stderr, "\n");
}

static void zconf_error(const char *err, ...)
{
	va_list ap;

	zconfnerrs++;
	fprintf(stderr, "%s:%d: ", zconf_curname(), zconf_lineno());
	__builtin_va_start(ap,err);
	vfprintf(stderr, err, ap);
	__builtin_va_end(ap);
	fprintf(stderr, "\n");
}

static void zconferror(const char *err)
{

	

}

void print_quoted_string(FILE *out, const char *str)
{
	const char *p;
	int len;

	_IO_putc ('"', out);
	while ((p = strchr(str, '"'))) {
		len = p - str;
		if (len)
			fprintf(out, "%.*s", len, str);
		fputs("\\\"", out);
		str = p + 1;
	}
	fputs(str, out);
	_IO_putc ('"', out);
}

void print_symbol(FILE *out, struct menu *menu)
{
	struct symbol *sym = menu->sym;
	struct property *prop;

	if (sym_is_choice(sym))
		fprintf(out, "choice\n");
	else
		fprintf(out, "config %s\n", sym->name);
	switch (sym->type) {
	case S_BOOLEAN:
		fputs("  boolean\n", out);
		break;
	case S_TRISTATE:
		fputs("  tristate\n", out);
		break;
	case S_STRING:
		fputs("  string\n", out);
		break;
	case S_INT:
		fputs("  integer\n", out);
		break;
	case S_HEX:
		fputs("  hex\n", out);
		break;
	default:
		fputs("  ???\n", out);
		break;
	}
	for (prop = sym->prop; prop; prop = prop->next) {
		if (prop->menu != menu)
			continue;
		switch (prop->type) {
		case P_PROMPT:
			fputs("  prompt ", out);
			print_quoted_string(out, prop->text);
			if (!expr_is_yes(prop->visible.expr)) {
				fputs(" if ", out);
				expr_fprint(prop->visible.expr, out);
			}
			fputc('\n', out);
			break;
		case P_DEFAULT:
			fputs( "  default ", out);
			expr_fprint(prop->expr, out);
			if (!expr_is_yes(prop->visible.expr)) {
				fputs(" if ", out);
				expr_fprint(prop->visible.expr, out);
			}
			fputc('\n', out);
			break;
		case P_CHOICE:
			fputs("  #choice value\n", out);
			break;
		default:
			fprintf(out, "  unknown prop %d!\n", prop->type);
			break;
		}
	}
	if (sym->help) {
		int len = strlen(sym->help);
		while (sym->help[--len] == '\n')
			sym->help[len] = 0;
		fprintf(out, "  help\n%s\n", sym->help);
	}
	fputc('\n', out);
}

void zconfdump(FILE *out)
{
	struct property *prop;
	struct symbol *sym;
	struct menu *menu;

	menu = rootmenu.list;
	while (menu) {
		if ((sym = menu->sym))
			print_symbol(out, menu);
		else if ((prop = menu->prompt)) {
			switch (prop->type) {
			case P_COMMENT:
				fputs("\ncomment ", out);
				print_quoted_string(out, prop->text);
				fputs("\n", out);
				break;
			case P_MENU:
				fputs("\nmenu ", out);
				print_quoted_string(out, prop->text);
				fputs("\n", out);
				break;
			default:
				;
			}
			if (!expr_is_yes(prop->visible.expr)) {
				fputs("  depends ", out);
				expr_fprint(prop->visible.expr, out);
				fputc('\n', out);
			}
			fputs("\n", out);
		}

		if (menu->list)
			menu = menu->list;
		else if (menu->next)
			menu = menu->next;
		else while ((menu = menu->parent)) {
			if (menu->prompt && menu->prompt->type == P_MENU)
				fputs("\nendmenu\n", out);
			if (menu->next) {
				menu = menu->next;
				break;
			}
		}
	}
}

#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 1





/* A lexical scanner generated by flex */








/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 21 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 22 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/errno.h" 1
/* Copyright (C) 1991,92,93,94,95,96,97,2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.5 Errors	<errno.h>
 */


/* The includer defined __need_Emath if he wants only the definitions
   of EDOM and ERANGE, and not everything else.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 31 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/errno.h" 2



/* Get the error number constants from the system-specific file.
   This file will test __need_Emath and _ERRNO_H.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/errno.h" 1
/* Error constants.  Linux specific version.
   Copyright (C) 1996-1999, 2005, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */





#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/linux/errno.h" 1



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/asm/errno.h" 1
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/asm-generic/errno.h" 1



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/asm-generic/errno-base.h" 1







































#line 6 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/asm-generic/errno.h" 2




































































































/* for robust mutexes */






#line 3 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/asm/errno.h" 2
#line 6 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/linux/errno.h" 2



#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/errno.h" 2

/* Linux has no ENOTSUP error code.  */


/* Older Linux versions also had no ECANCELED error code.  */



/* Support for error codes to support robust mutexes was added later, too.  */








/* Function to get address of global `errno' variable.  */
extern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));


/* When using threads, errno is a per-thread value.  */












#line 38 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/errno.h" 2



/* Declare the `errno' variable, unless it's defined as a macro by
   bits/errno.h.  This is the case in GNU, where it is a per-thread
   variable.  This redeclaration using the macro still works, but it
   will be a function declaration without a prototype and may trigger
   a -Wstrict-prototypes warning.  */













/* The Hurd <bits/errno.h> defines `error_t' as an enumerated type so
   that printing `error_t' values in the debugger shows the names.  We
   might need this definition sometimes even if this file was included
   before.  */







#line 23 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 24 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2

/* end standard C headers. */

/* flex integer type definitions */




/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/inttypes.h" 1
/* Copyright (C) 1997-2001, 2004, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.8 Format conversion of integer types	<inttypes.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/inttypes.h" 2
/* Get the type definitions.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wchar.h" 1
/* wchar_t type related definitions.
   Copyright (C) 2000 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */








#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 2

/* Exact integral types.  */

/* Signed.  */

/* There is some amount of overlap with <sys/types.h> as known by inet code */







 



/* Unsigned.  */
typedef unsigned char		uint8_t;
typedef unsigned short int	uint16_t;

typedef unsigned int		uint32_t;



typedef unsigned long int	uint64_t;
 


/* Small types.  */

/* Signed.  */
typedef signed char		int_least8_t;
typedef short int		int_least16_t;
typedef int			int_least32_t;

typedef long int		int_least64_t;
 


/* Unsigned.  */
typedef unsigned char		uint_least8_t;
typedef unsigned short int	uint_least16_t;
typedef unsigned int		uint_least32_t;

typedef unsigned long int	uint_least64_t;
 


/* Fast types.  */

/* Signed.  */
typedef signed char		int_fast8_t;

typedef long int		int_fast16_t;
typedef long int		int_fast32_t;
typedef long int		int_fast64_t;
 




/* Unsigned.  */
typedef unsigned char		uint_fast8_t;

typedef unsigned long int	uint_fast16_t;
typedef unsigned long int	uint_fast32_t;
typedef unsigned long int	uint_fast64_t;
 




/* Types for `void *' pointers.  */


typedef long int		intptr_t;


typedef unsigned long int	uintptr_t;
 





/* Largest integral types.  */

typedef long int		intmax_t;
typedef unsigned long int	uintmax_t;
 




/* The ISO C99 standard specifies that in C++ implementations these
   macros should only be defined if explicitly requested.  */




 


/* Limits of integral types.  */

/* Minimum of signed integral types.  */




/* Maximum of signed integral types.  */





/* Maximum of unsigned integral types.  */






/* Minimum of signed integral types having a minimum size.  */




/* Maximum of signed integral types having a minimum size.  */





/* Maximum of unsigned integral types having a minimum size.  */






/* Minimum of fast signed integral types having a minimum size.  */




 



/* Maximum of fast signed integral types having a minimum size.  */




 




/* Maximum of fast unsigned integral types having a minimum size.  */




 





/* Values to test for integral types holding `void *' pointer.  */




 



/* Minimum for largest signed integral type.  */

/* Maximum for largest signed integral type.  */


/* Maximum for largest unsigned integral type.  */



/* Limits of other integer types.  */

/* Limits of `ptrdiff_t' type.  */



 


/* Limits of `sig_atomic_t'.  */



/* Limit of `size_t' type.  */


 

/* Limits of `wchar_t'.  */

/* These constants might also be defined in <wchar.h>.  */



/* Limits of `wint_t'.  */




/* The ISO C99 standard specifies that in C++ implementations these
   should only be defined if explicitly requested.  */

/* Signed.  */





 

/* Unsigned.  */





 

/* Maximal type.  */



 




#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/inttypes.h" 2

/* Get a definition for wchar_t.  But we must not define wchar_t itself.  */



 typedef int __gwchar_t;
 





/* The ISO C99 standard specifies that these macros must only be
   defined if explicitly requested.  */




 


/* Macros for printing format specifiers.  */

/* Decimal notation.  */































/* Octal notation.  */















/* Unsigned integers.  */















/* lowercase hexadecimal notation.  */















/* UPPERCASE hexadecimal notation.  */
















/* Macros for printing `intmax_t' and `uintmax_t'.  */








/* Macros for printing `intptr_t' and `uintptr_t'.  */








/* Macros for scanning format specifiers.  */

/* Signed decimal notation.  */















/* Signed decimal notation.  */















/* Unsigned decimal notation.  */















/* Octal notation.  */















/* Hexadecimal notation.  */
















/* Macros for scanning `intmax_t' and `uintmax_t'.  */






/* Macros for scaning `intptr_t' and `uintptr_t'.  */










/* We have to define the `uintmax_t' type using `ldiv_t'.  */
typedef struct
  {
    long int quot;		/* Quotient.  */
    long int rem;		/* Remainder.  */
  } imaxdiv_t;

 

  
    
    
  


/* Compute absolute value of N.  */
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* Return the `imaxdiv_t' representation of the value of NUMER over DENOM. */
extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* Like `strtol' but convert to `intmax_t'.  */
extern intmax_t strtoimax (__const char *__restrict __nptr,
			   char **__restrict __endptr, int __base) __attribute__ ((__nothrow__));

/* Like `strtoul' but convert to `uintmax_t'.  */
extern uintmax_t strtoumax (__const char *__restrict __nptr,
			    char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__));

/* Like `wcstol' but convert to `intmax_t'.  */
extern intmax_t wcstoimax (__const __gwchar_t *__restrict __nptr,
			   __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__));

/* Like `wcstoul' but convert to `uintmax_t'.  */
extern uintmax_t wcstoumax (__const __gwchar_t *__restrict __nptr,
			    __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__));




				   
				   
  



		  

  



					     
					     
					     
  



		  

  



				   
				   
  



		  

  



					     
					     
					     
					     
  



		  

  


 

					 
					 
  



		  

  




						   
						   
						   
						   
						   
  



		  

  




					 
					 
					 
  



		  

  





						   
						   
						   
						   
						   
  



		  

  







#line 36 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
 






/* Limits of integral types. */
































 






 

/* Returned upon end-of-file. */


/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */


/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */


/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */



/* Action number for EOF rule of a given start state. */


/* Special action meaning "start processing a new file". */




/* Size of default input buffer. */





typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int zconfleng;

extern FILE *zconfin, *zconfout;





    

/* Return all but the first "n" matched characters back to the input stream. */















/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */



typedef unsigned int yy_size_t;



struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;



	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via zconfrestart()), so that the user can continue scanning by
	 * just pointing zconfin at a new input file.
	 */


	};

/* Stack of input buffers. */
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */




/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */


/* yy_hold_char holds the character lost when zconftext is formed. */
static char yy_hold_char;
static int yy_n_chars;		/* number of characters read into yy_ch_buf */
int zconfleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow zconfwrap()'s to do buffer switches
 * instead of setting up a fresh zconfin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void zconfrestart (FILE *input_file  );
void zconf_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE zconf_create_buffer (FILE *file,int size  );
void zconf_delete_buffer (YY_BUFFER_STATE b  );
void zconf_flush_buffer (YY_BUFFER_STATE b  );
void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer  );
void zconfpop_buffer_state (void );

static void zconfensure_buffer_stack (void );
static void zconf_load_buffer_state (void );
static void zconf_init_buffer (YY_BUFFER_STATE b,FILE *file  );



YY_BUFFER_STATE zconf_scan_buffer (char *base,yy_size_t size  );
YY_BUFFER_STATE zconf_scan_string (const char *yy_str  );
YY_BUFFER_STATE zconf_scan_bytes (const char *bytes,int len  );

void *zconfalloc (yy_size_t  );
void *zconfrealloc (void *,yy_size_t  );
void zconffree (void *  );

























/* Begin user sect3 */




typedef unsigned char YY_CHAR;

FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;

typedef int yy_state_type;

extern int zconflineno;

int zconflineno = 1;

extern char *zconftext;

static const flex_int16_t yy_nxt[][17] =
    {
    {
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0
    },

    {
       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12
    },

    {
       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12
    },

    {
       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   18,   16,   16,   16
    },

    {
       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
       16,   16,   16,   18,   16,   16,   16

    },

    {
       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19
    },

    {
       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19
    },

    {
       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
       22,   22,   22,   22,   22,   25,   22
    },

    {
       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
       22,   22,   22,   22,   22,   25,   22
    },

    {
       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
       33,   34,   35,   35,   36,   37,   38

    },

    {
       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
       33,   34,   35,   35,   36,   37,   38
    },

    {
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11
    },

    {
       11,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12
    },

    {
       11,  -13,   39,   40,  -13,  -13,   41,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13
    },

    {
       11,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14

    },

    {
       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42
    },

    {
       11,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16
    },

    {
       11,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17
    },

    {
       11,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,   44,  -18,  -18,  -18
    },

    {
       11,   45,   45,  -19,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45

    },

    {
       11,  -20,   46,   47,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20
    },

    {
       11,   48,  -21,  -21,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48
    },

    {
       11,   49,   49,   50,   49,  -22,   49,   49,  -22,   49,
       49,   49,   49,   49,   49,  -22,   49
    },

    {
       11,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23
    },

    {
       11,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24

    },

    {
       11,   51,   51,   52,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51
    },

    {
       11,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26
    },

    {
       11,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27
    },

    {
       11,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,   53,  -28,  -28
    },

    {
       11,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29

    },

    {
       11,   54,   54,  -30,   54,   54,   54,   54,   54,   54,
       54,   54,   54,   54,   54,   54,   54
    },

    {
       11,  -31,  -31,  -31,  -31,  -31,  -31,   55,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31
    },

    {
       11,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32
    },

    {
       11,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33
    },

    {
       11,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,   56,   57,   57,  -34,  -34,  -34

    },

    {
       11,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,   57,   57,   57,  -35,  -35,  -35
    },

    {
       11,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36
    },

    {
       11,  -37,  -37,   58,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37
    },

    {
       11,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,   59
    },

    {
       11,  -39,   39,   40,  -39,  -39,   41,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,  -39

    },

    {
       11,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40
    },

    {
       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42
    },

    {
       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42
    },

    {
       11,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,  -43
    },

    {
       11,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,   44,  -44,  -44,  -44

    },

    {
       11,   45,   45,  -45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45
    },

    {
       11,  -46,   46,   47,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46
    },

    {
       11,   48,  -47,  -47,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48
    },

    {
       11,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48
    },

    {
       11,   49,   49,   50,   49,  -49,   49,   49,  -49,   49,
       49,   49,   49,   49,   49,  -49,   49

    },

    {
       11,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50
    },

    {
       11,  -51,  -51,   52,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51
    },

    {
       11,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52
    },

    {
       11,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53
    },

    {
       11,   54,   54,  -54,   54,   54,   54,   54,   54,   54,
       54,   54,   54,   54,   54,   54,   54

    },

    {
       11,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55
    },

    {
       11,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,   60,   57,   57,  -56,  -56,  -56
    },

    {
       11,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,   57,   57,   57,  -57,  -57,  -57
    },

    {
       11,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58
    },

    {
       11,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59

    },

    {
       11,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,   57,   57,   57,  -60,  -60,  -60
    },

    } ;

static yy_state_type yy_get_previous_state (void );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
static int yy_get_next_buffer (void );
static void yy_fatal_error (const char msg[]  );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up zconftext.
 */









/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[61] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       34,    5,    4,    2,    3,    7,    8,    6,   32,   29,
       31,   24,   28,   27,   26,   22,   17,   13,   16,   20,
       22,   11,   12,   19,   19,   14,   22,   22,    4,    2,
        3,    3,    1,    6,   32,   29,   31,   30,   24,   23,
       26,   25,   15,   20,    9,   19,   19,   21,   10,   18
    } ;

static const flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    6,    1,    1,    7,    8,    9,
       10,    1,    1,    1,   11,   12,   12,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,    1,    1,    1,
       14,    1,    1,    1,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        1,   15,    1,    1,   13,    1,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    1,   16,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

extern int zconf_flex_debug;
int zconf_flex_debug = 0;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */




char *zconftext;

/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/limits.h" 1
/* Copyright (C) 1991, 1992, 1996, 1997, 1998, 1999, 2000, 2005
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.10/5.2.4.2.1 Sizes of integer types	<limits.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/limits.h" 2


/* Maximum length of any multibyte character in any locale.
   We define this value here since the gcc header does not define
   the correct value.  */



/* If we are not using GNU CC we have to define all the symbols ourself.
   Otherwise use gcc's definitions (see below).  */





























 



















 






 













 /* Get the compiler's limits.h, which defines almost all the ISO constants.

    We put this #include_next outside the double inclusion check because
    it should be possible to include this file more than once and still get
    the definitions from gcc's header.  */

/* `_GCC_LIMITS_H_' is what GCC's file defines.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/limits.h" 1
/* This administrivia gets added to the beginning of limits.h
   if the system has its own version of limits.h.  */

/* We use _GCC_LIMITS_H_ because we want this not to match
   any macros that the system's limits.h uses for its own purposes.  */










/* Number of bits in a `char'.  */



/* Maximum length of a multibyte character.  */



/* Minimum and maximum values a `signed char' can hold.  */





/* Maximum value an `unsigned char' can hold.  (Minimum is 0).  */



 

/* Minimum and maximum values a `char' can hold.  */




 



 




/* Minimum and maximum values a `signed short int' can hold.  */





/* Maximum value an `unsigned short int' can hold.  (Minimum is 0).  */



 

/* Minimum and maximum values a `signed int' can hold.  */





/* Maximum value an `unsigned int' can hold.  (Minimum is 0).  */



/* Minimum and maximum values a `signed long int' can hold.
   (Same as `int').  */





/* Maximum value an `unsigned long int' can hold.  (Minimum is 0).  */




/* Minimum and maximum values a `signed long long int' can hold.  */





/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */















/* This administrivia gets added to the end of limits.h
   if the system has its own version of limits.h.  */

 



#line 127 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/limits.h" 2

/* The <limits.h> files in some gcc versions don't define LLONG_MIN,
   LLONG_MAX, and ULLONG_MAX.  Instead only the values gcc defined for
   ages are available.  */












/* POSIX adds things to <limits.h>.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/posix1_lim.h" 1
/* Copyright (C) 1991-1993,96,98,2000-2003,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.9.2 Minimum Values	Added to <limits.h>
 *
 *	Never include this file directly; use <limits.h> instead.
 */





/* These are the standard-mandated minimum values.  */

/* Minimum number of operations in one list I/O call.  */


/* Minimal number of outstanding asynchronous I/O operations.  */


/* Maximum length of arguments to `execve', including environment.  */


/* Maximum simultaneous processes per real user ID.  */


 

/* Minimal number of timer expiration overruns.  */


/* Maximum length of a host name (not including the terminating null)
   as returned from the GETHOSTNAME function.  */


/* Maximum link count of a file.  */


/* Maximum length of login name.  */


/* Number of bytes in a terminal canonical input queue.  */


/* Number of bytes for which space will be
   available in a terminal input queue.  */


/* Maximum number of message queues open for a process.  */


/* Maximum number of supported message priorities.  */


/* Number of bytes in a filename.  */


/* Number of simultaneous supplementary group IDs per process.  */


 

/* Number of files one process can have open at once.  */


 






/* Number of bytes in a pathname.  */


/* Number of bytes than can be written atomically to a pipe.  */


/* The number of repeated occurrences of a BRE permitted by the
   REGEXEC and REGCOMP functions when using the interval notation.  */


/* Minimal number of realtime signals reserved for the application.  */


/* Number of semaphores a process can have.  */


/* Maximal value of a semaphore.  */


/* Number of pending realtime signals.  */


/* Largest value of a `ssize_t'.  */


/* Number of streams a process can have open at once.  */


/* The number of bytes in a symbolic link.  */


/* The number of symbolic links that can be traversed in the
   resolution of a pathname in the absence of a loop.  */


/* Number of timer for a process.  */


/* Maximum number of characters in a tty name.  */


/* Maximum length of a timezone name (element of `tzname').  */













/* Maximum clock resolution in nanoseconds.  */



/* Get the implementation-specific values for the above.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/local_lim.h" 1
/* Minimum guaranteed maximum values for system limits.  Linux version.
   Copyright (C) 1993-1998,2000,2002-2004,2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of the
   License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* The kernel header pollutes the namespace with the NR_OPEN symbol
   and defines LINK_MAX although filesystems have different maxima.  A
   similar thing is true for OPEN_MAX: the limit can be changed at
   runtime and therefore the macro must not be defined.  Remove this
   after including the header if necessary.  */












/* The kernel sources contain a file with all the needed information.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/linux/limits.h" 1




















#line 41 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/local_lim.h" 2

/* Have to remove NR_OPEN?  */




/* Have to remove LINK_MAX?  */




/* Have to remove OPEN_MAX?  */




/* Have to remove ARG_MAX?  */




/* The number of data keys per process.  */

/* This is the value this implementation supports.  */


/* Controlling the iterations of destructors for thread-specific data.  */

/* Number of iterations this implementation does.  */


/* The number of threads per process.  */

/* We have no predefined limit on the number of threads.  */


/* Maximum amount by which a process can descrease its asynchronous I/O
   priority level.  */


/* Minimum size for a thread.  We are free to choose a reasonable value.  */


/* Maximum number of timer expiration overruns.  */


/* Maximum tty name length.  */


/* Maximum login name length.  This is arbitrary.  */


/* Maximum host name length.  */


/* Maximum message queue priority level.  */


/* Maximum value the semaphore can have.  */

#line 159 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/posix1_lim.h" 2





/* This value is a guaranteed minimum maximum.
   The current maximum can be got from `sysconf'.  */





#line 147 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/limits.h" 2


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/posix2_lim.h" 1
/* Copyright (C) 1991, 1996, 1999, 2000, 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; include <limits.h> instead.
 */





/* The maximum `ibase' and `obase' values allowed by the `bc' utility.  */


/* The maximum number of elements allowed in an array by the `bc' utility.  */


/* The maximum `scale' value allowed by the `bc' utility.  */


/* The maximum length of a string constant accepted by the `bc' utility.  */


/* The maximum number of weights that can be assigned to an entry of
   the LC_COLLATE `order' keyword in the locale definition file.  */


/* The maximum number of expressions that can be nested
   within parentheses by the `expr' utility.  */


/* The maximum length, in bytes, of an input line.  */


/* The maximum number of repeated occurrences of a regular expression
   permitted when using the interval notation `\{M,N\}'.  */


/* The maximum number of bytes in a character class name.  We have no
   fixed limit, 2048 is a high number.  */



/* These values are implementation-specific,
   and may vary within the implementation.
   Their precise values can be obtained from sysconf.  */

























/* This value is defined like this in regex.h.  */



#line 151 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/limits.h" 2




#line 747 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 748 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 749 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 750 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 1
/* Copyright (C) 1991-2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.10 Symbolic Constants		<unistd.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2



/* These may be used to determine what facilities are present at compile time.
   Their values can be obtained at run time from `sysconf'.  */


/* POSIX Standard approved as ISO/IEC 9945-1 as of September 2008.  */

 

 

 

 


/* These are not #ifdef __USE_POSIX2 because they are
   in the theoretically application-owned namespace.  */



/* The utilities on GNU systems also correspond to this version.  */
 

 

 


/* The utilities on GNU systems also correspond to this version.  */


/* If defined, the implementation supports the
   C Language Bindings Option.  */


/* If defined, the implementation supports the
   C Language Development Utilities Option.  */


/* If defined, the implementation supports the
   Software Development Utilities Option.  */


/* If defined, the implementation supports the
   creation of locales with the localedef utility.  */


/* X/Open version number to which the library conforms.  It is selectable.  */


 
 
 

/* Commands and utilities from XPG4 are available.  */


/* We are compatible with the old published standards as well.  */




/* The X/Open Unix extensions are available.  */


/* Encryption is present.  */


/* The enhanced internationalization capabilities according to XPG4.2
   are present.  */


/* The legacy interfaces are also available.  */



/* Get values of POSIX options:

   If these symbols are defined, the corresponding features are
   always available.  If not, they may be available sometimes.
   The current values can be obtained with `sysconf'.

   _POSIX_JOB_CONTROL		Job control is supported.
   _POSIX_SAVED_IDS		Processes have a saved set-user-ID
				and a saved set-group-ID.
   _POSIX_REALTIME_SIGNALS	Real-time, queued signals are supported.
   _POSIX_PRIORITY_SCHEDULING	Priority scheduling is supported.
   _POSIX_TIMERS		POSIX.4 clocks and timers are supported.
   _POSIX_ASYNCHRONOUS_IO	Asynchronous I/O is supported.
   _POSIX_PRIORITIZED_IO	Prioritized asynchronous I/O is supported.
   _POSIX_SYNCHRONIZED_IO	Synchronizing file data is supported.
   _POSIX_FSYNC			The fsync function is present.
   _POSIX_MAPPED_FILES		Mapping of files to memory is supported.
   _POSIX_MEMLOCK		Locking of all memory is supported.
   _POSIX_MEMLOCK_RANGE		Locking of ranges of memory is supported.
   _POSIX_MEMORY_PROTECTION	Setting of memory protections is supported.
   _POSIX_MESSAGE_PASSING	POSIX.4 message queues are supported.
   _POSIX_SEMAPHORES		POSIX.4 counting semaphores are supported.
   _POSIX_SHARED_MEMORY_OBJECTS	POSIX.4 shared memory objects are supported.
   _POSIX_THREADS		POSIX.1c pthreads are supported.
   _POSIX_THREAD_ATTR_STACKADDR	Thread stack address attribute option supported.
   _POSIX_THREAD_ATTR_STACKSIZE	Thread stack size attribute option supported.
   _POSIX_THREAD_SAFE_FUNCTIONS	Thread-safe functions are supported.
   _POSIX_THREAD_PRIORITY_SCHEDULING
				POSIX.1c thread execution scheduling supported.
   _POSIX_THREAD_PRIO_INHERIT	Thread priority inheritance option supported.
   _POSIX_THREAD_PRIO_PROTECT	Thread priority protection option supported.
   _POSIX_THREAD_PROCESS_SHARED	Process-shared synchronization supported.
   _POSIX_PII			Protocol-independent interfaces are supported.
   _POSIX_PII_XTI		XTI protocol-indep. interfaces are supported.
   _POSIX_PII_SOCKET		Socket protocol-indep. interfaces are supported.
   _POSIX_PII_INTERNET		Internet family of protocols supported.
   _POSIX_PII_INTERNET_STREAM	Connection-mode Internet protocol supported.
   _POSIX_PII_INTERNET_DGRAM	Connectionless Internet protocol supported.
   _POSIX_PII_OSI		ISO/OSI family of protocols supported.
   _POSIX_PII_OSI_COTS		Connection-mode ISO/OSI service supported.
   _POSIX_PII_OSI_CLTS		Connectionless ISO/OSI service supported.
   _POSIX_POLL			Implementation supports `poll' function.
   _POSIX_SELECT		Implementation supports `select' and `pselect'.

   _XOPEN_REALTIME		X/Open realtime support is available.
   _XOPEN_REALTIME_THREADS	X/Open realtime thread support is available.
   _XOPEN_SHM			Shared memory interface according to XPG4.2.

   _XBS5_ILP32_OFF32		Implementation provides environment with 32-bit
				int, long, pointer, and off_t types.
   _XBS5_ILP32_OFFBIG		Implementation provides environment with 32-bit
				int, long, and pointer and off_t with at least
				64 bits.
   _XBS5_LP64_OFF64		Implementation provides environment with 32-bit
				int, and 64-bit long, pointer, and off_t types.
   _XBS5_LPBIG_OFFBIG		Implementation provides environment with at
				least 32 bits int and long, pointer, and off_t
				with at least 64 bits.

   If any of these symbols is defined as -1, the corresponding option is not
   true for any file.  If any is defined as other than -1, the corresponding
   option is true for all files.  If a symbol is not defined at all, the value
   for a specific file can be obtained from `pathconf' and `fpathconf'.

   _POSIX_CHOWN_RESTRICTED	Only the super user can use `chown' to change
				the owner of a file.  `chown' can only be used
				to change the group ID of a file to a group of
				which the calling process is a member.
   _POSIX_NO_TRUNC		Pathname components longer than
				NAME_MAX generate an error.
   _POSIX_VDISABLE		If defined, if the value of an element of the
				`c_cc' member of `struct termios' is
				_POSIX_VDISABLE, no character will have the
				effect associated with that element.
   _POSIX_SYNC_IO		Synchronous I/O may be performed.
   _POSIX_ASYNC_IO		Asynchronous I/O may be performed.
   _POSIX_PRIO_IO		Prioritized Asynchronous I/O may be performed.

   Support for the Large File Support interface is not generally available.
   If it is available the following constants are defined to one.
   _LFS64_LARGEFILE		Low-level I/O supports large files.
   _LFS64_STDIO			Standard I/O supports large files.
   */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/posix_opt.h" 1
/* Define POSIX options for Linux.
   Copyright (C) 1996-2004, 2006, 2008, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of the
   License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */




/* Job control is supported.  */


/* Processes have a saved set-user-ID and a saved set-group-ID.  */


/* Priority scheduling is supported.  */


/* Synchronizing file data is supported.  */


/* The fsync function is present.  */


/* Mapping of files to memory is supported.  */


/* Locking of all memory is supported.  */


/* Locking of ranges of memory is supported.  */


/* Setting of memory protections is supported.  */


/* Some filesystems allow all users to change file ownership.  */


/* `c_cc' member of 'struct termios' structure can be disabled by
   using the value _POSIX_VDISABLE.  */


/* Filenames are not silently truncated.  */


/* X/Open realtime support is available.  */


/* X/Open thread realtime support is available.  */


/* XPG4.2 shared memory is supported.  */


/* Tell we have POSIX threads.  */


/* We have the reentrant functions described in POSIX.  */



/* We provide priority scheduling for threads.  */


/* We support user-defined stack sizes.  */


/* We support user-defined stacks.  */


/* We support priority inheritence.  */


/* We support priority protection, though only for non-robust
   mutexes.  */



/* We support priority inheritence for robust mutexes.  */


/* We do not support priority protection for robust mutexes.  */


/* We support POSIX.1b semaphores.  */


/* Real-time signals are supported.  */


/* We support asynchronous I/O.  */


/* Alternative name for Unix98.  */

/* Support for prioritization is also available.  */


/* The LFS support in asynchronous I/O is also available.  */


/* The rest of the LFS is also available.  */




/* POSIX shared memory objects are implemented.  */


/* CPU-time clocks support needs to be checked at runtime.  */


/* Clock support in threads must be also checked at runtime.  */


/* GNU libc provides regular expression handling.  */


/* Reader/Writer locks are available.  */


/* We have a POSIX shell.  */


/* We support the Timeouts option.  */


/* We support spinlocks.  */


/* The `spawn' function family is supported.  */


/* We have POSIX timers.  */


/* The barrier functions are available.  */


/* POSIX message queues are available.  */


/* Thread process-shared synchronization is supported.  */


/* The monotonic clock might be available.  */


/* The clock selection interfaces are available.  */


/* Advisory information interfaces are available.  */


/* IPv6 support is available.  */


/* Raw socket support is available.  */


/* We have at least one terminal.  */


/* Neither process nor thread sporadic server interfaces is available.  */



/* trace.h is not available.  */





/* Typed memory objects are not available.  */


/* Streams are not available.  */



#line 205 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2

/* Get the environment definitions from Unix98.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/environments.h" 1
/* Copyright (C) 1999, 2001, 2004, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/environments.h" 2

/* This header should define the following symbols under the described
   situations.  A value `1' means that the model is always supported,
   `-1' means it is never supported.  Undefined means it cannot be
   statically decided.

   _POSIX_V7_ILP32_OFF32   32bit int, long, pointers, and off_t type
   _POSIX_V7_ILP32_OFFBIG  32bit int, long, and pointers and larger off_t type

   _POSIX_V7_LP64_OFF32	   64bit long and pointers and 32bit off_t type
   _POSIX_V7_LPBIG_OFFBIG  64bit long and pointers and large off_t type

   The macros _POSIX_V6_ILP32_OFF32, _POSIX_V6_ILP32_OFFBIG,
   _POSIX_V6_LP64_OFF32, _POSIX_V6_LPBIG_OFFBIG, _XBS5_ILP32_OFF32,
   _XBS5_ILP32_OFFBIG, _XBS5_LP64_OFF32, and _XBS5_LPBIG_OFFBIG were
   used in previous versions of the Unix standard and are available
   only for compatibility.
*/


/* Environments with 32-bit wide pointers are optionally provided.
   Therefore following macros aren't defined:
   # undef _POSIX_V7_ILP32_OFF32
   # undef _POSIX_V7_ILP32_OFFBIG
   # undef _POSIX_V6_ILP32_OFF32
   # undef _POSIX_V6_ILP32_OFFBIG
   # undef _XBS5_ILP32_OFF32
   # undef _XBS5_ILP32_OFFBIG
   and users need to check at runtime.  */

/* We also have no use (for now) for an environment with bigger pointers
   and offsets.  */




/* By default we have 64-bit wide `long int', pointers and `off_t'.  */




 




























#line 209 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2

/* Standard file descriptors.  */





/* All functions that are not declared anywhere else.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 220 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 229 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2


/* The Single Unix specification says that some more types are
   available here.  */











 








typedef __useconds_t useconds_t;















typedef __socklen_t socklen_t;



/* Values for the second argument to access.
   These may be OR'd together.  */





/* Test for access to NAME using the real UID and real GID.  */
extern int access (__const char *__name, int __type) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





     



     


/* Test for access to FILE relative to the directory FD is open on.
   If AT_EACCESS is set in FLAG, then use effective IDs like `eaccess',
   otherwise use real IDs like `access'.  */
extern int faccessat (int __fd, __const char *__file, int __type, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Values for the WHENCE argument to lseek.  */






/* Old BSD names for the same constants; just for compatibility.  */




/* Move FD's file position to OFFSET bytes from the
   beginning of the file (if WHENCE is SEEK_SET),
   the current position (if WHENCE is SEEK_CUR),
   or the end of the file (if WHENCE is SEEK_END).
   Return the new file position.  */

extern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__));
 

				 
				 
 




     

/* Close the file descriptor FD.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int close (int __fd);

/* Read NBYTES into BUF from FD.  Return the
   number read, -1 for errors or 0 for EOF.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;

/* Write N bytes of BUF to FD.  Return the number written, or -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t write (int __fd, __const void *__buf, size_t __n) ;



/* Read NBYTES into BUF from FD at the given position OFFSET without
   changing the file pointer.  Return the number read, -1 for errors
   or 0 for EOF.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes,
		      __off_t __offset) ;

/* Write N bytes of BUF to FD at the given position OFFSET without
   changing the file pointer.  Return the number written, or -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t pwrite (int __fd, __const void *__buf, size_t __n,
		       __off_t __offset) ;
 

				   
			   

				    
			   
 








			



			 


/* Create a one-way communication channel (pipe).
   If successful, two file descriptors are stored in PIPEDES;
   bytes written on PIPEDES[1] can be read from PIPEDES[0].
   Returns 0 if successful, -1 if not.  */
extern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__)) ;






/* Schedule an alarm.  In SECONDS seconds, the process will get a SIGALRM.
   If SECONDS is zero, any currently scheduled alarm will be cancelled.
   The function returns the number of seconds remaining until the last
   alarm scheduled would have signaled, or zero if there wasn't one.
   There is no return value to indicate an error, but you can set `errno'
   to 0 and check its value after calling `alarm', and this might tell you.
   The signal may come late due to processor scheduling.  */
extern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__));

/* Make the process sleep for SECONDS seconds, or until a signal arrives
   and is not ignored.  The function returns the number of seconds less
   than SECONDS which it actually slept (thus zero if it slept the full time).
   If a signal handler does a `longjmp' or modifies the handling of the
   SIGALRM signal while inside `sleep' call, the handling of the SIGALRM
   signal afterwards is undefined.  There is no return value to indicate
   error, but if `sleep' returns SECONDS, it probably didn't work.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern unsigned int sleep (unsigned int __seconds);


/* Set an alarm to go off (generating a SIGALRM signal) in VALUE
   microseconds.  If INTERVAL is nonzero, when the alarm goes off, the
   timer is reset to go off every INTERVAL microseconds thereafter.
   Returns the number of microseconds remaining before the alarm.  */
extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     __attribute__ ((__nothrow__));

/* Sleep USECONDS microseconds, or until a signal arrives that is not blocked
   or ignored.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int usleep (__useconds_t __useconds);

/* Suspend the process until a signal arrives.
   This always returns -1 and sets `errno' to EINTR.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int pause (void);


/* Change the owner and group of FILE.  */
extern int chown (__const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Change the owner and group of the file that FD is open on.  */
extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__)) ;


/* Change owner and group of FILE, if it is a symbolic
   link the ownership of the symbolic link is changed.  */
extern int lchown (__const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Change the owner and group of FILE relative to the directory FD is open
   on.  */
extern int fchownat (int __fd, __const char *__file, __uid_t __owner,
		     __gid_t __group, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Change the process's working directory to PATH.  */
extern int chdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Change the process's working directory to the one FD is open on.  */
extern int fchdir (int __fd) __attribute__ ((__nothrow__)) ;

/* Get the pathname of the current working directory,
   and put it in SIZE bytes of BUF.  Returns NULL if the
   directory couldn't be determined or SIZE was too small.
   If successful, returns BUF.  In GNU, if BUF is NULL,
   an array is allocated with `malloc'; the array is SIZE
   bytes long, unless SIZE == 0, in which case it is as
   big as necessary.  */
extern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__)) ;








/* Put the absolute pathname of the current working directory in BUF.
   If successful, return BUF.  If not, put an error message in
   BUF and return NULL.  BUF should be at least PATH_MAX bytes long.  */
extern char *getwd (char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;

/* Duplicate FD, returning a new file descriptor on the same file.  */
extern int dup (int __fd) __attribute__ ((__nothrow__)) ;

/* Duplicate FD to FD2, closing FD2 and making it open on the same file.  */
extern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__));






/* NULL-terminated array of "NAME=VALUE" environment variables.  */
extern char **__environ;



/* Replace the current process, executing PATH with arguments ARGV and
   environment ENVP.  ARGV and ENVP are terminated by NULL pointers.  */
extern int execve (__const char *__path, char *__const __argv[],
		   char *__const __envp[]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Execute the file FD refers to, overlaying the running program image.
   ARGV and ENVP are passed to the new program, as for `execve'.  */
extern int fexecve (int __fd, char *__const __argv[], char *__const __envp[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Execute PATH with arguments ARGV and environment from `environ'.  */
extern int execv (__const char *__path, char *__const __argv[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute PATH with all arguments after PATH until a NULL pointer,
   and the argument after that for environment.  */
extern int execle (__const char *__path, __const char *__arg, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute PATH with all arguments after PATH until
   a NULL pointer and environment from `environ'.  */
extern int execl (__const char *__path, __const char *__arg, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute FILE, searching in the `PATH' environment variable if it contains
   no slashes, with arguments ARGV and environment from `environ'.  */
extern int execvp (__const char *__file, char *__const __argv[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute FILE, searching in the `PATH' environment variable if
   it contains no slashes, with all arguments after FILE until a
   NULL pointer and environment from `environ'.  */
extern int execlp (__const char *__file, __const char *__arg, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));





		    
     


/* Add INC to priority of the current process.  */
extern int nice (int __inc) __attribute__ ((__nothrow__)) ;

/* Terminate program execution with the low-order 8 bits of STATUS.  */
extern void _exit (int __status) __attribute__ ((__noreturn__));


/* Get the `_PC_*' symbols for the NAME argument to `pathconf' and `fpathconf';
   the `_SC_*' symbols for the NAME argument to `sysconf';
   and the `_CS_*' symbols for the NAME argument to `confstr'.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/confname.h" 1
/* `sysconf', `pathconf', and `confstr' NAME values.  Generic version.
   Copyright (C) 1993,1995-1998,2000,2001,2003,2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Values for the NAME argument to `pathconf' and `fpathconf'.  */
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX,

    _PC_2_SYMLINKS

  };

/* Values for the argument to `sysconf'.  */
enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,


    /* Values for the argument to `sysconf'
       corresponding to _POSIX2_* symbols.  */
    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,


    /* Values according to POSIX 1003.1c (POSIX threads).  */
    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG,


    _SC_LEVEL1_ICACHE_SIZE,

    _SC_LEVEL1_ICACHE_ASSOC,

    _SC_LEVEL1_ICACHE_LINESIZE,

    _SC_LEVEL1_DCACHE_SIZE,

    _SC_LEVEL1_DCACHE_ASSOC,

    _SC_LEVEL1_DCACHE_LINESIZE,

    _SC_LEVEL2_CACHE_SIZE,

    _SC_LEVEL2_CACHE_ASSOC,

    _SC_LEVEL2_CACHE_LINESIZE,

    _SC_LEVEL3_CACHE_SIZE,

    _SC_LEVEL3_CACHE_ASSOC,

    _SC_LEVEL3_CACHE_LINESIZE,

    _SC_LEVEL4_CACHE_SIZE,

    _SC_LEVEL4_CACHE_ASSOC,

    _SC_LEVEL4_CACHE_LINESIZE,

    /* Leave room here, maybe we need a few more cache levels some day.  */

    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,

    _SC_RAW_SOCKETS,


    _SC_V7_ILP32_OFF32,

    _SC_V7_ILP32_OFFBIG,

    _SC_V7_LP64_OFF64,

    _SC_V7_LPBIG_OFFBIG,


    _SC_SS_REPL_MAX,


    _SC_TRACE_EVENT_NAME_MAX,

    _SC_TRACE_NAME_MAX,

    _SC_TRACE_SYS_MAX,

    _SC_TRACE_USER_EVENT_MAX,


    _SC_XOPEN_STREAMS,


    _SC_THREAD_ROBUST_PRIO_INHERIT,

    _SC_THREAD_ROBUST_PRIO_PROTECT

  };

/* Values for the NAME argument to `confstr'.  */
enum
  {
    _CS_PATH,			/* The default search path.  */


    _CS_V6_WIDTH_RESTRICTED_ENVS,



    _CS_GNU_LIBC_VERSION,

    _CS_GNU_LIBPTHREAD_VERSION,


    _CS_V5_WIDTH_RESTRICTED_ENVS,



    _CS_V7_WIDTH_RESTRICTED_ENVS,



    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,


    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V7_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LIBS,

    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V7_LP64_OFF64_CFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LIBS,

    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,


    _CS_V6_ENV,

    _CS_V7_ENV

  };
#line 608 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2

/* Get file-specific configuration information about PATH.  */
extern long int pathconf (__const char *__path, int __name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Get file-specific configuration about descriptor FD.  */
extern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__));

/* Get the value of the system variable NAME.  */
extern long int sysconf (int __name) __attribute__ ((__nothrow__));


/* Get the value of the string-valued system variable NAME.  */
extern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__));

/* Get the process ID of the calling process.  */
extern __pid_t getpid (void) __attribute__ ((__nothrow__));

/* Get the process ID of the calling process's parent.  */
extern __pid_t getppid (void) __attribute__ ((__nothrow__));

/* Get the process group ID of the calling process.
   This function is different on old BSD. */

extern __pid_t getpgrp (void) __attribute__ ((__nothrow__));
 

 


/* Get the process group ID of process PID.  */
extern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__));

extern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__));

/* Set the process group ID of the process matching PID to PGID.
   If PID is zero, the current process's process group ID is set.
   If PGID is zero, the process ID of the process is used.  */
extern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__));


/* Both System V and BSD have `setpgrp' functions, but with different
   calling conventions.  The BSD function is the same as POSIX.1 `setpgid'
   (above).  The System V function takes no arguments and puts the calling
   process in its on group like `setpgid (0, 0)'.

   New programs should always use `setpgid' instead.

   The default in GNU is to provide the System V function.  The BSD
   function is available under -D_BSD_SOURCE.  */


/* Set the process group ID of the calling process to its own PID.
   This is exactly the same as `setpgid (0, 0)'.  */
extern int setpgrp (void) __attribute__ ((__nothrow__));

 


 



/* Create a new session with the calling process as its leader.
   The process group IDs of the session and the calling process
   are set to the process ID of the calling process, which is returned.  */
extern __pid_t setsid (void) __attribute__ ((__nothrow__));


/* Return the session ID of the given process.  */
extern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__));

/* Get the real user ID of the calling process.  */
extern __uid_t getuid (void) __attribute__ ((__nothrow__));

/* Get the effective user ID of the calling process.  */
extern __uid_t geteuid (void) __attribute__ ((__nothrow__));

/* Get the real group ID of the calling process.  */
extern __gid_t getgid (void) __attribute__ ((__nothrow__));

/* Get the effective group ID of the calling process.  */
extern __gid_t getegid (void) __attribute__ ((__nothrow__));

/* If SIZE is zero, return the number of supplementary groups
   the calling process is in.  Otherwise, fill in the group IDs
   of its supplementary groups in LIST and return the number written.  */
extern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__)) ;





/* Set the user ID of the calling process to UID.
   If the calling process is the super-user, set the real
   and effective user IDs, and the saved set-user-ID to UID;
   if not, the effective user ID is set to UID.  */
extern int setuid (__uid_t __uid) __attribute__ ((__nothrow__));


/* Set the real user ID of the calling process to RUID,
   and the effective user ID of the calling process to EUID.  */
extern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__));


/* Set the effective user ID of the calling process to UID.  */
extern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__));

/* Set the group ID of the calling process to GID.
   If the calling process is the super-user, set the real
   and effective group IDs, and the saved set-group-ID to GID;
   if not, the effective group ID is set to GID.  */
extern int setgid (__gid_t __gid) __attribute__ ((__nothrow__));


/* Set the real group ID of the calling process to RGID,
   and the effective group ID of the calling process to EGID.  */
extern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__));


/* Set the effective group ID of the calling process to GID.  */
extern int setegid (__gid_t __gid) __attribute__ ((__nothrow__));





     




     




     




     

/* Clone the calling process, creating an exact copy.
   Return -1 for errors, 0 to the new process,
   and the process ID of the new process to the old process.  */
extern __pid_t fork (void) __attribute__ ((__nothrow__));


/* Clone the calling process, but without copying the whole address space.
   The calling process is suspended until the new process exits or is
   replaced by a call to `execve'.  Return -1 for errors, 0 to the new process,
   and the process ID of the new process to the old process.  */
extern __pid_t vfork (void) __attribute__ ((__nothrow__));

/* Return the pathname of the terminal FD is open on, or NULL on errors.
   The returned storage is good only until the next call to this function.  */
extern char *ttyname (int __fd) __attribute__ ((__nothrow__));

/* Store at most BUFLEN characters of the pathname of the terminal FD is
   open on in BUF.  Return 0 on success, otherwise an error number.  */
extern int ttyname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Return 1 if FD is a valid descriptor associated
   with a terminal, zero if not.  */
extern int isatty (int __fd) __attribute__ ((__nothrow__));


/* Return the index into the active-logins file (utmp) for
   the controlling terminal.  */
extern int ttyslot (void) __attribute__ ((__nothrow__));

/* Make a link to FROM named TO.  */
extern int link (__const char *__from, __const char *__to)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;


/* Like link but relative paths in TO and FROM are interpreted relative
   to FROMFD and TOFD respectively.  */
extern int linkat (int __fromfd, __const char *__from, int __tofd,
		   __const char *__to, int __flags)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4))) ;


/* Make a symbolic link to FROM named TO.  */
extern int symlink (__const char *__from, __const char *__to)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;

/* Read the contents of the symbolic link PATH into no more than
   LEN bytes of BUF.  The contents are not null-terminated.
   Returns the number of characters read, or -1 for errors.  */
extern ssize_t readlink (__const char *__restrict __path,
			 char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;


/* Like symlink but a relative path in TO is interpreted relative to TOFD.  */
extern int symlinkat (__const char *__from, int __tofd,
		      __const char *__to) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;

/* Like readlink but a relative PATH is interpreted relative to FD.  */
extern ssize_t readlinkat (int __fd, __const char *__restrict __path,
			   char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3))) ;

/* Remove the link NAME.  */
extern int unlink (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Remove the link NAME relative to FD.  */
extern int unlinkat (int __fd, __const char *__name, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Remove the directory PATH.  */
extern int rmdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Return the foreground process group ID of FD.  */
extern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__));

/* Set the foreground process group ID of FD set PGRP_ID.  */
extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__));


/* Return the login name of the user.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern char *getlogin (void);

/* Return at most NAME_LEN characters of the login name of the user in NAME.
   If it cannot be determined or some other error occurred, return the error
   code.  Otherwise return 0.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));


/* Set the login name returned by `getlogin'.  */
extern int setlogin (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Get definitions and prototypes for functions to process the
   arguments in ARGV (ARGC of them, minus the program name) for
   options given in OPTS.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/getopt.h" 1
/* Declarations for getopt.
   Copyright (C) 1989-1994,1996-1999,2001,2003,2004,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */





/* If __GNU_LIBRARY__ is not already defined, either we are being used
   standalone, or this is the first header included in the source file.
   If we are being used with glibc, we need to include <features.h>, but
   that does not exist if we are standalone.  So: if __GNU_LIBRARY__ is
   not defined, include <ctype.h>, which will pull in <features.h> for us
   if it's from glibc.  (Why ctype.h?  It's guaranteed to exist and it
   doesn't flood the namespace with stuff the way some other headers do.)  */









 





/* For communication from `getopt' to the caller.
   When `getopt' finds an option that takes an argument,
   the argument value is returned here.
   Also, when `ordering' is RETURN_IN_ORDER,
   each non-option ARGV-element is returned here.  */

extern char *optarg;

/* Index in ARGV of the next element to be scanned.
   This is used for communication to and from the caller
   and for communication between successive calls to `getopt'.

   On entry to `getopt', zero means this is the first call; initialize.

   When `getopt' returns -1, this is the index of the first of the
   non-option elements that the caller should itself scan.

   Otherwise, `optind' communicates from one call to the next
   how much of ARGV has been scanned so far.  */

extern int optind;

/* Callers store zero here to inhibit the error message `getopt' prints
   for unrecognized options.  */

extern int opterr;

/* Set to an option character which was unrecognized.  */

extern int optopt;

























  
  

  
  
  








/* Get definitions and prototypes for functions to process the
   arguments in ARGV (ARGC of them, minus the program name) for
   options given in OPTS.

   Return the option character from OPTS just read.  Return -1 when
   there are no more options.  For unrecognized options, or options
   missing arguments, `optopt' is set to the option letter, and '?' is
   returned.

   The OPTS string is a list of characters which are recognized option
   letters, optionally followed by colons, specifying that that letter
   takes an argument, to be placed in `optarg'.

   If a letter in OPTS is followed by two colons, its argument is
   optional.  This behavior is specific to the GNU `getopt'.

   The argument `--' causes premature termination of argument
   scanning, explicitly telling `getopt' that there are no more
   options.

   If OPTS begins with `--', then non-option arguments are treated as
   arguments to the option '\0'.  This behavior is specific to the GNU
   `getopt'.  */


/* Many other libraries have conflicting prototypes for getopt, with
   differences in the consts, in stdlib.h.  To avoid compilation
   errors, only prototype getopt for the GNU C library.  */
extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
       __attribute__ ((__nothrow__));






  
				      
			     
 
			   



 



			
		        
       

			     
		             
       





/* Make sure we later can get all the definitions and declarations.  */



#line 892 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 2


/* Put the name of the current host in no more than LEN bytes of NAME.
   The result is null-terminated if LEN is large enough for the full
   name and the terminator.  */
extern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set the name of the current host to NAME, which is LEN bytes long.
   This call is restricted to the super-user.  */
extern int sethostname (__const char *__name, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

/* Set the current machine's Internet number to ID.
   This call is restricted to the super-user.  */
extern int sethostid (long int __id) __attribute__ ((__nothrow__)) ;


/* Get and set the NIS (aka YP) domain name, if any.
   Called just like `gethostname' and `sethostname'.
   The NIS domain name is usually the empty string when not using NIS.  */
extern int getdomainname (char *__name, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
extern int setdomainname (__const char *__name, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Revoke access permissions to all processes currently communicating
   with the control terminal, and then send a SIGHUP signal to the process
   group of the control terminal.  */
extern int vhangup (void) __attribute__ ((__nothrow__));

/* Revoke the access of all descriptors currently open on FILE.  */
extern int revoke (__const char *__file) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Enable statistical profiling, writing samples of the PC into at most
   SIZE bytes of SAMPLE_BUFFER; every processor clock tick while profiling
   is enabled, the system examines the user PC and increments
   SAMPLE_BUFFER[((PC - OFFSET) / 2) * SCALE / 65536].  If SCALE is zero,
   disable profiling.  Returns zero on success, -1 on error.  */
extern int profil (unsigned short int *__sample_buffer, size_t __size,
		   size_t __offset, unsigned int __scale)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Turn accounting on if NAME is an existing file.  The system will then write
   a record for each process as it terminates, to this file.  If NAME is NULL,
   turn accounting off.  This call is restricted to the super-user.  */
extern int acct (__const char *__name) __attribute__ ((__nothrow__));


/* Successive calls return the shells listed in `/etc/shells'.  */
extern char *getusershell (void) __attribute__ ((__nothrow__));
extern void endusershell (void) __attribute__ ((__nothrow__)); /* Discard cached info.  */
extern void setusershell (void) __attribute__ ((__nothrow__)); /* Rewind and re-read the file.  */


/* Put the program in the background, and dissociate from the controlling
   terminal.  If NOCHDIR is zero, do `chdir ("/")'.  If NOCLOSE is zero,
   redirects stdin, stdout, and stderr to /dev/null.  */
extern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__)) ;


/* Make PATH be the root directory (the starting point for absolute paths).
   This call is restricted to the super-user.  */
extern int chroot (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

/* Prompt with PROMPT and read a string from the terminal without echoing.
   Uses /dev/tty if possible; otherwise stderr and stdin.  */
extern char *getpass (__const char *__prompt) __attribute__ ((__nonnull__ (1)));


/* Make all changes done to FD actually appear on disk.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int fsync (int __fd);


/* Return identifier for the current host.  */
extern long int gethostid (void);

/* Make all changes done to all files actually appear on disk.  */
extern void sync (void) __attribute__ ((__nothrow__));



/* Return the number of bytes in a page.  This is the system's page size,
   which is not necessarily the same as the hardware page size.  */
extern int getpagesize (void)  __attribute__ ((__nothrow__)) __attribute__ ((__const__));


/* Return the maximum number of file descriptors
   the current process could possibly have.  */
extern int getdtablesize (void) __attribute__ ((__nothrow__));



/* Truncate FILE to LENGTH bytes.  */

extern int truncate (__const char *__file, __off_t __length)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
 

			   
			   
 




     

/* Truncate the file FD is open on to LENGTH bytes.  */

extern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__)) ;
 

			   
 







/* Set the end of accessible data space (aka "the break") to ADDR.
   Returns zero on success and -1 for errors (with errno set).  */
extern int brk (void *__addr) __attribute__ ((__nothrow__)) ;

/* Increase or decrease the end of accessible data space by DELTA bytes.
   If successful, returns the address the previous end of data space
   (i.e. the beginning of the new space, if DELTA > 0);
   returns (void *) -1 for errors (with errno set).  */
extern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__));


/* Invoke `system call' number SYSNO, passing it the remaining arguments.
   This is completely system-dependent, and not often useful.

   In Unix, `syscall' sets `errno' for all errors and most calls return -1
   for errors; in many systems you cannot pass arguments or get return
   values for all system calls (`pipe', `fork', and `getppid' typically
   among them).

   In Mach, all system calls take normal arguments and always return an
   error code (zero for success).  */
extern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__));



/* NOTE: These declarations also appear in <fcntl.h>; be sure to keep both
   files consistent.  Some systems have them there and some here, and some
   software depends on the macros being defined without including both.  */

/* `lockf' is a simpler interface to the locking facilities of `fcntl'.
   LEN is always relative to the current file position.
   The CMD argument is one of the following.

   This function is a cancellation point and therefore not marked with
   __THROW.  */







extern int lockf (int __fd, int __cmd, __off_t __len) ;
 

		       
 


















/* Synchronize at least the data part of a file with the underlying
   media.  */
extern int fdatasync (int __fildes);

/* XPG4.2 specifies that prototypes for the encryption functions must
   be defined here.  */



     











		  

/* The Single Unix specification demands this prototype to be here.
   It is also found in <stdio.h>.  */

/* Return the name of the controlling terminal.  */
extern char *ctermid (char *__s) __attribute__ ((__nothrow__));

/* Define some macros helping to catch buffer overflows.  */






#line 751 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */








 








 


















	
	
	
	








































	
	


















	





	




	




	




	




	




	






#line 754 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2



static struct {
	struct file *file;
	int lineno;
} current_pos;

static char *text;
static int text_size, text_asize;

struct buffer {
        struct buffer *parent;
        YY_BUFFER_STATE state;
};

struct buffer *current_buf;

static int last_ts, first_ts;

static void zconf_endhelp(void);
static void zconf_endfile(void);

void new_string(void)
{
	text = malloc(16);
	text_asize = 16;
	text_size = 0;
	*text = 0;
}

void append_string(const char *str, int size)
{
	int new_size = text_size + size + 1;
	if (size > 70) {
		fprintf (stderr, "%s:%d error: Overlong line\n",
		current_file->name, current_file->lineno);
	}

	if (new_size > text_asize) {
		new_size += 16 - 1;
		new_size &= -16;
		text = realloc(text, new_size);
		text_asize = new_size;
	}
	memcpy(text + text_size, str, size);
	text_size += size;
	text[text_size] = 0;
}

void alloc_string(const char *str, int size)
{
	text = malloc(size + 1);
	memcpy(text, str, size);
	text[size] = 0;
}








/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 1
/* Copyright (C) 1991-2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.10 Symbolic Constants		<unistd.h>
 */














 

 

 

 








 

 

 
























 
 
 

















































































































































 










































     



     






     




















 

				 
				 
 




     





























		      







		       
 

				   
			   

				    
			   
 








			



			 








































     


















     









     






		     
     




























     




















		   





     



     




     




     




     





     





		    
     
















     





















 

 




























 


 



































































     




     




     




     




















     












     





		   
     




     





			 
     




		      



			   
     







     















































     










     

     

















		   
     


























































     
 

			   
			   
 




     




 

			   
 


















































 

		       
 



























     











		  














#line 823 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lex.zconf.c" 2




/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */




 


    static void yyunput (int c,char *buf_ptr  );







//bbox: suppressing "defined but not used" warning





 


/* Amount of stuff to slurp up with each read. */



/* Copy whatever the last rule matched to the standard output. */

/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */


/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
















/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */



/* Number of entries by which start-condition stack grows. */



/* Report a fatal error. */



/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */



extern int zconflex (void);



/* Code executed at the beginning of each rule, after zconftext and zconfleng
 * have been set up.
 */



/* Code executed at the end of each rule. */






/** The main scanner function which does all the work.
 */
int zconflex (void)
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

	int str = 0;
	int ts, i;

	if ( (yy_init) )
		{
		(yy_init) = 0;


		

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! zconfin )
			zconfin = stdin;

		if ( ! zconfout )
			zconfout = stdout;

		if ( ! ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) ) {
			zconfensure_buffer_stack ();
			(yy_buffer_stack)[(yy_buffer_stack_top)] =
				zconf_create_buffer(zconfin,16384 );
		}

		zconf_load_buffer_state( );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of zconftext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		while ( (yy_current_state = yy_nxt[yy_current_state][ yy_ec[((unsigned int) (unsigned char) *yy_cp)]  ]) > 0 )
			++yy_cp;

		yy_current_state = -yy_current_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		(zconftext) = yy_bp; zconfleng = (size_t) (yy_cp - yy_bp); (yy_hold_char) = *yy_cp; *yy_cp = '\0'; (yy_c_buf_p) = yy_cp;;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
case 1:
/* rule 1 can match eol */
case 2:
/* rule 2 can match eol */

{
	current_file->lineno++;
	return 285;
}
	break;
case 3:


	break;
case 4:

{
	(yy_start) = 1 + 2 *(1);
}
	break;
case 5:

{
	yyunput( zconftext[0], (zconftext) );
	(yy_start) = 1 + 2 *(1);
}
	break;

case 6:

{
		struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
		(yy_start) = 1 + 2 *(4);
		current_pos.file = current_file;
		current_pos.lineno = current_file->lineno;
		if (id && id->flags & 0x0001) {
			zconflval.id = id;
			return id->token;
		}
		alloc_string(zconftext, zconfleng);
		zconflval.string = text;
		return 280;
	}
	break;
case 7:


	break;
case 8:
/* rule 8 can match eol */

{
		(yy_start) = 1 + 2 *(0);
		current_file->lineno++;
		return 285;
	}
	break;

case 9:

return 287;
	break;
case 10:

return 286;
	break;
case 11:

return 284;
	break;
case 12:

return 283;
	break;
case 13:

return 289;
	break;
case 14:

return 288;
	break;
case 15:

return 282;
	break;
case 16:

{
		str = zconftext[0];
		new_string();
		(yy_start) = 1 + 2 *(3);
	}
	break;
case 17:
/* rule 17 can match eol */

(yy_start) = 1 + 2 *(0); current_file->lineno++; return 285;
	break;
case 18:

/* ignore */
	break;
case 19:

{
		struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
		if (id && id->flags & 0x0002) {
			zconflval.id = id;
			return id->token;
		}
		alloc_string(zconftext, zconfleng);
		zconflval.string = text;
		return 280;
	}
	break;
case 20:

/* comment */
	break;
case 21:
/* rule 21 can match eol */

current_file->lineno++;
	break;
case 22:


	break;
case (34 + 4 + 1):
{
		(yy_start) = 1 + 2 *(0);
	}
	break;

case 23:
/* rule 23 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
(yy_c_buf_p) = yy_cp -= 1;
(zconftext) = yy_bp; zconfleng = (size_t) (yy_cp - yy_bp); (yy_hold_char) = *yy_cp; *yy_cp = '\0'; (yy_c_buf_p) = yy_cp;; /* set up zconftext again */

{
		append_string(zconftext, zconfleng);
		zconflval.string = text;
		return 281;
	}
	break;
case 24:

{
		append_string(zconftext, zconfleng);
	}
	break;
case 25:
/* rule 25 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
(yy_c_buf_p) = yy_cp -= 1;
(zconftext) = yy_bp; zconfleng = (size_t) (yy_cp - yy_bp); (yy_hold_char) = *yy_cp; *yy_cp = '\0'; (yy_c_buf_p) = yy_cp;; /* set up zconftext again */

{
		append_string(zconftext + 1, zconfleng - 1);
		zconflval.string = text;
		return 281;
	}
	break;
case 26:

{
		append_string(zconftext + 1, zconfleng - 1);
	}
	break;
case 27:

{
		if (str == zconftext[0]) {
			(yy_start) = 1 + 2 *(4);
			zconflval.string = text;
			return 281;
		} else
			append_string(zconftext, 1);
	}
	break;
case 28:
/* rule 28 can match eol */

{
		printf("%s:%d:warning: multi-line strings not supported\n", zconf_curname(), zconf_lineno());
		current_file->lineno++;
		(yy_start) = 1 + 2 *(0);
		return 285;
	}
	break;
case (34 + 3 + 1):
{
		(yy_start) = 1 + 2 *(0);
	}
	break;

case 29:

{
		ts = 0;
		for (i = 0; i < zconfleng; i++) {
			if (zconftext[i] == '\t')
				ts = (ts & ~7) + 8;
			else
				ts++;
		}
		last_ts = ts;
		if (first_ts) {
			if (ts < first_ts) {
				zconf_endhelp();
				return 268;
			}
			ts -= first_ts;
			while (ts > 8) {
				append_string("        ", 8);
				ts -= 8;
			}
			append_string("        ", ts);
		}
	}
	break;
case 30:
/* rule 30 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
(yy_c_buf_p) = yy_cp -= 1;
(zconftext) = yy_bp; zconfleng = (size_t) (yy_cp - yy_bp); (yy_hold_char) = *yy_cp; *yy_cp = '\0'; (yy_c_buf_p) = yy_cp;; /* set up zconftext again */

{
		current_file->lineno++;
		zconf_endhelp();
		return 268;
	}
	break;
case 31:
/* rule 31 can match eol */

{
		current_file->lineno++;
		append_string("\n", 1);
	}
	break;
case 32:

{
		append_string(zconftext, zconfleng);
		if (!first_ts)
			first_ts = last_ts;
	}
	break;
case (34 + 2 + 1):
{
		zconf_endhelp();
		return 268;
	}
	break;

case (34 + 0 + 1):
case (34 + 1 + 1):
{
	if (current_file) {
		zconf_endfile();
		return 285;
	}
	fclose(zconfin);
	return 0;
}
	break;
case 33:

yy_fatal_error( "flex scanner jammed" );
	break;

	case 34:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (zconftext)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		

		if ( (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buffer_status == 0 )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed zconfin at a new source and called
			 * zconflex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars;
			(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_input_file = zconfin;
			(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buffer_status = 1;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (zconftext) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (zconftext) + 0;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case 1:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( 1 )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * zconftext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (zconftext) + 0;

					yy_act = (34 + (((yy_start) - 1) / 2) + 1);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						zconfrestart(zconfin );
					}
				break;
				}

			case 0:
				(yy_c_buf_p) =
					(zconftext) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (zconftext) + 0;
				goto yy_match;

			case 2:
				(yy_c_buf_p) =
				&(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (zconftext) + 0;
				goto yy_find_action;
			}
		break;
		}

	default:
		yy_fatal_error( 
 "fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of zconflex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (void)
{
    	register char *dest = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf;
	register char *source = (zconftext);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[(yy_n_chars) + 1] )
		yy_fatal_error( 
 "fatal flex scanner internal error--end of buffer missed" );

	if ( (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (zconftext) - 0 == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return 1;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return 2;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (zconftext)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buffer_status == 2 )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			size_t num_to_read =
			(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0));

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					zconfrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				yy_fatal_error( 
 "fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > 8192 )
			num_to_read = 8192;

		/* Read in more data. */
		(*__errno_location ())=0; while ( (
(yy_n_chars) = read( fileno(zconfin), (char *) (&(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[number_to_move]), num_to_read )) < 0 ) { if( (*__errno_location ()) != 4) { yy_fatal_error( "input in flex scanner failed" ); break; } (*__errno_location ())=0; clearerr(zconfin); };

		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == 0 )
			{
			ret_val = 1;
			zconfrestart(zconfin  );
			}

		else
			{
			ret_val = 2;
			(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buffer_status =
				2;
			}
		}

	else
		ret_val = 0;

	(yy_n_chars) += number_to_move;
	(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[(yy_n_chars)] = 0;
	(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[(yy_n_chars) + 1] = 0;

	(zconftext) = &(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (void)
{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = (yy_start);

	for ( yy_cp = (zconftext) + 0; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[((unsigned int) (unsigned char) *yy_cp)] : 1)];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
{
	register int yy_is_jam;

	yy_current_state = yy_nxt[yy_current_state][1];
	yy_is_jam = (yy_current_state <= 0);

	return yy_is_jam ? 0 : yy_current_state;
}

    static void yyunput (int c, register char * yy_bp )
{
	register char *yy_cp;

    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up zconftext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[
					(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_size + 2];
		register char *source =
				&(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf[number_to_move];

		while ( source > (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars =
			(yy_n_chars) = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_size;

		if ( yy_cp < (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_ch_buf + 2 )
			yy_fatal_error( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	(zconftext) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}



    
     


	

	

	
		
		



		
			
			

		
			
			
			

			
				
				
					









					
					

					

				
					
					
						

					
						

					
 					

					

				
					
					
				
			
		

	
	
	

	


/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 *
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void zconfrestart  (FILE * input_file )
{

	if ( ! ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) ){
        zconfensure_buffer_stack ();
		(yy_buffer_stack)[(yy_buffer_stack_top)] =
            zconf_create_buffer(zconfin,16384 );
	}

	zconf_init_buffer(( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)),input_file );
	zconf_load_buffer_state( );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 *
 */
    void zconf_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
{

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		zconfpop_buffer_state();
	 *		zconfpush_buffer_state(new_buffer);
     */
	zconfensure_buffer_stack ();
	if ( ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) == new_buffer )
		return;

	if ( ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_pos = (yy_c_buf_p);
		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars = (yy_n_chars);
		}

	(yy_buffer_stack)[(yy_buffer_stack_top)] = new_buffer;
	zconf_load_buffer_state( );

	/* We don't actually know whether we did this switch during
	 * EOF (zconfwrap()) processing, but the only time this flag
	 * is looked at is after zconfwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

static void zconf_load_buffer_state  (void)
{
    	(yy_n_chars) = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars;
	(zconftext) = (yy_c_buf_p) = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_pos;
	zconfin = (yy_buffer_stack)[(yy_buffer_stack_top)]->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 *
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE zconf_create_buffer  (FILE * file, int  size )
{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) zconfalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		yy_fatal_error( "out of dynamic memory in zconf_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) zconfalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		yy_fatal_error( "out of dynamic memory in zconf_create_buffer()" );

	b->yy_is_our_buffer = 1;

	zconf_init_buffer(b,file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with zconf_create_buffer()
 *
 */
    void zconf_delete_buffer (YY_BUFFER_STATE  b )
{

	if ( ! b )
		return;

	if ( b == ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) ) /* Not sure if we should pop here. */
		(yy_buffer_stack)[(yy_buffer_stack_top)] = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		zconffree((void *) b->yy_ch_buf  );

	zconffree((void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a zconfrestart() or at EOF.
 */
    static void zconf_init_buffer  (YY_BUFFER_STATE  b, FILE * file )

{
	int oerrno = (*__errno_location ());

	zconf_flush_buffer(b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then zconf_init_buffer was _probably_
     * called from zconfrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0))){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = 0;

	(*__errno_location ()) = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 *
 */
    void zconf_flush_buffer (YY_BUFFER_STATE  b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = 0;
	b->yy_ch_buf[1] = 0;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = 0;

	if ( b == ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) )
		zconf_load_buffer_state( );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *
 */
void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer )
{
    	if (new_buffer == ((void *)0))
		return;

	zconfensure_buffer_stack();

	/* This block is copied from zconf_switch_to_buffer. */
	if ( ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_buf_pos = (yy_c_buf_p);
		(yy_buffer_stack)[(yy_buffer_stack_top)]->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)))
		(yy_buffer_stack_top)++;
	(yy_buffer_stack)[(yy_buffer_stack_top)] = new_buffer;

	/* copied from zconf_switch_to_buffer. */
	zconf_load_buffer_state( );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *
 */
void zconfpop_buffer_state (void)
{
    	if (!( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)))
		return;

	zconf_delete_buffer(( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)) );
	(yy_buffer_stack)[(yy_buffer_stack_top)] = ((void *)0);
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0))) {
		zconf_load_buffer_state( );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void zconfensure_buffer_stack (void)
{
	int num_to_alloc;

	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)zconfalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)zconfrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 *
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE zconf_scan_buffer  (char * base, yy_size_t  size )
{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != 0 ||
	     base[size-1] != 0 )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) zconfalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		yy_fatal_error( "out of dynamic memory in zconf_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = 0;

	zconf_switch_to_buffer(b  );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to zconflex() will
 * scan from a @e copy of @a str.
 * @param yy_str a NUL-terminated string to scan
 *
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       zconf_scan_bytes() instead.
 */
YY_BUFFER_STATE zconf_scan_string (const char * yy_str )
{

	return zconf_scan_bytes(yy_str,strlen(yy_str) );
}

/** Setup the input buffer state to scan the given bytes. The next call to zconflex() will
 * scan from a @e copy of @a bytes.
 * @param bytes the byte buffer to scan
 * @param len the number of bytes in the buffer pointed to by @a bytes.
 *
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE zconf_scan_bytes  (const char * bytes, int  len )
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) zconfalloc(n  );
	if ( ! buf )
		yy_fatal_error( "out of dynamic memory in zconf_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = 0;

	b = zconf_scan_buffer(buf,n );
	if ( ! b )
		yy_fatal_error( "bad buffer in zconf_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}




static void yy_fatal_error (const char* msg )
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( 2 );
}

/* Redefine yyless() so it works in section 3 code. */
















/* Accessor  methods (get/set functions) to struct members. */

/** Get the current line number.
 *
 */
int zconfget_lineno  (void)
{

    return zconflineno;
}

/** Get the input stream.
 *
 */
FILE *zconfget_in  (void)
{
        return zconfin;
}

/** Get the output stream.
 *
 */
FILE *zconfget_out  (void)
{
        return zconfout;
}

/** Get the length of the current token.
 *
 */
int zconfget_leng  (void)
{
        return zconfleng;
}

/** Get the current token.
 *
 */

char *zconfget_text  (void)
{
        return zconftext;
}

/** Set the current line number.
 * @param line_number
 *
 */
void zconfset_lineno (int  line_number )
{

    zconflineno = line_number;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 *
 * @see zconf_switch_to_buffer
 */
void zconfset_in (FILE *  in_str )
{
        zconfin = in_str ;
}

void zconfset_out (FILE *  out_str )
{
        zconfout = out_str ;
}

int zconfget_debug  (void)
{
        return zconf_flex_debug;
}

void zconfset_debug (int  bdebug )
{
        zconf_flex_debug = bdebug ;
}

/* zconflex_destroy is for both reentrant and non-reentrant scanners. */
int zconflex_destroy  (void)
{

    /* Pop the buffer stack, destroying each element. */
	while(( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0))){
		zconf_delete_buffer(( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0))  );
		(yy_buffer_stack)[(yy_buffer_stack_top)] = ((void *)0);
		zconfpop_buffer_state();
	}

	/* Destroy the stack itself. */
	zconffree((yy_buffer_stack) );
	(yy_buffer_stack) = ((void *)0);

    return 0;
}

/*
 * Internal utility routines.
 */




	
    	
		





	
    	
		

	


void *zconfalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *zconfrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void zconffree (void * ptr )
{
	free( (char *) ptr );	/* see zconfrealloc() for (char *) cast */
}















void zconf_starthelp(void)
{
	new_string();
	last_ts = first_ts = 0;
	(yy_start) = 1 + 2 *(2);
}

static void zconf_endhelp(void)
{
	zconflval.string = text;
	(yy_start) = 1 + 2 *(0);
}

/*
 * Try to open specified file with following names:
 * ./name
 * $(srctree)/name
 * The latter is used when srctree is separate from objtree
 * when compiling the kernel.
 * Return NULL if file is not found.
 */
FILE *zconf_fopen(const char *name)
{
	char *env;
	FILE *f;

	f = fopen(name, "r");
	if (!f && name[0] != '/') {
		env = getenv("srctree");
		if (env) {
			char *fullname = __builtin_alloca (strlen(env) + strlen(name) + 2);
			sprintf(fullname, "%s/%s", env, name);
			f = fopen(fullname, "r");
		}
	}
	return f;
}

void zconf_initscan(const char *name)
{
	zconfin = zconf_fopen(name);
	if (!zconfin) {
		printf("can't find file %s\n", name);
		exit(1);
	}

	current_buf = malloc(sizeof(*current_buf));
	memset(current_buf, 0, sizeof(*current_buf));

	current_file = file_lookup(name);
	current_file->lineno = 1;
	current_file->flags = 0x0001;
}

void zconf_nextfile(const char *name)
{
	struct file *file = file_lookup(name);
	struct buffer *buf = malloc(sizeof(*buf));
	memset(buf, 0, sizeof(*buf));

	current_buf->state = ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0));
	zconfin = zconf_fopen(name);
	if (!zconfin) {
		printf("%s:%d: can't open file \"%s\"\n", zconf_curname(), zconf_lineno(), name);
		exit(1);
	}
	zconf_switch_to_buffer(zconf_create_buffer(zconfin,16384));
	buf->parent = current_buf;
	current_buf = buf;

	if (file->flags & 0x0001) {
		printf("recursive scan (%s)?\n", name);
		exit(1);
	}
	if (file->flags & 0x0002) {
		printf("file %s already scanned?\n", name);
		exit(1);
	}
	file->flags |= 0x0001;
	file->lineno = 1;
	file->parent = current_file;
	current_file = file;
}

static void zconf_endfile(void)
{
	struct buffer *parent;

	current_file->flags |= 0x0002;
	current_file->flags &= ~0x0001;
	current_file = current_file->parent;

	parent = current_buf->parent;
	if (parent) {
		fclose(zconfin);
		zconf_delete_buffer(( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : ((void *)0)));
		zconf_switch_to_buffer(parent->state);
	}
	free(current_buf);
	current_buf = parent;
}

int zconf_lineno(void)
{
	return current_pos.lineno;
}

char *zconf_curname(void)
{
	return current_pos.file ? current_pos.file->name : "<none>";
}
#line 2172 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/util.c" 1
/*
 * Copyright (C) 2002-2005 Roman Zippel <zippel@linux-m68k.org>
 * Copyright (C) 2002-2005 Sam Ravnborg <sam@ravnborg.org>
 *
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 10 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/util.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */








 








 


















	
	
	
	








































	
	


















	





	




	




	




	




	




	






#line 11 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/util.c" 2

/* file already present in list? If not add it */
struct file *file_lookup(const char *name)
{
	struct file *file;

	for (file = file_list; file; file = file->next) {
		if (!strcmp(name, file->name))
			return file;
	}

	file = malloc(sizeof(*file));
	memset(file, 0, sizeof(*file));
	file->name = strdup(name);
	file->next = file_list;
	file_list = file;
	return file;
}

/* write a dependency file as used by kbuild to track dependencies */
int file_write_dep(const char *name)
{
	struct file *file;
	FILE *out;

	if (!name)
		name = ".kconfig.d";
	out = fopen("..config.tmp", "w");
	if (!out)
		return 1;
	fprintf(out, "deps_config := \\\n");
	for (file = file_list; file; file = file->next) {
		if (file->next)
			fprintf(out, "\t%s \\\n", file->name);
		else
			fprintf(out, "\t%s\n", file->name);
	}
	fprintf(out,
		"\n"
		".config include/autoconf.h: $(deps_config)\n"
		"\n"
		"include/autoconf.h: .config\n" /* bbox */
		"\n"
		"$(deps_config):\n");
	fclose(out);
	rename("..config.tmp", name);
	return 0;
}


/* Allocate initial growable string */
struct gstr str_new(void)
{
	struct gstr gs;
	gs.s = malloc(sizeof(char) * 64);
	gs.len = 16;
	strcpy(gs.s, "\0");
	return gs;
}

/* Allocate and assign growable string */
struct gstr str_assign(const char *s)
{
	struct gstr gs;
	gs.s = strdup(s);
	gs.len = strlen(s) + 1;
	return gs;
}

/* Free storage for growable string */
void str_free(struct gstr *gs)
{
	if (gs->s)
		free(gs->s);
	gs->s = ((void *)0);
	gs->len = 0;
}

/* Append to growable string */
void str_append(struct gstr *gs, const char *s)
{
	size_t l = strlen(gs->s) + strlen(s) + 1;
	if (l > gs->len) {
		gs->s   = realloc(gs->s, l);
		gs->len = l;
	}
	strcat(gs->s, s);
}

/* Append printf formatted string to growable string */
void str_printf(struct gstr *gs, const char *fmt, ...)
{
	va_list ap;
	char s[10000]; /* big enough... */
	__builtin_va_start(ap,fmt);
	vsnprintf(s, sizeof(s), fmt, ap);
	str_append(gs, s);
	__builtin_va_end(ap);
}

/* Retrieve value of growable string */
const char *str_get(struct gstr *gs)
{
	return gs->s;
}
#line 2173 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/stat.h" 1
/* Copyright (C) 1991, 1992, 1995-2004, 2005, 2006, 2007, 2009, 2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 5.6 File Characteristics	<sys/stat.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/stat.h" 2

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 31 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/stat.h" 2








#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 41 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/stat.h" 2


/* The Single Unix specification says that some more types are
   available here.  */











 














 












 










#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/stat.h" 1
/* Copyright (C) 1999-2003,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







/* Versions of the `struct stat' data structure.  */










 

/* x86-64 versions of the `xmknod' interface.  */




struct stat
  {
    __dev_t st_dev;		/* Device.  */

    


    __ino_t st_ino;		/* File serial number.	*/
     


    
    
     __nlink_t st_nlink;		/* Link count.  */
    __mode_t st_mode;		/* File mode.  */

    __uid_t st_uid;		/* User ID of the file's owner.	*/
    __gid_t st_gid;		/* Group ID of the file's group.*/

    int __pad0;

    __dev_t st_rdev;		/* Device number, if device.  */

    


    __off_t st_size;			/* Size of file, in bytes.  */
     

    __blksize_t st_blksize;	/* Optimal block size for I/O.  */

    __blkcnt_t st_blocks;		/* Number 512-byte blocks allocated. */
     


    /* Nanosecond resolution timestamps are stored in a format
       equivalent to 'struct timespec'.  This is the type used
       whenever possible but the Unix namespace rules do not allow the
       identifier 'timespec' to appear in the <sys/stat.h> header.
       Therefore we have to handle the use of this header in strictly
       standard-compliant sources special.  */
    struct timespec st_atim;		/* Time of last access.  */
    struct timespec st_mtim;		/* Time of last modification.  */
    struct timespec st_ctim;		/* Time of last status change.  */



     
    
    
    
    
    


    long int __unused[3];
 
    
    
     


  };




  
    

    
    
    
     
    
    
    

    
    

    
    
    
     
    
    

    
    

    





    
    
    



     
    
    
    
    
    


    
     

  

/* Tell code we have these members.  */


/* Nanosecond resolution time values are supported.  */


/* Encoding of the file mode.  */



/* File types.  */








/* POSIX.1b objects.  Note that these macros always evaluate to zero.  But
   they do it by enforcing the correct use of the macros.  */




/* Protection bits.  */













#line 109 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/stat.h" 2

















/* Test macros for file types.	*/


















 

/* These are from POSIX.1b.  If the objects are not implemented using separate
   distinct file types, the macros always will evaluate to zero.  Unlike the
   other S_* macros the following three take a pointer to a `struct stat'
   object as the argument.  */





/* Protection bits.  */





/* Save swapped text after use (sticky bit).  This is pretty well obsolete.  */





/* Read, write, and execute by owner.  */










/* Read, write, and execute by group.  */





/* Read, write, and execute by others.  */




/* Macros for common mode bit masks.  */







/* Get file attributes for FILE and put them in BUF.  */
extern int stat (__const char *__restrict __file,
		 struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Get file attributes for the file, device, pipe, or socket
   that file descriptor FD is open on and put them in BUF.  */
extern int fstat (int __fd, struct stat *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
 

				  
     

     
 





		   



/* Similar to stat, get the attributes for FILE and put them in BUF.
   Relative path names are interpreted relative to FD unless FD is
   AT_FDCWD.  */

extern int fstatat (int __fd, __const char *__restrict __file,
		    struct stat *__restrict __buf, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
 

				     
				     
			   
 




		      
     




/* Get file attributes about FILE and put them in BUF.
   If FILE is a symbolic link, do not follow it.  */
extern int lstat (__const char *__restrict __file,
		  struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
 

			   
			    
     
 




		    
     


/* Set file access permissions for FILE to MODE.
   If FILE is a symbolic link, this affects its target instead.  */
extern int chmod (__const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set file access permissions for FILE to MODE.
   If FILE is a symbolic link, this affects the link itself
   rather than its target.  */
extern int lchmod (__const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Set file access permissions of the file FD is open on to MODE.  */

extern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__));


/* Set file access permissions of FILE relative to
   the directory FD is open on.  */
extern int fchmodat (int __fd, __const char *__file, __mode_t __mode,
		     int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Set the file creation mask of the current process to MASK,
   and return the old creation mask.  */
extern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__));






/* Create a new directory named PATH, with permission bits MODE.  */
extern int mkdir (__const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Like mkdir, create a new directory with permission bits MODE.  But
   interpret relative PATH names relative to the directory associated
   with FD.  */
extern int mkdirat (int __fd, __const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Create a device file named PATH, with permission and special bits MODE
   and device number DEV (which can be constructed from major and minor
   device numbers with the `makedev' macro above).  */

extern int mknod (__const char *__path, __mode_t __mode, __dev_t __dev)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Like mknod, create a new device file with permission bits MODE and
   device number DEV.  But interpret relative PATH names relative to
   the directory associated with FD.  */
extern int mknodat (int __fd, __const char *__path, __mode_t __mode,
		    __dev_t __dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Create a new FIFO named PATH, with permission bits MODE.  */
extern int mkfifo (__const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Like mkfifo, create a new FIFO with permission bits MODE.  But
   interpret relative PATH names relative to the directory associated
   with FD.  */
extern int mkfifoat (int __fd, __const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



/* Set file access and modification times relative to directory file
   descriptor.  */
extern int utimensat (int __fd, __const char *__path,
		      __const struct timespec __times[2],
		      int __flags)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Set file access and modification times of the file associated with FD.  */
extern int futimens (int __fd, __const struct timespec __times[2]) __attribute__ ((__nothrow__));


/* To allow the `struct stat' structure and the file type `mode_t'
   bits to vary without changing shared library major version number,
   the `stat' family of functions and `mknod' are in fact inline
   wrappers around calls to `xstat', `fxstat', `lxstat', and `xmknod',
   which all take a leading version-number argument designating the
   data structure and bits used.  <bits/stat.h> defines _STAT_VER with
   the version number corresponding to `struct stat' as defined in
   that file; and _MKNOD_VER with the version number corresponding to
   the S_IF* macros defined therein.  It is arranged that when not
   inlined these function are always statically linked; that way a
   dynamically-linked executable always encodes the version number
   corresponding to the data structures it uses, so the `x' functions
   in the shared library can adapt without needing to recompile all
   callers.  */







/* Wrappers for stat and mknod system calls.  */

extern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));
extern int __xstat (int __ver, __const char *__filename,
		    struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __lxstat (int __ver, __const char *__filename,
		     struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __fxstatat (int __ver, int __fildes, __const char *__filename,
		       struct stat *__stat_buf, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));
 

				      
     

				     
     

				      
     

					
					
			   

 






     

		      

		       

			 
     

extern int __xmknod (int __ver, __const char *__path, __mode_t __mode,
		     __dev_t *__dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int __xmknodat (int __ver, int __fd, __const char *__path,
		       __mode_t __mode, __dev_t *__dev)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 5)));







  






  





  





		

  






  





		

  






  






  





  





		  

  








#line 8 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 1
/* Copyright (C) 1991,92,93,95,96,97,98,99,2001,2002,2004,2007,2008,2009
   	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard 7.4: Character handling	<ctype.h>
 */





















 



  
  
  
  
  
  
  
  
  
  
  
  



















     

     

     





































































































  





  



















































































































#line 9 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 10 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 11 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 12 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2





/* Get size_t and NULL from <stddef.h>.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 40 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* This defines CLOCKS_PER_SEC, which is the number of processor clock
   ticks per second.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */





/* ISO/IEC 9899:1990 7.12.1: <time.h>
   The macro `CLOCKS_PER_SEC' is the number per second of the value
   returned by the `clock' function. */
/* CAE XSH, Issue 4, Version 2: <time.h>
   The value of CLOCKS_PER_SEC is required to be 1 million on all
   XSI-conformant systems. */










/* Identifier for system-wide realtime clock.  */

/* Monotonic system-wide clock.  */

/* High-resolution timer from the CPU.  */

/* Thread-specific CPU-time clock.  */

/* Monotonic system-wide clock, not adjusted for frequency scaling.  */

/* Identifier for system-wide realtime clock, updated only on ticks.  */

/* Monotonic system-wide clock, updated only on ticks.  */


/* Flag to indicate time is absolute.  */













  
    
    
  


#line 44 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* This is the obsolete POSIX.1-1988 name for the same constant.  */



































































  
    
    
  







/* Used by other time functions.  */
struct tm
{
  int tm_sec;			/* Seconds.	[0-60] (1 leap second) */
  int tm_min;			/* Minutes.	[0-59] */
  int tm_hour;			/* Hours.	[0-23] */
  int tm_mday;			/* Day.		[1-31] */
  int tm_mon;			/* Month.	[0-11] */
  int tm_year;			/* Year	- 1900.  */
  int tm_wday;			/* Day of week.	[0-6] */
  int tm_yday;			/* Days in year.[0-365]	*/
  int tm_isdst;			/* DST.		[-1/0/1]*/


  long int tm_gmtoff;		/* Seconds east of UTC.  */
  __const char *tm_zone;	/* Timezone abbreviation.  */
   
  

};





/* POSIX.1b structure for timer start values and intervals.  */
struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };

/* We can use a simple forward declaration.  */
struct sigevent;









/* Time used by the program so far (user time + system time).
   The result / CLOCKS_PER_SECOND is program time in seconds.  */
extern clock_t clock (void) __attribute__ ((__nothrow__));

/* Return the current time and put it in *TIMER if TIMER is not NULL.  */
extern time_t time (time_t *__timer) __attribute__ ((__nothrow__));

/* Return the difference between TIME1 and TIME0.  */
extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* Return the `time_t' representation of TP and normalize TP.  */
extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__));


/* Format TP into S according to FORMAT.
   Write no more than MAXSIZE characters and return the number
   of characters written, or 0 if it would exceed MAXSIZE.  */
extern size_t strftime (char *__restrict __s, size_t __maxsize,
			__const char *__restrict __format,
			__const struct tm *__restrict __tp) __attribute__ ((__nothrow__));






		       
     


/* Similar to the two functions above but take the information from
   the provided locale and not the global locale.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
  

  
  
  
  

  
  






#line 217 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
			  __const char *__restrict __format,
			  __const struct tm *__restrict __tp,
			  __locale_t __loc) __attribute__ ((__nothrow__));



			 
			 


/* Return the `struct tm' representation of *TIMER
   in Universal Coordinated Time (aka Greenwich Mean Time).  */
extern struct tm *gmtime (__const time_t *__timer) __attribute__ ((__nothrow__));

/* Return the `struct tm' representation
   of *TIMER in the local timezone.  */
extern struct tm *localtime (__const time_t *__timer) __attribute__ ((__nothrow__));



/* Return the `struct tm' representation of *TIMER in UTC,
   using *TP to store the result.  */
extern struct tm *gmtime_r (__const time_t *__restrict __timer,
			    struct tm *__restrict __tp) __attribute__ ((__nothrow__));

/* Return the `struct tm' representation of *TIMER in local time,
   using *TP to store the result.  */
extern struct tm *localtime_r (__const time_t *__restrict __timer,
			       struct tm *__restrict __tp) __attribute__ ((__nothrow__));


/* Return a string of the form "Day Mon dd hh:mm:ss yyyy\n"
   that is the representation of TP in this format.  */
extern char *asctime (__const struct tm *__tp) __attribute__ ((__nothrow__));

/* Equivalent to `asctime (localtime (timer))'.  */
extern char *ctime (__const time_t *__timer) __attribute__ ((__nothrow__));



/* Reentrant versions of the above functions.  */

/* Return in BUF a string of the form "Day Mon dd hh:mm:ss yyyy\n"
   that is the representation of TP in this format.  */
extern char *asctime_r (__const struct tm *__restrict __tp,
			char *__restrict __buf) __attribute__ ((__nothrow__));

/* Equivalent to `asctime_r (localtime_r (timer, *TMP*), buf)'.  */
extern char *ctime_r (__const time_t *__restrict __timer,
		      char *__restrict __buf) __attribute__ ((__nothrow__));

/* Defined in localtime.c.  */
extern char *__tzname[2];	/* Current timezone names.  */
extern int __daylight;		/* If daylight-saving time is ever in use.  */
extern long int __timezone;	/* Seconds west of UTC.  */



/* Same as above.  */
extern char *tzname[2];

/* Set time conversion information from the TZ environment variable.
   If TZ is not defined, a locale-dependent default is used.  */
extern void tzset (void) __attribute__ ((__nothrow__));


extern int daylight;
extern long int timezone;


/* Set the system time to *WHEN.
   This call is restricted to the superuser.  */
extern int stime (__const time_t *__when) __attribute__ ((__nothrow__));

/* Nonzero if YEAR is a leap year (every 4 years,
   except every 100th isn't, and every 400th is).  */





/* Miscellaneous functions many Unices inherited from the public domain
   localtime package.  These are included only for compatibility.  */

/* Like `mktime', but for TP represents Universal Time, not local time.  */
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__));

/* Another name for `mktime'.  */
extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__));

/* Return the number of days in YEAR.  */
extern int dysize (int __year) __attribute__ ((__nothrow__))  __attribute__ ((__const__));


/* Pause execution for a number of nanoseconds.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int nanosleep (__const struct timespec *__requested_time,
		      struct timespec *__remaining);


/* Get resolution of clock CLOCK_ID.  */
extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__));

/* Get current value of clock CLOCK_ID and store it in TP.  */
extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__));

/* Set clock CLOCK_ID to value TP.  */
extern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)
     __attribute__ ((__nothrow__));


/* High-resolution sleep with the specified clock.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int clock_nanosleep (clockid_t __clock_id, int __flags,
			    __const struct timespec *__req,
			    struct timespec *__rem);

/* Return clock ID for CPU-time clock.  */
extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__));

/* Create new per-process timer using CLOCK_ID.  */
extern int timer_create (clockid_t __clock_id,
			 struct sigevent *__restrict __evp,
			 timer_t *__restrict __timerid) __attribute__ ((__nothrow__));

/* Delete timer TIMERID.  */
extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__));

/* Set timer TIMERID to VALUE, returning old value in OVLAUE.  */
extern int timer_settime (timer_t __timerid, int __flags,
			  __const struct itimerspec *__restrict __value,
			  struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__));

/* Get current value of timer TIMERID and store it in VLAUE.  */
extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__));

/* Get expiration overrun for timer TIMERID.  */
extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__));




































		      





#line 13 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/unistd.h" 1
/* Copyright (C) 1991-2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.10 Symbolic Constants		<unistd.h>
 */














 

 

 

 








 

 

 
























 
 
 

















































































































































 










































     



     






     




















 

				 
				 
 




     





























		      







		       
 

				   
			   

				    
			   
 








			



			 








































     


















     









     






		     
     




























     




















		   





     



     




     




     




     





     





		    
     
















     





















 

 




























 


 



































































     




     




     




     




















     












     





		   
     




     





			 
     




		      



			   
     







     















































     










     

     

















		   
     


























































     
 

			   
			   
 




     




 

			   
 


















































 

		       
 



























     











		  














#line 14 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */








 








 


















	
	
	
	








































	
	


















	





	




	




	




	




	




	






#line 17 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/confdata.c" 2

static void conf_warning(const char *fmt, ...)
	__attribute__ ((format (printf, 1, 2)));

static const char *conf_filename;
static int conf_lineno, conf_warnings, conf_unsaved;

const char conf_def_filename[] = ".config";

const char conf_defname[] = "/dev/null"; //bbox

const char *conf_confnames[] = {
	conf_def_filename,
	conf_defname,
	((void *)0),
};

static void conf_warning(const char *fmt, ...)
{
	va_list ap;
	__builtin_va_start(ap,fmt);
	fprintf(stderr, "%s:%d:warning: ", conf_filename, conf_lineno);
	vfprintf(stderr, fmt, ap);
	fprintf(stderr, "\n");
	__builtin_va_end(ap);
	conf_warnings++;
}

static char *conf_expand_value(const char *in)
{
	struct symbol *sym;
	const char *src;
	static char res_value[256];
	char *dst, name[256];

	res_value[0] = 0;
	dst = name;
	while ((src = strchr(in, '$'))) {
		strncat(res_value, in, src - in);
		src++;
		dst = name;
		while (((*__ctype_b_loc ())[(int) ((*src))] & (unsigned short int) _ISalnum) || *src == '_')
			*dst++ = *src++;
		*dst = 0;
		sym = sym_lookup(name, 0);
		sym_calc_value(sym);
		strcat(res_value, sym_get_string_value(sym));
		in = src;
	}
	strcat(res_value, in);

	return res_value;
}

char *conf_get_default_confname(void)
{
	struct stat buf;
	static char *fullname = ((void *)0);
	char *env, *name;

	name = conf_expand_value(conf_defname);
	env = getenv("srctree");
	if (env) {
		fullname = realloc(fullname, strlen(env) + strlen(name) + 2);
		sprintf(fullname, "%s/%s", env, name);
		if (!stat(fullname, &buf))
			return fullname;
	}
	return name;
}

int conf_read_simple(const char *name)
{
	FILE *in = ((void *)0);
	char line[1024];
	char *p, *p2;
	struct symbol *sym;
	int i;

	if (name) {
		in = zconf_fopen(name);
	} else {
		const char **names = conf_confnames;
		while ((name = *names++)) {
			name = conf_expand_value(name);
			in = zconf_fopen(name);
			if (in) {
				printf(gettext("#\n"
 "# using defaults found in %s\n"
 "#\n"), name);
				break;
			}
		}
	}
	if (!in)
		return 1;

	conf_filename = name;
	conf_lineno = 0;
	conf_warnings = 0;
	conf_unsaved = 0;

	for (i = 0; i < 257; i++) for (sym = symbol_hash[i]; sym; sym = sym->next) if (sym->type != S_OTHER) {
		sym->flags |= 0x0800 | 0x0400;
		if (sym_is_choice(sym))
			sym->flags &= ~0x0800;
		sym->flags &= ~0x0080;
		switch (sym->type) {
		case S_INT:
		case S_HEX:
		case S_STRING:
			if (sym->user.val)
				free(sym->user.val);
		default:
			sym->user.val = ((void *)0);
			sym->user.tri = no;
		}
	}

	while (fgets(line, sizeof(line), in)) {
		conf_lineno++;
		sym = ((void *)0);
		switch (line[0]) {
		case '#':
			if (memcmp(line + 2, "CONFIG_", 7))
				continue;
			p = strchr(line + 9, ' ');
			if (!p)
				continue;
			*p++ = 0;
			if (strncmp(p, "is not set", 10))
				continue;
			sym = sym_find(line + 9);
			if (!sym) {
				conf_warning("trying to assign nonexistent symbol %s", line + 9);
				break;
			} else if (!(sym->flags & 0x0800)) {
				conf_warning("trying to reassign symbol %s", sym->name);
				break;
			}
			switch (sym->type) {
			case S_BOOLEAN:
			case S_TRISTATE:
				sym->user.tri = no;
				sym->flags &= ~0x0800;
				break;
			default:
				;
			}
			break;
		case 'C':
			if (memcmp(line, "CONFIG_", 7)) {
				conf_warning("unexpected data");
				continue;
			}
			p = strchr(line + 7, '=');
			if (!p)
				continue;
			*p++ = 0;
			p2 = strchr(p, '\n');
			if (p2)
				*p2 = 0;
			sym = sym_find(line + 7);
			if (!sym) {
				conf_warning("trying to assign nonexistent symbol %s", line + 7);
				break;
			} else if (!(sym->flags & 0x0800)) {
				conf_warning("trying to reassign symbol %s", sym->name);
				break;
			}
			switch (sym->type) {
			case S_TRISTATE:
				if (p[0] == 'm') {
					sym->user.tri = mod;
					sym->flags &= ~0x0800;
					break;
				}
			case S_BOOLEAN:
				if (p[0] == 'y') {
					sym->user.tri = yes;
					sym->flags &= ~0x0800;
					break;
				}
				if (p[0] == 'n') {
					sym->user.tri = no;
					sym->flags &= ~0x0800;
					break;
				}
				conf_warning("symbol value '%s' invalid for %s", p, sym->name);
				break;
			case S_STRING:
				if (*p++ != '"')
					break;
				for (p2 = p; (p2 = strpbrk(p2, "\"\\")); p2++) {
					if (*p2 == '"') {
						*p2 = 0;
						break;
					}
					memmove(p2, p2 + 1, strlen(p2));
				}
				if (!p2) {
					conf_warning("invalid string found");
					continue;
				}
			case S_INT:
			case S_HEX:
				if (sym_string_valid(sym, p)) {
					sym->user.val = strdup(p);
					sym->flags &= ~0x0800;
				} else {
					if (p[0]) /* bbox */
						conf_warning("symbol value '%s' invalid for %s", p, sym->name);
					continue;
				}
				break;
			default:
				;
			}
			break;
		case '\n':
			break;
		default:
			conf_warning("unexpected data");
			continue;
		}
		if (sym && sym_is_choice_value(sym)) {
			struct symbol *cs = prop_get_symbol(sym_get_choice_prop(sym));
			switch (sym->user.tri) {
			case no:
				break;
			case mod:
				if (cs->user.tri == yes) {
					conf_warning("%s creates inconsistent choice state", sym->name);
					cs->flags |= 0x0800;
				}
				break;
			case yes:
				if (cs->user.tri != no) {
					conf_warning("%s creates inconsistent choice state", sym->name);
					cs->flags |= 0x0800;
				} else
					cs->user.val = sym;
				break;
			}
			cs->user.tri = (((cs->user.tri)>(sym->user.tri))?(cs->user.tri):(sym->user.tri));
		}
	}
	fclose(in);

	if (modules_sym)
		sym_calc_value(modules_sym);
	return 0;
}

int conf_read(const char *name)
{
	struct symbol *sym;
	struct property *prop;
	struct expr *e;
	int i;

	if (conf_read_simple(name))
		return 1;

	for (i = 0; i < 257; i++) for (sym = symbol_hash[i]; sym; sym = sym->next) if (sym->type != S_OTHER) {
		sym_calc_value(sym);
		if (sym_is_choice(sym) || (sym->flags & 0x1000))
			goto sym_ok;
		if (sym_has_value(sym) && (sym->flags & 0x0200)) {
			/* check that calculated value agrees with saved value */
			switch (sym->type) {
			case S_BOOLEAN:
			case S_TRISTATE:
				if (sym->user.tri != sym_get_tristate_value(sym))
					break;
				if (!sym_is_choice(sym))
					goto sym_ok;
			default:
				if (!strcmp(sym->curr.val, sym->user.val))
					goto sym_ok;
				break;
			}
		} else if (!sym_has_value(sym) && !(sym->flags & 0x0200))
			/* no previous value and not saved */
			goto sym_ok;
		conf_unsaved++;
		/* maybe print value in verbose mode... */
	sym_ok:
		if (sym_has_value(sym) && !sym_is_choice_value(sym)) {
			if (sym->visible == no)
				sym->flags |= 0x0800;
			switch (sym->type) {
			case S_STRING:
			case S_INT:
			case S_HEX:
				if (!sym_string_within_range(sym, sym->user.val)) {
					sym->flags |= 0x0800;
					sym->flags &= ~0x0080;
				}
			default:
				break;
			}
		}
		if (!sym_is_choice(sym))
			continue;
		prop = sym_get_choice_prop(sym);
		for (e = prop->expr; e; e = e->left.expr)
			if (e->right.sym->visible != no)
				sym->flags |= e->right.sym->flags & 0x0800;
	}

	sym_change_count = conf_warnings || conf_unsaved;

	return 0;
}

int conf_write(const char *name)
{
	FILE *out, *out_h;
	struct symbol *sym;
	struct menu *menu;
	const char *basename;
	char dirname[128], tmpname[128], newname[128];
	int type, l;
	const char *str;
	time_t now;
	int use_timestamp = 1;
	char *env;

	dirname[0] = 0;
	if (name && name[0]) {
		struct stat st;
		char *slash;

		if (!stat(name, &st) && ((((st.st_mode)) & 0170000) == (0040000))) {
			strcpy(dirname, name);
			strcat(dirname, "/");
			basename = conf_def_filename;
		} else if ((slash = strrchr(name, '/'))) {
			int size = slash - name + 1;
			memcpy(dirname, name, size);
			dirname[size] = 0;
			if (slash[1])
				basename = slash + 1;
			else
				basename = conf_def_filename;
		} else
			basename = name;
	} else
		basename = conf_def_filename;

	sprintf(newname, "%s.tmpconfig.%d", dirname, (int)getpid());
	out = fopen(newname, "w");
	if (!out)
		return 1;
	out_h = ((void *)0);
	if (!name) {
		out_h = fopen(".tmpconfig.h", "w");
		if (!out_h)
			return 1;
		file_write_dep(((void *)0));
	}
	sym = sym_lookup("KERNELVERSION", 0);
	sym_calc_value(sym);
	time(&now);
	env = getenv("KCONFIG_NOTIMESTAMP");
	if (env && *env)
		use_timestamp = 0;

	fprintf(out, gettext("#\n"
 "# Automatically generated make config: don't edit\n"
 "# Busybox version: %s\n"
 "%s%s"
 "#\n"),
		     sym_get_string_value(sym),
		     use_timestamp ? "# " : "",
		     use_timestamp ? ctime(&now) : "");
	if (out_h) {
		char buf[sizeof("#define AUTOCONF_TIMESTAMP "
				"\"YYYY-MM-DD HH:MM:SS some_timezone\"\n")];
		buf[0] = '\0';
		if (use_timestamp) {
			size_t ret = 				strftime(buf, sizeof(buf), "#define AUTOCONF_TIMESTAMP "

					"\"%Y-%m-%d %H:%M:%S %Z\"\n", localtime(&now));
			/* if user has Factory timezone or some other odd install, the
			 * %Z above will overflow the string leaving us with undefined
			 * results ... so let's try again without the timezone.
			 */
			if (ret == 0)
				strftime(buf, sizeof(buf), "#define AUTOCONF_TIMESTAMP "
					"\"%Y-%m-%d %H:%M:%S\"\n", localtime(&now));
		} else { /* bbox */
			strcpy(buf, "#define AUTOCONF_TIMESTAMP \"\"\n");
		}
		fprintf(out_h, "/*\n"
			       " * Automatically generated C config: don't edit\n"
			       " * Busybox version: %s\n"
			       " */\n"
			       "%s"
			       "\n",
			       sym_get_string_value(sym),
			       buf);
	}
	if (!sym_change_count)
		sym_clear_all_valid();

	menu = rootmenu.list;
	while (menu) {
		sym = menu->sym;
		if (!sym) {
			if (!menu_is_visible(menu))
				goto next;
			str = menu_get_prompt(menu);
			fprintf(out, "\n"
				     "#\n"
				     "# %s\n"
				     "#\n", str);
			if (out_h)
				fprintf(out_h, "\n"
					       "/*\n"
					       " * %s\n"
					       " */\n", str);
		} else if (!(sym->flags & 0x0010)) {
			sym_calc_value(sym);
/* bbox: we want to see all syms
			if (!(sym->flags & SYMBOL_WRITE))
				goto next;
*/
			sym->flags &= ~0x0200;
			type = sym->type;
			if (type == S_TRISTATE) {
				sym_calc_value(modules_sym);
				if (modules_sym->curr.tri == no)
					type = S_BOOLEAN;
			}
			switch (type) {
			case S_BOOLEAN:
			case S_TRISTATE:
				switch (sym_get_tristate_value(sym)) {
				case no:
					fprintf(out, "# CONFIG_%s is not set\n", sym->name);
					if (out_h) {
						fprintf(out_h, "#undef CONFIG_%s\n", sym->name);
						/* bbox */
						fprintf(out_h, "#define ENABLE_%s 0\n", sym->name);
						fprintf(out_h, "#define IF_%s(...)\n", sym->name);
						fprintf(out_h, "#define IF_NOT_%s(...) __VA_ARGS__\n", sym->name);
					}
					break;
				case mod:
					fprintf(out, "CONFIG_%s=m\n", sym->name);
					if (out_h)
						fprintf(out_h, "#define CONFIG_%s_MODULE 1\n", sym->name);
					break;
				case yes:
					fprintf(out, "CONFIG_%s=y\n", sym->name);
					if (out_h) {
						fprintf(out_h, "#define CONFIG_%s 1\n", sym->name);
						/* bbox */
						fprintf(out_h, "#define ENABLE_%s 1\n", sym->name);
						fprintf(out_h, "#define IF_%s(...) __VA_ARGS__\n", sym->name);
						fprintf(out_h, "#define IF_NOT_%s(...)\n", sym->name);
					}
					break;
				}
				break;
			case S_STRING:
				// fix me
				str = sym_get_string_value(sym);
				fprintf(out, "CONFIG_%s=\"", sym->name);
				if (out_h)
					fprintf(out_h, "#define CONFIG_%s \"", sym->name);
				do {
					l = strcspn(str, "\"\\");
					if (l) {
						fwrite(str, l, 1, out);
						if (out_h)
							fwrite(str, l, 1, out_h);
					}
					str += l;
					while (*str == '\\' || *str == '"') {
						fprintf(out, "\\%c", *str);
						if (out_h)
							fprintf(out_h, "\\%c", *str);
						str++;
					}
				} while (*str);
				fputs("\"\n", out);
				if (out_h) {
					fputs("\"\n", out_h);
					/* bbox */
					fprintf(out_h, "#define ENABLE_%s 1\n", sym->name);
					fprintf(out_h, "#define IF_%s(...) __VA_ARGS__\n", sym->name);
					fprintf(out_h, "#define IF_NOT_%s(...)\n", sym->name);
				}
				break;
			case S_HEX:
				str = sym_get_string_value(sym);
				if (str[0] != '0' || (str[1] != 'x' && str[1] != 'X')) {
					fprintf(out, "CONFIG_%s=%s\n", sym->name, str);
					if (out_h) {
						fprintf(out_h, "#define CONFIG_%s 0x%s\n", sym->name, str);
						/* bbox */
						fprintf(out_h, "#define ENABLE_%s 1\n", sym->name);
						fprintf(out_h, "#define IF_%s(...) __VA_ARGS__\n", sym->name);
						fprintf(out_h, "#define IF_NOT_%s(...)\n", sym->name);
					}
					break;
				}
			case S_INT:
				str = sym_get_string_value(sym);
				if (!str[0])
					str = "0";
				fprintf(out, "CONFIG_%s=%s\n", sym->name, str);
				if (out_h) {
					fprintf(out_h, "#define CONFIG_%s %s\n", sym->name, str);
					/* bbox */
					fprintf(out_h, "#define ENABLE_%s 1\n", sym->name);
					fprintf(out_h, "#define IF_%s(...) __VA_ARGS__\n", sym->name);
					fprintf(out_h, "#define IF_NOT_%s(...)\n", sym->name);
				}
				break;
			}
		}

	next:
		if (menu->list) {
			menu = menu->list;
			continue;
		}
		if (menu->next)
			menu = menu->next;
		else while ((menu = menu->parent)) {
			if (menu->next) {
				menu = menu->next;
				break;
			}
		}
	}
	fclose(out);
	if (out_h) {
		fclose(out_h);
		rename(".tmpconfig.h", "include/autoconf.h");
	}
	if (!name || basename != conf_def_filename) {
		if (!name)
			name = conf_def_filename;
		sprintf(tmpname, "%s.old", name);
		rename(name, tmpname);
	}
	sprintf(tmpname, "%s%s", dirname, basename);
	if (rename(newname, tmpname))
		return 1;

	sym_change_count = 0;

	return 0;
}
#line 2174 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.c" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 8 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 9 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 10 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.c" 2


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */








 








 


















	
	
	
	








































	
	


















	





	




	




	




	




	




	






#line 13 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/expr.c" 2



struct expr *expr_alloc_symbol(struct symbol *sym)
{
	struct expr *e = malloc(sizeof(*e));
	memset(e, 0, sizeof(*e));
	e->type = E_SYMBOL;
	e->left.sym = sym;
	return e;
}

struct expr *expr_alloc_one(enum expr_type type, struct expr *ce)
{
	struct expr *e = malloc(sizeof(*e));
	memset(e, 0, sizeof(*e));
	e->type = type;
	e->left.expr = ce;
	return e;
}

struct expr *expr_alloc_two(enum expr_type type, struct expr *e1, struct expr *e2)
{
	struct expr *e = malloc(sizeof(*e));
	memset(e, 0, sizeof(*e));
	e->type = type;
	e->left.expr = e1;
	e->right.expr = e2;
	return e;
}

struct expr *expr_alloc_comp(enum expr_type type, struct symbol *s1, struct symbol *s2)
{
	struct expr *e = malloc(sizeof(*e));
	memset(e, 0, sizeof(*e));
	e->type = type;
	e->left.sym = s1;
	e->right.sym = s2;
	return e;
}

struct expr *expr_alloc_and(struct expr *e1, struct expr *e2)
{
	if (!e1)
		return e2;
	return e2 ? expr_alloc_two(E_AND, e1, e2) : e1;
}

struct expr *expr_alloc_or(struct expr *e1, struct expr *e2)
{
	if (!e1)
		return e2;
	return e2 ? expr_alloc_two(E_OR, e1, e2) : e1;
}

struct expr *expr_copy(struct expr *org)
{
	struct expr *e;

	if (!org)
		return ((void *)0);

	e = malloc(sizeof(*org));
	memcpy(e, org, sizeof(*org));
	switch (org->type) {
	case E_SYMBOL:
		e->left = org->left;
		break;
	case E_NOT:
		e->left.expr = expr_copy(org->left.expr);
		break;
	case E_EQUAL:
	case E_UNEQUAL:
		e->left.sym = org->left.sym;
		e->right.sym = org->right.sym;
		break;
	case E_AND:
	case E_OR:
	case E_CHOICE:
		e->left.expr = expr_copy(org->left.expr);
		e->right.expr = expr_copy(org->right.expr);
		break;
	default:
		printf("can't copy type %d\n", e->type);
		free(e);
		e = ((void *)0);
		break;
	}

	return e;
}

void expr_free(struct expr *e)
{
	if (!e)
		return;

	switch (e->type) {
	case E_SYMBOL:
		break;
	case E_NOT:
		expr_free(e->left.expr);
		return;
	case E_EQUAL:
	case E_UNEQUAL:
		break;
	case E_OR:
	case E_AND:
		expr_free(e->left.expr);
		expr_free(e->right.expr);
		break;
	default:
		printf("how to free type %d?\n", e->type);
		break;
	}
	free(e);
}

static int trans_count;




static void __expr_eliminate_eq(enum expr_type type, struct expr **ep1, struct expr **ep2)
{
	if ((*ep1)->type == type) {
		__expr_eliminate_eq(type, &(*ep1)->left.expr, &(*ep2));
		__expr_eliminate_eq(type, &(*ep1)->right.expr, &(*ep2));
		return;
	}
	if ((*ep2)->type == type) {
		__expr_eliminate_eq(type, &(*ep1), &(*ep2)->left.expr);
		__expr_eliminate_eq(type, &(*ep1), &(*ep2)->right.expr);
		return;
	}
	if ((*ep1)->type == E_SYMBOL && (*ep2)->type == E_SYMBOL &&
	    (*ep1)->left.sym == (*ep2)->left.sym && ((*ep1)->left.sym->flags & (0x0001|0x0004)))
		return;
	if (!expr_eq((*ep1), (*ep2)))
		return;
	trans_count++;
	expr_free((*ep1)); expr_free((*ep2));
	switch (type) {
	case E_OR:
		(*ep1) = expr_alloc_symbol(&symbol_no);
		(*ep2) = expr_alloc_symbol(&symbol_no);
		break;
	case E_AND:
		(*ep1) = expr_alloc_symbol(&symbol_yes);
		(*ep2) = expr_alloc_symbol(&symbol_yes);
		break;
	default:
		;
	}
}

void expr_eliminate_eq(struct expr **ep1, struct expr **ep2)
{
	if (!(*ep1) || !(*ep2))
		return;
	switch ((*ep1)->type) {
	case E_OR:
	case E_AND:
		__expr_eliminate_eq((*ep1)->type, ep1, ep2);
	default:
		;
	}
	if ((*ep1)->type != (*ep2)->type) switch ((*ep2)->type) {
	case E_OR:
	case E_AND:
		__expr_eliminate_eq((*ep2)->type, ep1, ep2);
	default:
		;
	}
	(*ep1) = expr_eliminate_yn((*ep1));
	(*ep2) = expr_eliminate_yn((*ep2));
}




int expr_eq(struct expr *e1, struct expr *e2)
{
	int res, old_count;

	if (e1->type != e2->type)
		return 0;
	switch (e1->type) {
	case E_EQUAL:
	case E_UNEQUAL:
		return e1->left.sym == e2->left.sym && e1->right.sym == e2->right.sym;
	case E_SYMBOL:
		return e1->left.sym == e2->left.sym;
	case E_NOT:
		return expr_eq(e1->left.expr, e2->left.expr);
	case E_AND:
	case E_OR:
		e1 = expr_copy(e1);
		e2 = expr_copy(e2);
		old_count = trans_count;
		expr_eliminate_eq(&e1, &e2);
		res = (e1->type == E_SYMBOL && e2->type == E_SYMBOL &&
		       e1->left.sym == e2->left.sym);
		expr_free(e1);
		expr_free(e2);
		trans_count = old_count;
		return res;
	case E_CHOICE:
	case E_RANGE:
	case E_NONE:
		/* panic */;
	}

	if (0) {
		expr_fprint(e1, stdout);
		printf(" = ");
		expr_fprint(e2, stdout);
		printf(" ?\n");
	}

	return 0;
}

struct expr *expr_eliminate_yn(struct expr *e)
{
	struct expr *tmp;

	if (e) switch (e->type) {
	case E_AND:
		e->left.expr = expr_eliminate_yn(e->left.expr);
		e->right.expr = expr_eliminate_yn(e->right.expr);
		if (e->left.expr->type == E_SYMBOL) {
			if (e->left.expr->left.sym == &symbol_no) {
				expr_free(e->left.expr);
				expr_free(e->right.expr);
				e->type = E_SYMBOL;
				e->left.sym = &symbol_no;
				e->right.expr = ((void *)0);
				return e;
			} else if (e->left.expr->left.sym == &symbol_yes) {
				free(e->left.expr);
				tmp = e->right.expr;
				*e = *(e->right.expr);
				free(tmp);
				return e;
			}
		}
		if (e->right.expr->type == E_SYMBOL) {
			if (e->right.expr->left.sym == &symbol_no) {
				expr_free(e->left.expr);
				expr_free(e->right.expr);
				e->type = E_SYMBOL;
				e->left.sym = &symbol_no;
				e->right.expr = ((void *)0);
				return e;
			} else if (e->right.expr->left.sym == &symbol_yes) {
				free(e->right.expr);
				tmp = e->left.expr;
				*e = *(e->left.expr);
				free(tmp);
				return e;
			}
		}
		break;
	case E_OR:
		e->left.expr = expr_eliminate_yn(e->left.expr);
		e->right.expr = expr_eliminate_yn(e->right.expr);
		if (e->left.expr->type == E_SYMBOL) {
			if (e->left.expr->left.sym == &symbol_no) {
				free(e->left.expr);
				tmp = e->right.expr;
				*e = *(e->right.expr);
				free(tmp);
				return e;
			} else if (e->left.expr->left.sym == &symbol_yes) {
				expr_free(e->left.expr);
				expr_free(e->right.expr);
				e->type = E_SYMBOL;
				e->left.sym = &symbol_yes;
				e->right.expr = ((void *)0);
				return e;
			}
		}
		if (e->right.expr->type == E_SYMBOL) {
			if (e->right.expr->left.sym == &symbol_no) {
				free(e->right.expr);
				tmp = e->left.expr;
				*e = *(e->left.expr);
				free(tmp);
				return e;
			} else if (e->right.expr->left.sym == &symbol_yes) {
				expr_free(e->left.expr);
				expr_free(e->right.expr);
				e->type = E_SYMBOL;
				e->left.sym = &symbol_yes;
				e->right.expr = ((void *)0);
				return e;
			}
		}
		break;
	default:
		;
	}
	return e;
}

/*
 * bool FOO!=n => FOO
 */
struct expr *expr_trans_bool(struct expr *e)
{
	if (!e)
		return ((void *)0);
	switch (e->type) {
	case E_AND:
	case E_OR:
	case E_NOT:
		e->left.expr = expr_trans_bool(e->left.expr);
		e->right.expr = expr_trans_bool(e->right.expr);
		break;
	case E_UNEQUAL:
		// FOO!=n -> FOO
		if (e->left.sym->type == S_TRISTATE) {
			if (e->right.sym == &symbol_no) {
				e->type = E_SYMBOL;
				e->right.sym = ((void *)0);
			}
		}
		break;
	default:
		;
	}
	return e;
}

/*
 * e1 || e2 -> ?
 */
struct expr *expr_join_or(struct expr *e1, struct expr *e2)
{
	struct expr *tmp;
	struct symbol *sym1, *sym2;

	if (expr_eq(e1, e2))
		return expr_copy(e1);
	if (e1->type != E_EQUAL && e1->type != E_UNEQUAL && e1->type != E_SYMBOL && e1->type != E_NOT)
		return ((void *)0);
	if (e2->type != E_EQUAL && e2->type != E_UNEQUAL && e2->type != E_SYMBOL && e2->type != E_NOT)
		return ((void *)0);
	if (e1->type == E_NOT) {
		tmp = e1->left.expr;
		if (tmp->type != E_EQUAL && tmp->type != E_UNEQUAL && tmp->type != E_SYMBOL)
			return ((void *)0);
		sym1 = tmp->left.sym;
	} else
		sym1 = e1->left.sym;
	if (e2->type == E_NOT) {
		if (e2->left.expr->type != E_SYMBOL)
			return ((void *)0);
		sym2 = e2->left.expr->left.sym;
	} else
		sym2 = e2->left.sym;
	if (sym1 != sym2)
		return ((void *)0);
	if (sym1->type != S_BOOLEAN && sym1->type != S_TRISTATE)
		return ((void *)0);
	if (sym1->type == S_TRISTATE) {
		if (e1->type == E_EQUAL && e2->type == E_EQUAL &&
		    ((e1->right.sym == &symbol_yes && e2->right.sym == &symbol_mod) ||
		     (e1->right.sym == &symbol_mod && e2->right.sym == &symbol_yes))) {
			// (a='y') || (a='m') -> (a!='n')
			return expr_alloc_comp(E_UNEQUAL, sym1, &symbol_no);
		}
		if (e1->type == E_EQUAL && e2->type == E_EQUAL &&
		    ((e1->right.sym == &symbol_yes && e2->right.sym == &symbol_no) ||
		     (e1->right.sym == &symbol_no && e2->right.sym == &symbol_yes))) {
			// (a='y') || (a='n') -> (a!='m')
			return expr_alloc_comp(E_UNEQUAL, sym1, &symbol_mod);
		}
		if (e1->type == E_EQUAL && e2->type == E_EQUAL &&
		    ((e1->right.sym == &symbol_mod && e2->right.sym == &symbol_no) ||
		     (e1->right.sym == &symbol_no && e2->right.sym == &symbol_mod))) {
			// (a='m') || (a='n') -> (a!='y')
			return expr_alloc_comp(E_UNEQUAL, sym1, &symbol_yes);
		}
	}
	if (sym1->type == S_BOOLEAN && sym1 == sym2) {
		if ((e1->type == E_NOT && e1->left.expr->type == E_SYMBOL && e2->type == E_SYMBOL) ||
		    (e2->type == E_NOT && e2->left.expr->type == E_SYMBOL && e1->type == E_SYMBOL))
			return expr_alloc_symbol(&symbol_yes);
	}

	if (0) {
		printf("optimize (");
		expr_fprint(e1, stdout);
		printf(") || (");
		expr_fprint(e2, stdout);
		printf(")?\n");
	}
	return ((void *)0);
}

struct expr *expr_join_and(struct expr *e1, struct expr *e2)
{
	struct expr *tmp;
	struct symbol *sym1, *sym2;

	if (expr_eq(e1, e2))
		return expr_copy(e1);
	if (e1->type != E_EQUAL && e1->type != E_UNEQUAL && e1->type != E_SYMBOL && e1->type != E_NOT)
		return ((void *)0);
	if (e2->type != E_EQUAL && e2->type != E_UNEQUAL && e2->type != E_SYMBOL && e2->type != E_NOT)
		return ((void *)0);
	if (e1->type == E_NOT) {
		tmp = e1->left.expr;
		if (tmp->type != E_EQUAL && tmp->type != E_UNEQUAL && tmp->type != E_SYMBOL)
			return ((void *)0);
		sym1 = tmp->left.sym;
	} else
		sym1 = e1->left.sym;
	if (e2->type == E_NOT) {
		if (e2->left.expr->type != E_SYMBOL)
			return ((void *)0);
		sym2 = e2->left.expr->left.sym;
	} else
		sym2 = e2->left.sym;
	if (sym1 != sym2)
		return ((void *)0);
	if (sym1->type != S_BOOLEAN && sym1->type != S_TRISTATE)
		return ((void *)0);

	if ((e1->type == E_SYMBOL && e2->type == E_EQUAL && e2->right.sym == &symbol_yes) ||
	    (e2->type == E_SYMBOL && e1->type == E_EQUAL && e1->right.sym == &symbol_yes))
		// (a) && (a='y') -> (a='y')
		return expr_alloc_comp(E_EQUAL, sym1, &symbol_yes);

	if ((e1->type == E_SYMBOL && e2->type == E_UNEQUAL && e2->right.sym == &symbol_no) ||
	    (e2->type == E_SYMBOL && e1->type == E_UNEQUAL && e1->right.sym == &symbol_no))
		// (a) && (a!='n') -> (a)
		return expr_alloc_symbol(sym1);

	if ((e1->type == E_SYMBOL && e2->type == E_UNEQUAL && e2->right.sym == &symbol_mod) ||
	    (e2->type == E_SYMBOL && e1->type == E_UNEQUAL && e1->right.sym == &symbol_mod))
		// (a) && (a!='m') -> (a='y')
		return expr_alloc_comp(E_EQUAL, sym1, &symbol_yes);

	if (sym1->type == S_TRISTATE) {
		if (e1->type == E_EQUAL && e2->type == E_UNEQUAL) {
			// (a='b') && (a!='c') -> 'b'='c' ? 'n' : a='b'
			sym2 = e1->right.sym;
			if ((e2->right.sym->flags & 0x0007) && (sym2->flags & 0x0007))
				return sym2 != e2->right.sym ? expr_alloc_comp(E_EQUAL, sym1, sym2)
							     : expr_alloc_symbol(&symbol_no);
		}
		if (e1->type == E_UNEQUAL && e2->type == E_EQUAL) {
			// (a='b') && (a!='c') -> 'b'='c' ? 'n' : a='b'
			sym2 = e2->right.sym;
			if ((e1->right.sym->flags & 0x0007) && (sym2->flags & 0x0007))
				return sym2 != e1->right.sym ? expr_alloc_comp(E_EQUAL, sym1, sym2)
							     : expr_alloc_symbol(&symbol_no);
		}
		if (e1->type == E_UNEQUAL && e2->type == E_UNEQUAL &&
			   ((e1->right.sym == &symbol_yes && e2->right.sym == &symbol_no) ||
			    (e1->right.sym == &symbol_no && e2->right.sym == &symbol_yes)))
			// (a!='y') && (a!='n') -> (a='m')
			return expr_alloc_comp(E_EQUAL, sym1, &symbol_mod);

		if (e1->type == E_UNEQUAL && e2->type == E_UNEQUAL &&
			   ((e1->right.sym == &symbol_yes && e2->right.sym == &symbol_mod) ||
			    (e1->right.sym == &symbol_mod && e2->right.sym == &symbol_yes)))
			// (a!='y') && (a!='m') -> (a='n')
			return expr_alloc_comp(E_EQUAL, sym1, &symbol_no);

		if (e1->type == E_UNEQUAL && e2->type == E_UNEQUAL &&
			   ((e1->right.sym == &symbol_mod && e2->right.sym == &symbol_no) ||
			    (e1->right.sym == &symbol_no && e2->right.sym == &symbol_mod)))
			// (a!='m') && (a!='n') -> (a='m')
			return expr_alloc_comp(E_EQUAL, sym1, &symbol_yes);

		if ((e1->type == E_SYMBOL && e2->type == E_EQUAL && e2->right.sym == &symbol_mod) ||
		    (e2->type == E_SYMBOL && e1->type == E_EQUAL && e1->right.sym == &symbol_mod) ||
		    (e1->type == E_SYMBOL && e2->type == E_UNEQUAL && e2->right.sym == &symbol_yes) ||
		    (e2->type == E_SYMBOL && e1->type == E_UNEQUAL && e1->right.sym == &symbol_yes))
			return ((void *)0);
	}

	if (0) {
		printf("optimize (");
		expr_fprint(e1, stdout);
		printf(") && (");
		expr_fprint(e2, stdout);
		printf(")?\n");
	}
	return ((void *)0);
}

static void expr_eliminate_dups1(enum expr_type type, struct expr **ep1, struct expr **ep2)
{


	struct expr *tmp;

	if ((*ep1)->type == type) {
		expr_eliminate_dups1(type, &(*ep1)->left.expr, &(*ep2));
		expr_eliminate_dups1(type, &(*ep1)->right.expr, &(*ep2));
		return;
	}
	if ((*ep2)->type == type) {
		expr_eliminate_dups1(type, &(*ep1), &(*ep2)->left.expr);
		expr_eliminate_dups1(type, &(*ep1), &(*ep2)->right.expr);
		return;
	}
	if ((*ep1) == (*ep2))
		return;

	switch ((*ep1)->type) {
	case E_OR: case E_AND:
		expr_eliminate_dups1((*ep1)->type, &(*ep1), &(*ep1));
	default:
		;
	}

	switch (type) {
	case E_OR:
		tmp = expr_join_or((*ep1), (*ep2));
		if (tmp) {
			expr_free((*ep1)); expr_free((*ep2));
			(*ep1) = expr_alloc_symbol(&symbol_no);
			(*ep2) = tmp;
			trans_count++;
		}
		break;
	case E_AND:
		tmp = expr_join_and((*ep1), (*ep2));
		if (tmp) {
			expr_free((*ep1)); expr_free((*ep2));
			(*ep1) = expr_alloc_symbol(&symbol_yes);
			(*ep2) = tmp;
			trans_count++;
		}
		break;
	default:
		;
	}


}

static void expr_eliminate_dups2(enum expr_type type, struct expr **ep1, struct expr **ep2)
{


	struct expr *tmp, *tmp1, *tmp2;

	if ((*ep1)->type == type) {
		expr_eliminate_dups2(type, &(*ep1)->left.expr, &(*ep2));
		expr_eliminate_dups2(type, &(*ep1)->right.expr, &(*ep2));
		return;
	}
	if ((*ep2)->type == type) {
		expr_eliminate_dups2(type, &(*ep1), &(*ep2)->left.expr);
		expr_eliminate_dups2(type, &(*ep1), &(*ep2)->right.expr);
	}
	if ((*ep1) == (*ep2))
		return;

	switch ((*ep1)->type) {
	case E_OR:
		expr_eliminate_dups2((*ep1)->type, &(*ep1), &(*ep1));
		// (FOO || BAR) && (!FOO && !BAR) -> n
		tmp1 = expr_transform(expr_alloc_one(E_NOT, expr_copy((*ep1))));
		tmp2 = expr_copy((*ep2));
		tmp = expr_extract_eq_and(&tmp1, &tmp2);
		if (expr_is_yes(tmp1)) {
			expr_free((*ep1));
			(*ep1) = expr_alloc_symbol(&symbol_no);
			trans_count++;
		}
		expr_free(tmp2);
		expr_free(tmp1);
		expr_free(tmp);
		break;
	case E_AND:
		expr_eliminate_dups2((*ep1)->type, &(*ep1), &(*ep1));
		// (FOO && BAR) || (!FOO || !BAR) -> y
		tmp1 = expr_transform(expr_alloc_one(E_NOT, expr_copy((*ep1))));
		tmp2 = expr_copy((*ep2));
		tmp = expr_extract_eq_or(&tmp1, &tmp2);
		if (expr_is_no(tmp1)) {
			expr_free((*ep1));
			(*ep1) = expr_alloc_symbol(&symbol_yes);
			trans_count++;
		}
		expr_free(tmp2);
		expr_free(tmp1);
		expr_free(tmp);
		break;
	default:
		;
	}


}

struct expr *expr_eliminate_dups(struct expr *e)
{
	int oldcount;
	if (!e)
		return e;

	oldcount = trans_count;
	while (1) {
		trans_count = 0;
		switch (e->type) {
		case E_OR: case E_AND:
			expr_eliminate_dups1(e->type, &e, &e);
			expr_eliminate_dups2(e->type, &e, &e);
		default:
			;
		}
		if (!trans_count)
			break;
		e = expr_eliminate_yn(e);
	}
	trans_count = oldcount;
	return e;
}

struct expr *expr_transform(struct expr *e)
{
	struct expr *tmp;

	if (!e)
		return ((void *)0);
	switch (e->type) {
	case E_EQUAL:
	case E_UNEQUAL:
	case E_SYMBOL:
	case E_CHOICE:
		break;
	default:
		e->left.expr = expr_transform(e->left.expr);
		e->right.expr = expr_transform(e->right.expr);
	}

	switch (e->type) {
	case E_EQUAL:
		if (e->left.sym->type != S_BOOLEAN)
			break;
		if (e->right.sym == &symbol_no) {
			e->type = E_NOT;
			e->left.expr = expr_alloc_symbol(e->left.sym);
			e->right.sym = ((void *)0);
			break;
		}
		if (e->right.sym == &symbol_mod) {
			printf("boolean symbol %s tested for 'm'? test forced to 'n'\n", e->left.sym->name);
			e->type = E_SYMBOL;
			e->left.sym = &symbol_no;
			e->right.sym = ((void *)0);
			break;
		}
		if (e->right.sym == &symbol_yes) {
			e->type = E_SYMBOL;
			e->right.sym = ((void *)0);
			break;
		}
		break;
	case E_UNEQUAL:
		if (e->left.sym->type != S_BOOLEAN)
			break;
		if (e->right.sym == &symbol_no) {
			e->type = E_SYMBOL;
			e->right.sym = ((void *)0);
			break;
		}
		if (e->right.sym == &symbol_mod) {
			printf("boolean symbol %s tested for 'm'? test forced to 'y'\n", e->left.sym->name);
			e->type = E_SYMBOL;
			e->left.sym = &symbol_yes;
			e->right.sym = ((void *)0);
			break;
		}
		if (e->right.sym == &symbol_yes) {
			e->type = E_NOT;
			e->left.expr = expr_alloc_symbol(e->left.sym);
			e->right.sym = ((void *)0);
			break;
		}
		break;
	case E_NOT:
		switch (e->left.expr->type) {
		case E_NOT:
			// !!a -> a
			tmp = e->left.expr->left.expr;
			free(e->left.expr);
			free(e);
			e = tmp;
			e = expr_transform(e);
			break;
		case E_EQUAL:
		case E_UNEQUAL:
			// !a='x' -> a!='x'
			tmp = e->left.expr;
			free(e);
			e = tmp;
			e->type = e->type == E_EQUAL ? E_UNEQUAL : E_EQUAL;
			break;
		case E_OR:
			// !(a || b) -> !a && !b
			tmp = e->left.expr;
			e->type = E_AND;
			e->right.expr = expr_alloc_one(E_NOT, tmp->right.expr);
			tmp->type = E_NOT;
			tmp->right.expr = ((void *)0);
			e = expr_transform(e);
			break;
		case E_AND:
			// !(a && b) -> !a || !b
			tmp = e->left.expr;
			e->type = E_OR;
			e->right.expr = expr_alloc_one(E_NOT, tmp->right.expr);
			tmp->type = E_NOT;
			tmp->right.expr = ((void *)0);
			e = expr_transform(e);
			break;
		case E_SYMBOL:
			if (e->left.expr->left.sym == &symbol_yes) {
				// !'y' -> 'n'
				tmp = e->left.expr;
				free(e);
				e = tmp;
				e->type = E_SYMBOL;
				e->left.sym = &symbol_no;
				break;
			}
			if (e->left.expr->left.sym == &symbol_mod) {
				// !'m' -> 'm'
				tmp = e->left.expr;
				free(e);
				e = tmp;
				e->type = E_SYMBOL;
				e->left.sym = &symbol_mod;
				break;
			}
			if (e->left.expr->left.sym == &symbol_no) {
				// !'n' -> 'y'
				tmp = e->left.expr;
				free(e);
				e = tmp;
				e->type = E_SYMBOL;
				e->left.sym = &symbol_yes;
				break;
			}
			break;
		default:
			;
		}
		break;
	default:
		;
	}
	return e;
}

int expr_contains_symbol(struct expr *dep, struct symbol *sym)
{
	if (!dep)
		return 0;

	switch (dep->type) {
	case E_AND:
	case E_OR:
		return expr_contains_symbol(dep->left.expr, sym) ||
		       expr_contains_symbol(dep->right.expr, sym);
	case E_SYMBOL:
		return dep->left.sym == sym;
	case E_EQUAL:
	case E_UNEQUAL:
		return dep->left.sym == sym ||
		       dep->right.sym == sym;
	case E_NOT:
		return expr_contains_symbol(dep->left.expr, sym);
	default:
		;
	}
	return 0;
}

_Bool expr_depends_symbol(struct expr *dep, struct symbol *sym)
{
	if (!dep)
		return 0;

	switch (dep->type) {
	case E_AND:
		return expr_depends_symbol(dep->left.expr, sym) ||
		       expr_depends_symbol(dep->right.expr, sym);
	case E_SYMBOL:
		return dep->left.sym == sym;
	case E_EQUAL:
		if (dep->left.sym == sym) {
			if (dep->right.sym == &symbol_yes || dep->right.sym == &symbol_mod)
				return 1;
		}
		break;
	case E_UNEQUAL:
		if (dep->left.sym == sym) {
			if (dep->right.sym == &symbol_no)
				return 1;
		}
		break;
	default:
		;
	}
	return 0;
}

struct expr *expr_extract_eq_and(struct expr **ep1, struct expr **ep2)
{
	struct expr *tmp = ((void *)0);
	expr_extract_eq(E_AND, &tmp, ep1, ep2);
	if (tmp) {
		*ep1 = expr_eliminate_yn(*ep1);
		*ep2 = expr_eliminate_yn(*ep2);
	}
	return tmp;
}

struct expr *expr_extract_eq_or(struct expr **ep1, struct expr **ep2)
{
	struct expr *tmp = ((void *)0);
	expr_extract_eq(E_OR, &tmp, ep1, ep2);
	if (tmp) {
		*ep1 = expr_eliminate_yn(*ep1);
		*ep2 = expr_eliminate_yn(*ep2);
	}
	return tmp;
}

void expr_extract_eq(enum expr_type type, struct expr **ep, struct expr **ep1, struct expr **ep2)
{


	if ((*ep1)->type == type) {
		expr_extract_eq(type, ep, &(*ep1)->left.expr, &(*ep2));
		expr_extract_eq(type, ep, &(*ep1)->right.expr, &(*ep2));
		return;
	}
	if ((*ep2)->type == type) {
		expr_extract_eq(type, ep, ep1, &(*ep2)->left.expr);
		expr_extract_eq(type, ep, ep1, &(*ep2)->right.expr);
		return;
	}
	if (expr_eq((*ep1), (*ep2))) {
		*ep = *ep ? expr_alloc_two(type, *ep, (*ep1)) : (*ep1);
		expr_free((*ep2));
		if (type == E_AND) {
			(*ep1) = expr_alloc_symbol(&symbol_yes);
			(*ep2) = expr_alloc_symbol(&symbol_yes);
		} else if (type == E_OR) {
			(*ep1) = expr_alloc_symbol(&symbol_no);
			(*ep2) = expr_alloc_symbol(&symbol_no);
		}
	}


}

struct expr *expr_trans_compare(struct expr *e, enum expr_type type, struct symbol *sym)
{
	struct expr *e1, *e2;

	if (!e) {
		e = expr_alloc_symbol(sym);
		if (type == E_UNEQUAL)
			e = expr_alloc_one(E_NOT, e);
		return e;
	}
	switch (e->type) {
	case E_AND:
		e1 = expr_trans_compare(e->left.expr, E_EQUAL, sym);
		e2 = expr_trans_compare(e->right.expr, E_EQUAL, sym);
		if (sym == &symbol_yes)
			e = expr_alloc_two(E_AND, e1, e2);
		if (sym == &symbol_no)
			e = expr_alloc_two(E_OR, e1, e2);
		if (type == E_UNEQUAL)
			e = expr_alloc_one(E_NOT, e);
		return e;
	case E_OR:
		e1 = expr_trans_compare(e->left.expr, E_EQUAL, sym);
		e2 = expr_trans_compare(e->right.expr, E_EQUAL, sym);
		if (sym == &symbol_yes)
			e = expr_alloc_two(E_OR, e1, e2);
		if (sym == &symbol_no)
			e = expr_alloc_two(E_AND, e1, e2);
		if (type == E_UNEQUAL)
			e = expr_alloc_one(E_NOT, e);
		return e;
	case E_NOT:
		return expr_trans_compare(e->left.expr, type == E_EQUAL ? E_UNEQUAL : E_EQUAL, sym);
	case E_UNEQUAL:
	case E_EQUAL:
		if (type == E_EQUAL) {
			if (sym == &symbol_yes)
				return expr_copy(e);
			if (sym == &symbol_mod)
				return expr_alloc_symbol(&symbol_no);
			if (sym == &symbol_no)
				return expr_alloc_one(E_NOT, expr_copy(e));
		} else {
			if (sym == &symbol_yes)
				return expr_alloc_one(E_NOT, expr_copy(e));
			if (sym == &symbol_mod)
				return expr_alloc_symbol(&symbol_yes);
			if (sym == &symbol_no)
				return expr_copy(e);
		}
		break;
	case E_SYMBOL:
		return expr_alloc_comp(type, e->left.sym, sym);
	case E_CHOICE:
	case E_RANGE:
	case E_NONE:
		/* panic */;
	}
	return ((void *)0);
}

tristate expr_calc_value(struct expr *e)
{
	tristate val1, val2;
	const char *str1, *str2;

	if (!e)
		return yes;

	switch (e->type) {
	case E_SYMBOL:
		sym_calc_value(e->left.sym);
		return e->left.sym->curr.tri;
	case E_AND:
		val1 = expr_calc_value(e->left.expr);
		val2 = expr_calc_value(e->right.expr);
		return (((val1)<(val2))?(val1):(val2));
	case E_OR:
		val1 = expr_calc_value(e->left.expr);
		val2 = expr_calc_value(e->right.expr);
		return (((val1)>(val2))?(val1):(val2));
	case E_NOT:
		val1 = expr_calc_value(e->left.expr);
		return (2-(val1));
	case E_EQUAL:
		sym_calc_value(e->left.sym);
		sym_calc_value(e->right.sym);
		str1 = sym_get_string_value(e->left.sym);
		str2 = sym_get_string_value(e->right.sym);
		return !strcmp(str1, str2) ? yes : no;
	case E_UNEQUAL:
		sym_calc_value(e->left.sym);
		sym_calc_value(e->right.sym);
		str1 = sym_get_string_value(e->left.sym);
		str2 = sym_get_string_value(e->right.sym);
		return !strcmp(str1, str2) ? no : yes;
	default:
		printf("expr_calc_value: %d?\n", e->type);
		return no;
	}
}

int expr_compare_type(enum expr_type t1, enum expr_type t2)
{

	
 	if (t1 == t2)
		return 0;
	switch (t1) {
	case E_EQUAL:
	case E_UNEQUAL:
		if (t2 == E_NOT)
			return 1;
	case E_NOT:
		if (t2 == E_AND)
			return 1;
	case E_AND:
		if (t2 == E_OR)
			return 1;
	case E_OR:
		if (t2 == E_CHOICE)
			return 1;
	case E_CHOICE:
		if (t2 == 0)
			return 1;
	default:
		return -1;
	}
	printf("[%dgt%d?]", t1, t2);
	return 0;

}

void expr_print(struct expr *e, void (*fn)(void *, const char *), void *data, int prevtoken)
{
	if (!e) {
		fn(data, "y");
		return;
	}

	if (expr_compare_type(prevtoken, e->type) > 0)
		fn(data, "(");
	switch (e->type) {
	case E_SYMBOL:
		if (e->left.sym->name)
			fn(data, e->left.sym->name);
		else
			fn(data, "<choice>");
		break;
	case E_NOT:
		fn(data, "!");
		expr_print(e->left.expr, fn, data, E_NOT);
		break;
	case E_EQUAL:
		fn(data, e->left.sym->name);
		fn(data, "=");
		fn(data, e->right.sym->name);
		break;
	case E_UNEQUAL:
		fn(data, e->left.sym->name);
		fn(data, "!=");
		fn(data, e->right.sym->name);
		break;
	case E_OR:
		expr_print(e->left.expr, fn, data, E_OR);
		fn(data, " || ");
		expr_print(e->right.expr, fn, data, E_OR);
		break;
	case E_AND:
		expr_print(e->left.expr, fn, data, E_AND);
		fn(data, " && ");
		expr_print(e->right.expr, fn, data, E_AND);
		break;
	case E_CHOICE:
		fn(data, e->right.sym->name);
		if (e->left.expr) {
			fn(data, " ^ ");
			expr_print(e->left.expr, fn, data, E_CHOICE);
		}
		break;
	case E_RANGE:
		fn(data, "[");
		fn(data, e->left.sym->name);
		fn(data, " ");
		fn(data, e->right.sym->name);
		fn(data, "]");
		break;
	default:
	  {
		char buf[32];
		sprintf(buf, "<unknown type %d>", e->type);
		fn(data, buf);
		break;
	  }
	}
	if (expr_compare_type(prevtoken, e->type) > 0)
		fn(data, ")");
}

static void expr_print_file_helper(void *data, const char *str)
{
	fwrite(str, strlen(str), 1, data);
}

void expr_fprint(struct expr *e, FILE *out)
{
	expr_print(e, expr_print_file_helper, out, E_NONE);
}

static void expr_print_gstr_helper(void *data, const char *str)
{
	str_append((struct gstr*)data, str);
}

void expr_gstr_print(struct expr *e, struct gstr *gs)
{
	expr_print(e, expr_print_gstr_helper, gs, E_NONE);
}
#line 2175 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/ctype.h" 1
/* Copyright (C) 1991,92,93,95,96,97,98,99,2001,2002,2004,2007,2008,2009
   	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard 7.4: Character handling	<ctype.h>
 */





















 



  
  
  
  
  
  
  
  
  
  
  
  



















     

     

     





































































































  





  



















































































































#line 8 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 9 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 10 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/regex.h" 1
/* Definitions for data structures and routines for the regular
   expression library.
   Copyright (C) 1985,1989-93,1995-98,2000,2001,2002,2003,2005,2006,2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/regex.h" 2

/* Allow the use in C++ code.  */



/* The following two types have to be signed and unsigned integer type
   wide enough to hold a value of a pointer.  For most ANSI compilers
   ptrdiff_t and size_t should be likely OK.  Still size of these two
   types is 2 for Microsoft C.  Ugh... */
typedef long int s_reg_t;
typedef unsigned long int active_reg_t;

/* The following bits are used to determine the regexp syntax we
   recognize.  The set/not-set meanings are chosen so that Emacs syntax
   remains the value 0.  The bits are given in alphabetical order, and
   the definitions shifted by one from the previous bit; thus, when we
   add or remove a bit, only one other definition need change.  */
typedef unsigned long int reg_syntax_t;





































































































































/* This global variable defines the particular regexp syntax to use (for
   some interfaces).  When a regexp is compiled, the syntax used is
   stored in the pattern buffer, so changing this does not affect
   already-compiled regexps.  */
extern reg_syntax_t re_syntax_options;


















































































/* POSIX `cflags' bits (i.e., information for `regcomp').  */

/* If this bit is set, then use extended regular expression syntax.
   If not set, then use basic regular expression syntax.  */


/* If this bit is set, then ignore case when matching.
   If not set, then case is significant.  */


/* If this bit is set, then anchors do not match at newline
     characters in the string.
   If not set, then anchors do match at newlines.  */


/* If this bit is set, then report only success or fail in regexec.
   If not set, then returns differ between not matching and errors.  */



/* POSIX `eflags' bits (i.e., information for regexec).  */

/* If this bit is set, then the beginning-of-line operator doesn't match
     the beginning of the string (presumably because it's not the
     beginning of a line).
   If not set, then the beginning-of-line operator does match the
     beginning of the string.  */


/* Like REG_NOTBOL, except for the end-of-line.  */


/* Use PMATCH[0] to delimit the start and end of the search in the
   buffer.  */



/* If any error codes are removed, changed, or added, update the
   `re_error_msg' table in regex.c.  */
typedef enum
{

  REG_ENOSYS = -1,	/* This will never happen for this implementation.  */

  REG_NOERROR = 0,	/* Success.  */
  REG_NOMATCH,		/* Didn't find a match (for regexec).  */

  /* POSIX regcomp return error codes.  (In the order listed in the
     standard.)  */
  REG_BADPAT,		/* Invalid pattern.  */
  REG_ECOLLATE,		/* Inalid collating element.  */
  REG_ECTYPE,		/* Invalid character class name.  */
  REG_EESCAPE,		/* Trailing backslash.  */
  REG_ESUBREG,		/* Invalid back reference.  */
  REG_EBRACK,		/* Unmatched left bracket.  */
  REG_EPAREN,		/* Parenthesis imbalance.  */
  REG_EBRACE,		/* Unmatched \{.  */
  REG_BADBR,		/* Invalid contents of \{\}.  */
  REG_ERANGE,		/* Invalid range end.  */
  REG_ESPACE,		/* Ran out of memory.  */
  REG_BADRPT,		/* No preceding re for repetition op.  */

  /* Error codes we've added.  */
  REG_EEND,		/* Premature end.  */
  REG_ESIZE,		/* Compiled pattern bigger than 2^16 bytes.  */
  REG_ERPAREN		/* Unmatched ) or \); not returned from regcomp.  */
} reg_errcode_t;

/* This data structure represents a compiled pattern.  Before calling
   the pattern compiler, the fields `buffer', `allocated', `fastmap',
   `translate', and `no_sub' can be set.  After the pattern has been
   compiled, the `re_nsub' field is available.  All other fields are
   private to the regex routines.  */









 

struct re_pattern_buffer
{
  /* Space that holds the compiled pattern.  It is declared as
     `unsigned char *' because its elements are sometimes used as
     array indexes.  */
  unsigned char *__buffer;

  /* Number of bytes to which `buffer' points.  */
  unsigned long int __allocated;

  /* Number of bytes actually used in `buffer'.  */
  unsigned long int __used;

  /* Syntax setting with which the pattern was compiled.  */
  reg_syntax_t __syntax;

  /* Pointer to a fastmap, if any, otherwise zero.  re_search uses the
     fastmap, if there is one, to skip over impossible starting points
     for matches.  */
  char *__fastmap;

  /* Either a translate table to apply to all characters before
     comparing them, or zero for no translation.  The translation is
     applied to a pattern when it is compiled and to a string when it
     is matched.  */
  unsigned char * __translate;

  /* Number of subexpressions found by the compiler.  */
  size_t re_nsub;

  /* Zero if this pattern cannot match the empty string, one else.
     Well, in truth it's used only in `re_search_2', to see whether or
     not we should use the fastmap, so we don't set this absolutely
     perfectly; see `re_compile_fastmap' (the `duplicate' case).  */
  unsigned __can_be_null : 1;

  /* If REGS_UNALLOCATED, allocate space in the `regs' structure
     for `max (RE_NREGS, re_nsub + 1)' groups.
     If REGS_REALLOCATE, reallocate space if necessary.
     If REGS_FIXED, use what's there.  */





  unsigned __regs_allocated : 2;

  /* Set to zero when `regex_compile' compiles a pattern; set to one
     by `re_compile_fastmap' if it updates the fastmap.  */
  unsigned __fastmap_accurate : 1;

  /* If set, `re_match_2' does not return information about
     subexpressions.  */
  unsigned __no_sub : 1;

  /* If set, a beginning-of-line anchor doesn't match at the beginning
     of the string.  */
  unsigned __not_bol : 1;

  /* Similarly for an end-of-line anchor.  */
  unsigned __not_eol : 1;

  /* If true, an anchor at a newline matches.  */
  unsigned __newline_anchor : 1;
};

typedef struct re_pattern_buffer regex_t;

/* Type for byte offsets within the string.  POSIX mandates this.  */
typedef int regoff_t;







  
  
  










/* POSIX specification for registers.  Aside from the different names than
   `re_registers', POSIX uses an array of structures, instead of a
   structure of arrays.  */
typedef struct
{
  regoff_t rm_so;  /* Byte offset from string's start to substring's start.  */
  regoff_t rm_eo;  /* Byte offset from string's start to substring's end.  */
} regmatch_t;

/* Declarations for routines.  */










				       














		      
		      





			
			
			





		     




		       
		       
		       















			      
			      
			      








/* GCC 2.95 and later have "__restrict"; C99 compilers have
   "restrict", and "configure" may have defined "restrict".  */




 



/* gcc 3.1 and up support the [restrict] syntax.  */



 


/* POSIX compatibility.  */
extern int regcomp (regex_t *__restrict __preg,
		    const char *__restrict __pattern,
		    int __cflags);

extern int regexec (const regex_t *__restrict __preg,
		    const char *__restrict __string, size_t __nmatch,
		    regmatch_t __pmatch[__restrict],
		    int __eflags);

extern size_t regerror (int __errcode, const regex_t *__restrict __preg,
			char *__restrict __errbuf, size_t __errbuf_size);

extern void regfree (regex_t *__preg);






#line 11 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/utsname.h" 1
/* Copyright (C) 1991,92,94,96,97,99,2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 4.4 System Identification	<sys/utsname.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/utsname.h" 2



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/utsname.h" 1
/* Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Length of the entries in `struct utsname' is 65.  */


/* Linux provides as additional information in the `struct utsname'
   the name of the current domain.  Define _UTSNAME_DOMAIN_LENGTH
   to a value != 0 to activate this entry.  */

#line 32 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/utsname.h" 2
















/* Structure describing the system and machine.  */
struct utsname
  {
    /* Name of the implementation of the operating system.  */
    char sysname[65];

    /* Name of this node on the network.  */
    char nodename[65];

    /* Current release level of this implementation.  */
    char release[65];
    /* Current version level of this release.  */
    char version[65];

    /* Name of the hardware type the system is running on.  */
    char machine[65];


    /* Name of the domain of this node on the network.  */

    
     char __domainname[65];


  };


/* Note that SVID assumes all members have the same size.  */


/* Put information about the system in NAME.  */
extern int uname (struct utsname *__name) __attribute__ ((__nothrow__));





#line 12 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 2


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */








 








 


















	
	
	
	








































	
	


















	





	




	




	




	




	




	






#line 15 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/symbol.c" 2

struct symbol symbol_yes = {
	.name = "y",
	.curr = { "y", yes },
	.flags = 0x0001|0x0080,
}, symbol_mod = {
	.name = "m",
	.curr = { "m", mod },
	.flags = 0x0002|0x0080,
}, symbol_no = {
	.name = "n",
	.curr = { "n", no },
	.flags = 0x0004|0x0080,
}, symbol_empty = {
	.name = "",
	.curr = { "", no },
	.flags = 0x0080,
};

int sym_change_count;
struct symbol *modules_sym;
tristate modules_val;

void sym_add_default(struct symbol *sym, const char *def)
{
	struct property *prop = prop_alloc(P_DEFAULT, sym);

	prop->expr = expr_alloc_symbol(sym_lookup(def, 1));
}

void sym_init(void)
{
	struct symbol *sym;
	struct utsname uts;
	char *p;
	static _Bool inited = 0;

	if (inited)
		return;
	inited = 1;

	uname(&uts);

	sym = sym_lookup("ARCH", 0);
	sym->type = S_STRING;
	sym->flags |= 0x1000;
	p = getenv("ARCH");
	if (p)
		sym_add_default(sym, p);

	sym = sym_lookup("KERNELVERSION", 0);
	sym->type = S_STRING;
	sym->flags |= 0x1000;
	p = getenv("KERNELVERSION");
	if (p)
		sym_add_default(sym, p);

	sym = sym_lookup("UNAME_RELEASE", 0);
	sym->type = S_STRING;
	sym->flags |= 0x1000;
	sym_add_default(sym, uts.release);
}

enum symbol_type sym_get_type(struct symbol *sym)
{
	enum symbol_type type = sym->type;

	if (type == S_TRISTATE) {
		if (sym_is_choice_value(sym) && sym->visible == yes)
			type = S_BOOLEAN;
		else if (modules_val == no)
			type = S_BOOLEAN;
	}
	return type;
}

const char *sym_type_name(enum symbol_type type)
{
	switch (type) {
	case S_BOOLEAN:
		return "boolean";
	case S_TRISTATE:
		return "tristate";
	case S_INT:
		return "integer";
	case S_HEX:
		return "hex";
	case S_STRING:
		return "string";
	case S_UNKNOWN:
		return "unknown";
	case S_OTHER:
		break;
	}
	return "???";
}

struct property *sym_get_choice_prop(struct symbol *sym)
{
	struct property *prop;

	for (prop = sym->prop; prop; prop = prop->next) if (prop->type == (P_CHOICE))
		return prop;
	return ((void *)0);
}

struct property *sym_get_default_prop(struct symbol *sym)
{
	struct property *prop;

	for (prop = sym->prop; prop; prop = prop->next) if (prop->type == (P_DEFAULT)) {
		prop->visible.tri = expr_calc_value(prop->visible.expr);
		if (prop->visible.tri != no)
			return prop;
	}
	return ((void *)0);
}

struct property *sym_get_range_prop(struct symbol *sym)
{
	struct property *prop;

	for (prop = sym->prop; prop; prop = prop->next) if (prop->type == (P_RANGE)) {
		prop->visible.tri = expr_calc_value(prop->visible.expr);
		if (prop->visible.tri != no)
			return prop;
	}
	return ((void *)0);
}

static int sym_get_range_val(struct symbol *sym, int base)
{
	sym_calc_value(sym);
	switch (sym->type) {
	case S_INT:
		base = 10;
		break;
	case S_HEX:
		base = 16;
		break;
	default:
		break;
	}
	return strtol(sym->curr.val, ((void *)0), base);
}

static void sym_validate_range(struct symbol *sym)
{
	struct property *prop;
	int base, val, val2;
	char str[64];

	switch (sym->type) {
	case S_INT:
		base = 10;
		break;
	case S_HEX:
		base = 16;
		break;
	default:
		return;
	}
	prop = sym_get_range_prop(sym);
	if (!prop)
		return;
	val = strtol(sym->curr.val, ((void *)0), base);
	val2 = sym_get_range_val(prop->expr->left.sym, base);
	if (val >= val2) {
		val2 = sym_get_range_val(prop->expr->right.sym, base);
		if (val <= val2)
			return;
	}
	if (sym->type == S_INT)
		sprintf(str, "%d", val2);
	else
		sprintf(str, "0x%x", val2);
	sym->curr.val = strdup(str);
}

static void sym_calc_visibility(struct symbol *sym)
{
	struct property *prop;
	tristate tri;

	/* any prompt visible? */
	tri = no;
	for (prop = sym->prop; prop; prop = prop->next) if (prop->text) {
		prop->visible.tri = expr_calc_value(prop->visible.expr);
		tri = (((tri)>(prop->visible.tri))?(tri):(prop->visible.tri));
	}
	if (tri == mod && (sym->type != S_TRISTATE || modules_val == no))
		tri = yes;
	if (sym->visible != tri) {
		sym->visible = tri;
		sym_set_changed(sym);
	}
	if (sym_is_choice_value(sym))
		return;
	tri = no;
	if (sym->rev_dep.expr)
		tri = expr_calc_value(sym->rev_dep.expr);
	if (tri == mod && sym_get_type(sym) == S_BOOLEAN)
		tri = yes;
	if (sym->rev_dep.tri != tri) {
		sym->rev_dep.tri = tri;
		sym_set_changed(sym);
	}
}

static struct symbol *sym_calc_choice(struct symbol *sym)
{
	struct symbol *def_sym;
	struct property *prop;
	struct expr *e;

	/* is the user choice visible? */
	def_sym = sym->user.val;
	if (def_sym) {
		sym_calc_visibility(def_sym);
		if (def_sym->visible != no)
			return def_sym;
	}

	/* any of the defaults visible? */
	for (prop = sym->prop; prop; prop = prop->next) if (prop->type == (P_DEFAULT)) {
		prop->visible.tri = expr_calc_value(prop->visible.expr);
		if (prop->visible.tri == no)
			continue;
		def_sym = prop_get_symbol(prop);
		sym_calc_visibility(def_sym);
		if (def_sym->visible != no)
			return def_sym;
	}

	/* just get the first visible value */
	prop = sym_get_choice_prop(sym);
	for (e = prop->expr; e; e = e->left.expr) {
		def_sym = e->right.sym;
		sym_calc_visibility(def_sym);
		if (def_sym->visible != no)
			return def_sym;
	}

	/* no choice? reset tristate value */
	sym->curr.tri = no;
	return ((void *)0);
}

void sym_calc_value(struct symbol *sym)
{
	struct symbol_value newval, oldval;
	struct property *prop;
	struct expr *e;

	if (!sym)
		return;

	if (sym->flags & 0x0080)
		return;
	sym->flags |= 0x0080;

	oldval = sym->curr;

	switch (sym->type) {
	case S_INT:
	case S_HEX:
	case S_STRING:
		newval = symbol_empty.curr;
		break;
	case S_BOOLEAN:
	case S_TRISTATE:
		newval = symbol_no.curr;
		break;
	default:
		sym->curr.val = sym->name;
		sym->curr.tri = no;
		return;
	}
	if (!sym_is_choice_value(sym))
		sym->flags &= ~0x0200;

	sym_calc_visibility(sym);

	/* set default if recursively called */
	sym->curr = newval;

	switch (sym_get_type(sym)) {
	case S_BOOLEAN:
	case S_TRISTATE:
		if (sym_is_choice_value(sym) && sym->visible == yes) {
			prop = sym_get_choice_prop(sym);
			newval.tri = (prop_get_symbol(prop)->curr.val == sym) ? yes : no;
		} else if ((((sym->visible)>(sym->rev_dep.tri))?(sym->visible):(sym->rev_dep.tri)) != no) {
			sym->flags |= 0x0200;
			if (sym_has_value(sym))
				newval.tri = sym->user.tri;
			else if (!sym_is_choice(sym)) {
				prop = sym_get_default_prop(sym);
				if (prop)
					newval.tri = expr_calc_value(prop->expr);
			}
			newval.tri = ((((((newval.tri)<(sym->visible))?(newval.tri):(sym->visible)))>(sym->rev_dep.tri))?((((newval.tri)<(sym->visible))?(newval.tri):(sym->visible))):(sym->rev_dep.tri));
		} else if (!sym_is_choice(sym)) {
			prop = sym_get_default_prop(sym);
			if (prop) {
				sym->flags |= 0x0200;
				newval.tri = expr_calc_value(prop->expr);
			}
		}
		if (newval.tri == mod && sym_get_type(sym) == S_BOOLEAN)
			newval.tri = yes;
		break;
	case S_STRING:
	case S_HEX:
	case S_INT:
		if (sym->visible != no) {
			sym->flags |= 0x0200;
			if (sym_has_value(sym)) {
				newval.val = sym->user.val;
				break;
			}
		}
		prop = sym_get_default_prop(sym);
		if (prop) {
			struct symbol *ds = prop_get_symbol(prop);
			if (ds) {
				sym->flags |= 0x0200;
				sym_calc_value(ds);
				newval.val = ds->curr.val;
			}
		}
		break;
	default:
		;
	}

	sym->curr = newval;
	if (sym_is_choice(sym) && newval.tri == yes)
		sym->curr.val = sym_calc_choice(sym);
	sym_validate_range(sym);

	if (memcmp(&oldval, &sym->curr, sizeof(oldval)))
		sym_set_changed(sym);
	if (modules_sym == sym)
		modules_val = modules_sym->curr.tri;

	if (sym_is_choice(sym)) {
		int flags = sym->flags & (0x0400 | 0x0200);
		prop = sym_get_choice_prop(sym);
		for (e = prop->expr; e; e = e->left.expr) {
			e->right.sym->flags |= flags;
			if (flags & 0x0400)
				sym_set_changed(e->right.sym);
		}
	}
}

void sym_clear_all_valid(void)
{
	struct symbol *sym;
	int i;

	for (i = 0; i < 257; i++) for (sym = symbol_hash[i]; sym; sym = sym->next) if (sym->type != S_OTHER)
		sym->flags &= ~0x0080;
	sym_change_count++;
	if (modules_sym)
		sym_calc_value(modules_sym);
}

void sym_set_changed(struct symbol *sym)
{
	struct property *prop;

	sym->flags |= 0x0400;
	for (prop = sym->prop; prop; prop = prop->next) {
		if (prop->menu)
			prop->menu->flags |= 0x0001;
	}
}

void sym_set_all_changed(void)
{
	struct symbol *sym;
	int i;

	for (i = 0; i < 257; i++) for (sym = symbol_hash[i]; sym; sym = sym->next) if (sym->type != S_OTHER)
		sym_set_changed(sym);
}

_Bool sym_tristate_within_range(struct symbol *sym, tristate val)
{
	int type = sym_get_type(sym);

	if (sym->visible == no)
		return 0;

	if (type != S_BOOLEAN && type != S_TRISTATE)
		return 0;

	if (type == S_BOOLEAN && val == mod)
		return 0;
	if (sym->visible <= sym->rev_dep.tri)
		return 0;
	if (sym_is_choice_value(sym) && sym->visible == yes)
		return val == yes;
	return val >= sym->rev_dep.tri && val <= sym->visible;
}

_Bool sym_set_tristate_value(struct symbol *sym, tristate val)
{
	tristate oldval = sym_get_tristate_value(sym);

	if (oldval != val && !sym_tristate_within_range(sym, val))
		return 0;

	if (sym->flags & 0x0800) {
		sym->flags &= ~0x0800;
		sym_set_changed(sym);
	}
	/*
	 * setting a choice value also resets the new flag of the choice
	 * symbol and all other choice values.
	 */
	if (sym_is_choice_value(sym) && val == yes) {
		struct symbol *cs = prop_get_symbol(sym_get_choice_prop(sym));
		struct property *prop;
		struct expr *e;

		cs->user.val = sym;
		cs->flags &= ~0x0800;
		prop = sym_get_choice_prop(cs);
		for (e = prop->expr; e; e = e->left.expr) {
			if (e->right.sym->visible != no)
				e->right.sym->flags &= ~0x0800;
		}
	}

	sym->user.tri = val;
	if (oldval != val) {
		sym_clear_all_valid();
		if (sym == modules_sym)
			sym_set_all_changed();
	}

	return 1;
}

tristate sym_toggle_tristate_value(struct symbol *sym)
{
	tristate oldval, newval;

	oldval = newval = sym_get_tristate_value(sym);
	do {
		switch (newval) {
		case no:
			newval = mod;
			break;
		case mod:
			newval = yes;
			break;
		case yes:
			newval = no;
			break;
		}
		if (sym_set_tristate_value(sym, newval))
			break;
	} while (oldval != newval);
	return newval;
}

_Bool sym_string_valid(struct symbol *sym, const char *str)
{
	signed char ch;

	switch (sym->type) {
	case S_STRING:
		return 1;
	case S_INT:
		ch = *str++;
		if (ch == '-')
			ch = *str++;
		if (!((*__ctype_b_loc ())[(int) ((ch))] & (unsigned short int) _ISdigit))
			return 0;
		if (ch == '0' && *str != 0)
			return 0;
		while ((ch = *str++)) {
			if (!((*__ctype_b_loc ())[(int) ((ch))] & (unsigned short int) _ISdigit))
				return 0;
		}
		return 1;
	case S_HEX:
		if (str[0] == '0' && (str[1] == 'x' || str[1] == 'X'))
			str += 2;
		ch = *str++;
		do {
			if (!((*__ctype_b_loc ())[(int) ((ch))] & (unsigned short int) _ISxdigit))
				return 0;
		} while ((ch = *str++));
		return 1;
	case S_BOOLEAN:
	case S_TRISTATE:
		switch (str[0]) {
		case 'y': case 'Y':
		case 'm': case 'M':
		case 'n': case 'N':
			return 1;
		}
		return 0;
	default:
		return 0;
	}
}

_Bool sym_string_within_range(struct symbol *sym, const char *str)
{
	struct property *prop;
	int val;

	switch (sym->type) {
	case S_STRING:
		return sym_string_valid(sym, str);
	case S_INT:
		if (!sym_string_valid(sym, str))
			return 0;
		prop = sym_get_range_prop(sym);
		if (!prop)
			return 1;
		val = strtol(str, ((void *)0), 10);
		return val >= sym_get_range_val(prop->expr->left.sym, 10) &&
		       val <= sym_get_range_val(prop->expr->right.sym, 10);
	case S_HEX:
		if (!sym_string_valid(sym, str))
			return 0;
		prop = sym_get_range_prop(sym);
		if (!prop)
			return 1;
		val = strtol(str, ((void *)0), 16);
		return val >= sym_get_range_val(prop->expr->left.sym, 16) &&
		       val <= sym_get_range_val(prop->expr->right.sym, 16);
	case S_BOOLEAN:
	case S_TRISTATE:
		switch (str[0]) {
		case 'y': case 'Y':
			return sym_tristate_within_range(sym, yes);
		case 'm': case 'M':
			return sym_tristate_within_range(sym, mod);
		case 'n': case 'N':
			return sym_tristate_within_range(sym, no);
		}
		return 0;
	default:
		return 0;
	}
}

_Bool sym_set_string_value(struct symbol *sym, const char *newval)
{
	const char *oldval;
	char *val;
	int size;

	switch (sym->type) {
	case S_BOOLEAN:
	case S_TRISTATE:
		switch (newval[0]) {
		case 'y': case 'Y':
			return sym_set_tristate_value(sym, yes);
		case 'm': case 'M':
			return sym_set_tristate_value(sym, mod);
		case 'n': case 'N':
			return sym_set_tristate_value(sym, no);
		}
		return 0;
	default:
		;
	}

	if (!sym_string_within_range(sym, newval))
		return 0;

	if (sym->flags & 0x0800) {
		sym->flags &= ~0x0800;
		sym_set_changed(sym);
	}

	oldval = sym->user.val;
	size = strlen(newval) + 1;
	if (sym->type == S_HEX && (newval[0] != '0' || (newval[1] != 'x' && newval[1] != 'X'))) {
		size += 2;
		sym->user.val = val = malloc(size);
		*val++ = '0';
		*val++ = 'x';
	} else if (!oldval || strcmp(oldval, newval))
		sym->user.val = val = malloc(size);
	else
		return 1;

	strcpy(val, newval);
	free((void *)oldval);
	sym_clear_all_valid();

	return 1;
}

const char *sym_get_string_value(struct symbol *sym)
{
	tristate val;

	switch (sym->type) {
	case S_BOOLEAN:
	case S_TRISTATE:
		val = sym_get_tristate_value(sym);
		switch (val) {
		case no:
			return "n";
		case mod:
			return "m";
		case yes:
			return "y";
		}
		break;
	default:
		;
	}
	return (const char *)sym->curr.val;
}

_Bool sym_is_changable(struct symbol *sym)
{
	return sym->visible > sym->rev_dep.tri;
}

struct symbol *sym_lookup(const char *name, int isconst)
{
	struct symbol *symbol;
	const char *ptr;
	char *new_name;
	int hash = 0;

	if (name) {
		if (name[0] && !name[1]) {
			switch (name[0]) {
			case 'y': return &symbol_yes;
			case 'm': return &symbol_mod;
			case 'n': return &symbol_no;
			}
		}
		for (ptr = name; *ptr; ptr++)
			hash += *ptr;
		hash &= 0xff;

		for (symbol = symbol_hash[hash]; symbol; symbol = symbol->next) {
			if (!strcmp(symbol->name, name)) {
				if ((isconst && symbol->flags & 0x0007) ||
				    (!isconst && !(symbol->flags & 0x0007)))
					return symbol;
			}
		}
		new_name = strdup(name);
	} else {
		new_name = ((void *)0);
		hash = 256;
	}

	symbol = malloc(sizeof(*symbol));
	memset(symbol, 0, sizeof(*symbol));
	symbol->name = new_name;
	symbol->type = S_UNKNOWN;
	symbol->flags = 0x0800;
	if (isconst)
		symbol->flags |= 0x0007;

	symbol->next = symbol_hash[hash];
	symbol_hash[hash] = symbol;

	return symbol;
}

struct symbol *sym_find(const char *name)
{
	struct symbol *symbol = ((void *)0);
	const char *ptr;
	int hash = 0;

	if (!name)
		return ((void *)0);

	if (name[0] && !name[1]) {
		switch (name[0]) {
		case 'y': return &symbol_yes;
		case 'm': return &symbol_mod;
		case 'n': return &symbol_no;
		}
	}
	for (ptr = name; *ptr; ptr++)
		hash += *ptr;
	hash &= 0xff;

	for (symbol = symbol_hash[hash]; symbol; symbol = symbol->next) {
		if (!strcmp(symbol->name, name) &&
		    !(symbol->flags & 0x0007))
				break;
	}

	return symbol;
}

struct symbol **sym_re_search(const char *pattern)
{
	struct symbol *sym, **sym_arr = ((void *)0);
	int i, cnt, size;
	regex_t re;

	cnt = size = 0;
	/* Skip if empty */
	if (strlen(pattern) == 0)
		return ((void *)0);
	if (regcomp(&re, pattern, 1|(((1 << 1) << 1) << 1)|(1 << 1)))
		return ((void *)0);

	for (i = 0; i < 257; i++) for (sym = symbol_hash[i]; sym; sym = sym->next) if (sym->type != S_OTHER) {
		if (sym->flags & 0x0007 || !sym->name)
			continue;
		if (regexec(&re, sym->name, 0, ((void *)0), 0))
			continue;
		if (cnt + 1 >= size) {
			void *tmp = sym_arr;
			size += 16;
			sym_arr = realloc(sym_arr, size * sizeof(struct symbol *));
			if (!sym_arr) {
				free(tmp);
				return ((void *)0);
			}
		}
		sym_arr[cnt++] = sym;
	}
	if (sym_arr)
		sym_arr[cnt] = ((void *)0);
	regfree(&re);

	return sym_arr;
}


struct symbol *sym_check_deps(struct symbol *sym);

static struct symbol *sym_check_expr_deps(struct expr *e)
{
	struct symbol *sym;

	if (!e)
		return ((void *)0);
	switch (e->type) {
	case E_OR:
	case E_AND:
		sym = sym_check_expr_deps(e->left.expr);
		if (sym)
			return sym;
		return sym_check_expr_deps(e->right.expr);
	case E_NOT:
		return sym_check_expr_deps(e->left.expr);
	case E_EQUAL:
	case E_UNEQUAL:
		sym = sym_check_deps(e->left.sym);
		if (sym)
			return sym;
		return sym_check_deps(e->right.sym);
	case E_SYMBOL:
		return sym_check_deps(e->left.sym);
	default:
		break;
	}
	printf("Oops! How to check %d?\n", e->type);
	return ((void *)0);
}

struct symbol *sym_check_deps(struct symbol *sym)
{
	struct symbol *sym2;
	struct property *prop;

	if (sym->flags & 0x0008) {
		printf("Warning! Found recursive dependency: %s", sym->name);
		return sym;
	}
	if (sym->flags & 0x2000)
		return ((void *)0);

	sym->flags |= (0x0008 | 0x2000);
	sym2 = sym_check_expr_deps(sym->rev_dep.expr);
	if (sym2)
		goto out;

	for (prop = sym->prop; prop; prop = prop->next) {
		if (prop->type == P_CHOICE || prop->type == P_SELECT)
			continue;
		sym2 = sym_check_expr_deps(prop->visible.expr);
		if (sym2)
			goto out;
		if (prop->type != P_DEFAULT || sym_is_choice(sym))
			continue;
		sym2 = sym_check_expr_deps(prop->expr);
		if (sym2)
			goto out;
	}
out:
	if (sym2) {
		printf(" %s", sym->name);
		if (sym2 == sym) {
			printf("\n");
			sym2 = ((void *)0);
		}
	}
	sym->flags &= ~0x0008;
	return sym2;
}

struct property *prop_alloc(enum prop_type type, struct symbol *sym)
{
	struct property *prop;
	struct property **propp;

	prop = malloc(sizeof(*prop));
	memset(prop, 0, sizeof(*prop));
	prop->type = type;
	prop->sym = sym;
	prop->file = current_file;
	prop->lineno = zconf_lineno();

	/* append property to the prop list of symbol */
	if (sym) {
		for (propp = &sym->prop; *propp; propp = &(*propp)->next)
			;
		*propp = prop;
	}

	return prop;
}

struct symbol *prop_get_symbol(struct property *prop)
{
	if (prop->expr && (prop->expr->type == E_SYMBOL ||
			   prop->expr->type == E_CHOICE))
		return prop->expr->left.sym;
	return ((void *)0);
}

const char *prop_get_type_name(enum prop_type type)
{
	switch (type) {
	case P_PROMPT:
		return "prompt";
	case P_COMMENT:
		return "comment";
	case P_MENU:
		return "menu";
	case P_DEFAULT:
		return "default";
	case P_CHOICE:
		return "choice";
	case P_SELECT:
		return "select";
	case P_RANGE:
		return "range";
	case P_UNKNOWN:
		break;
	}
	return "unknown";
}
#line 2176 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/menu.c" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */






























 









 

  
    
    
  


 


















  
    
    
  




  
    
    
  








  
    
    
  





















     


     


     






     





		      
     






		     


			    
     





			
     


				  
     






			     
     



				       
     






			      
     



					
     





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  












     




















			












  
    
    
    
    
    
    
    
  


		     


     


			
			
     


		       
     























     




     




     







  
    
    
    
    
    
  



		      

		      
		      



		      
     

		      
		      
     



		      
     

		      
		      
     



     


		     


		      
     










     










     


















     















     
 








     
































     











     




























 

     
 















 

		       
 




     



















 

     
 













     
 

				   
     
 




     















     








		       

















		      
     




		   


		     
  








     






     

     





				    
     










		   





		   





     





		    
     

		    
     

     





		   
		   

		   
		   


		    
		    
     

		    
		    
     









		   







			


			
     


















		      
		      
     
































     









     














#line 8 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/menu.c" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




















		     
     



     







		      
     







     






      

      





  





  



 
      








     

     
 
     




      

      
 
      





     


		      
     



     


		      



     


     



     


		       
     










     


			 




     






     





























     

     





  





  



 
     






     

     





  





  



 
     








     

     
 
     






     



     





     

     





  





  



 
     






     

			     
     





  





  



 
     



     





			 
			 
     


		       
     





     

				       
     
 
     







		     
     




			
     

		      
     




     






     


















			   
			   
 
     


 


     













     






     






     

     





  





  



 
     






     

     





  





  



 
     











     




     



     





			 
     


			  
     





		     
     







     

     




			
     

		      
     




     














     

     
 





































#line 9 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/menu.c" 2


#line 1 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/lkc.h" 1
/*
 * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
 * Released under the terms of the GNU GPL v2.0.
 */








 








 


















	
	
	
	








































	
	


















	





	




	




	




	




	




	






#line 12 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/menu.c" 2

struct menu rootmenu;
static struct menu **last_entry_ptr;

struct file *file_list;
struct file *current_file;

static void menu_warn(struct menu *menu, const char *fmt, ...)
{
	va_list ap;
	__builtin_va_start(ap,fmt);
	fprintf(stderr, "%s:%d:warning: ", menu->file->name, menu->lineno);
	vfprintf(stderr, fmt, ap);
	fprintf(stderr, "\n");
	__builtin_va_end(ap);
}

static void prop_warn(struct property *prop, const char *fmt, ...)
{
	va_list ap;
	__builtin_va_start(ap,fmt);
	fprintf(stderr, "%s:%d:warning: ", prop->file->name, prop->lineno);
	vfprintf(stderr, fmt, ap);
	fprintf(stderr, "\n");
	__builtin_va_end(ap);
}

void menu_init(void)
{
	current_entry = current_menu = &rootmenu;
	last_entry_ptr = &rootmenu.list;
}

void menu_add_entry(struct symbol *sym)
{
	struct menu *menu;

	menu = malloc(sizeof(*menu));
	memset(menu, 0, sizeof(*menu));
	menu->sym = sym;
	menu->parent = current_menu;
	menu->file = current_file;
	menu->lineno = zconf_lineno();

	*last_entry_ptr = menu;
	last_entry_ptr = &menu->next;
	current_entry = menu;
}

void menu_end_entry(void)
{
}

struct menu *menu_add_menu(void)
{
	menu_end_entry();
	last_entry_ptr = &current_entry->list;
	return current_menu = current_entry;
}

void menu_end_menu(void)
{
	last_entry_ptr = &current_menu->next;
	current_menu = current_menu->parent;
}

struct expr *menu_check_dep(struct expr *e)
{
	if (!e)
		return e;

	switch (e->type) {
	case E_NOT:
		e->left.expr = menu_check_dep(e->left.expr);
		break;
	case E_OR:
	case E_AND:
		e->left.expr = menu_check_dep(e->left.expr);
		e->right.expr = menu_check_dep(e->right.expr);
		break;
	case E_SYMBOL:
		/* change 'm' into 'm' && MODULES */
		if (e->left.sym == &symbol_mod)
			return expr_alloc_and(e, expr_alloc_symbol(modules_sym));
		break;
	default:
		break;
	}
	return e;
}

void menu_add_dep(struct expr *dep)
{
	current_entry->dep = expr_alloc_and(current_entry->dep, menu_check_dep(dep));
}

void menu_set_type(int type)
{
	struct symbol *sym = current_entry->sym;

	if (sym->type == type)
		return;
	if (sym->type == S_UNKNOWN) {
		sym->type = type;
		return;
	}
	menu_warn(current_entry, "type of '%s' redefined from '%s' to '%s'\n",
	    sym->name ? sym->name : "<choice>",
	    sym_type_name(sym->type), sym_type_name(type));
}

struct property *menu_add_prop(enum prop_type type, char *prompt, struct expr *expr, struct expr *dep)
{
	struct property *prop = prop_alloc(type, current_entry->sym);

	prop->menu = current_entry;
	prop->text = prompt;
	prop->expr = expr;
	prop->visible.expr = menu_check_dep(dep);

	if (prompt) {
		if (current_entry->prompt)
			menu_warn(current_entry, "prompt redefined\n");
		current_entry->prompt = prop;
	}

	return prop;
}

struct property *menu_add_prompt(enum prop_type type, char *prompt, struct expr *dep)
{
	return menu_add_prop(type, prompt, ((void *)0), dep);
}

void menu_add_expr(enum prop_type type, struct expr *expr, struct expr *dep)
{
	menu_add_prop(type, ((void *)0), expr, dep);
}

void menu_add_symbol(enum prop_type type, struct symbol *sym, struct expr *dep)
{
	menu_add_prop(type, ((void *)0), expr_alloc_symbol(sym), dep);
}

static int menu_range_valid_sym(struct symbol *sym, struct symbol *sym2)
{
	return sym2->type == S_INT || sym2->type == S_HEX ||
	       (sym2->type == S_UNKNOWN && sym_string_valid(sym, sym2->name));
}

void sym_check_prop(struct symbol *sym)
{
	struct property *prop;
	struct symbol *sym2;
	for (prop = sym->prop; prop; prop = prop->next) {
		switch (prop->type) {
		case P_DEFAULT:
			if ((sym->type == S_STRING || sym->type == S_INT || sym->type == S_HEX) &&
			    prop->expr->type != E_SYMBOL)
				prop_warn(prop,
				    "default for config symbol '%'"
				    " must be a single symbol", sym->name);
			break;
		case P_SELECT:
			sym2 = prop_get_symbol(prop);
			if (sym->type != S_BOOLEAN && sym->type != S_TRISTATE)
				prop_warn(prop,
				    "config symbol '%s' uses select, but is "
				    "not boolean or tristate", sym->name);
			else if (sym2->type == S_UNKNOWN)
				prop_warn(prop,
				    "'select' used by config symbol '%s' "
				    "refer to undefined symbol '%s'",
				    sym->name, sym2->name);
			else if (sym2->type != S_BOOLEAN && sym2->type != S_TRISTATE)
				prop_warn(prop,
				    "'%s' has wrong type. 'select' only "
				    "accept arguments of boolean and "
				    "tristate type", sym2->name);
			break;
		case P_RANGE:
			if (sym->type != S_INT && sym->type != S_HEX)
				prop_warn(prop, "range is only allowed "
				                "for int or hex symbols");
			if (!menu_range_valid_sym(sym, prop->expr->left.sym) ||
			    !menu_range_valid_sym(sym, prop->expr->right.sym))
				prop_warn(prop, "range is invalid");
			break;
		default:
			;
		}
	}
}

void menu_finalize(struct menu *parent)
{
	struct menu *menu, *last_menu;
	struct symbol *sym;
	struct property *prop;
	struct expr *parentdep, *basedep, *dep, *dep2, **ep;

	sym = parent->sym;
	if (parent->list) {
		if (sym && sym_is_choice(sym)) {
			/* find the first choice value and find out choice type */
			for (menu = parent->list; menu; menu = menu->next) {
				if (menu->sym) {
					current_entry = parent;
					menu_set_type(menu->sym->type);
					current_entry = menu;
					menu_set_type(sym->type);
					break;
				}
			}
			parentdep = expr_alloc_symbol(sym);
		} else if (parent->prompt)
			parentdep = parent->prompt->visible.expr;
		else
			parentdep = parent->dep;

		for (menu = parent->list; menu; menu = menu->next) {
			basedep = expr_transform(menu->dep);
			basedep = expr_alloc_and(expr_copy(parentdep), basedep);
			basedep = expr_eliminate_dups(basedep);
			menu->dep = basedep;
			if (menu->sym)
				prop = menu->sym->prop;
			else
				prop = menu->prompt;
			for (; prop; prop = prop->next) {
				if (prop->menu != menu)
					continue;
				dep = expr_transform(prop->visible.expr);
				dep = expr_alloc_and(expr_copy(basedep), dep);
				dep = expr_eliminate_dups(dep);
				if (menu->sym && menu->sym->type != S_TRISTATE)
					dep = expr_trans_bool(dep);
				prop->visible.expr = dep;
				if (prop->type == P_SELECT) {
					struct symbol *es = prop_get_symbol(prop);
					es->rev_dep.expr = expr_alloc_or(es->rev_dep.expr,
							expr_alloc_and(expr_alloc_symbol(menu->sym), expr_copy(dep)));
				}
			}
		}
		for (menu = parent->list; menu; menu = menu->next)
			menu_finalize(menu);
	} else if (sym) {
		basedep = parent->prompt ? parent->prompt->visible.expr : ((void *)0);
		basedep = expr_trans_compare(basedep, E_UNEQUAL, &symbol_no);
		basedep = expr_eliminate_dups(expr_transform(basedep));
		last_menu = ((void *)0);
		for (menu = parent->next; menu; menu = menu->next) {
			dep = menu->prompt ? menu->prompt->visible.expr : menu->dep;
			if (!expr_contains_symbol(dep, sym))
				break;
			if (expr_depends_symbol(dep, sym))
				goto next;
			dep = expr_trans_compare(dep, E_UNEQUAL, &symbol_no);
			dep = expr_eliminate_dups(expr_transform(dep));
			dep2 = expr_copy(basedep);
			expr_eliminate_eq(&dep, &dep2);
			expr_free(dep);
			if (!expr_is_yes(dep2)) {
				expr_free(dep2);
				break;
			}
			expr_free(dep2);
		next:
			menu_finalize(menu);
			menu->parent = parent;
			last_menu = menu;
		}
		if (last_menu) {
			parent->list = parent->next;
			parent->next = last_menu->next;
			last_menu->next = ((void *)0);
		}
	}
	for (menu = parent->list; menu; menu = menu->next) {
		if (sym && sym_is_choice(sym) && menu->sym) {
			menu->sym->flags |= 0x0020;
			if (!menu->prompt)
				menu_warn(menu, "choice value must have a prompt");
			for (prop = menu->sym->prop; prop; prop = prop->next) {
				if (prop->type == P_PROMPT && prop->menu != menu) {
					prop_warn(prop, "choice values "
					    "currently only support a "
					    "single prompt");
				}
				if (prop->type == P_DEFAULT)
					prop_warn(prop, "defaults for choice "
					    "values not supported");
			}
			current_entry = menu;
			menu_set_type(sym->type);
			menu_add_symbol(P_CHOICE, sym, ((void *)0));
			prop = sym_get_choice_prop(sym);
			for (ep = &prop->expr; *ep; ep = &(*ep)->left.expr)
				;
			*ep = expr_alloc_one(E_CHOICE, ((void *)0));
			(*ep)->right.sym = menu->sym;
		}
		if (menu->list && (!menu->prompt || !menu->prompt->text)) {
			for (last_menu = menu->list; ; last_menu = last_menu->next) {
				last_menu->parent = parent;
				if (!last_menu->next)
					break;
			}
			last_menu->next = menu->next;
			menu->next = menu->list;
			menu->list = ((void *)0);
		}
	}

	if (sym && !(sym->flags & 0x8000)) {
		if (sym->type == S_UNKNOWN)
			menu_warn(parent, "config symbol defined "
			    "without type\n");

		if (sym_is_choice(sym) && !parent->prompt)
			menu_warn(parent, "choice must have a prompt\n");

		/* Check properties connected to this symbol */
		sym_check_prop(sym);
		sym->flags |= 0x8000;
	}

	if (sym && !sym_is_optional(sym) && parent->prompt) {
		sym->rev_dep.expr = expr_alloc_or(sym->rev_dep.expr,
				expr_alloc_and(parent->prompt->visible.expr,
					expr_alloc_symbol(&symbol_mod)));
	}
}

_Bool menu_is_visible(struct menu *menu)
{
	struct menu *child;
	struct symbol *sym;
	tristate visible;

	if (!menu->prompt)
		return 0;
	sym = menu->sym;
	if (sym) {
		sym_calc_value(sym);
		visible = menu->prompt->visible.tri;
	} else
		visible = menu->prompt->visible.tri = expr_calc_value(menu->prompt->visible.expr);

	if (visible != no)
		return 1;
	if (!sym || sym_get_tristate_value(menu->sym) == no)
		return 0;

	for (child = menu->list; child; child = child->next)
		if (menu_is_visible(child))
			return 1;
	return 0;
}

const char *menu_get_prompt(struct menu *menu)
{
	if (menu->prompt)
		return gettext(menu->prompt->text);
	else if (menu->sym)
		return gettext(menu->sym->name);
	return ((void *)0);
}

struct menu *menu_get_root_menu(struct menu *menu)
{
	return &rootmenu;
}

struct menu *menu_get_parent_menu(struct menu *menu)
{
	enum prop_type type;

	for (; menu != &rootmenu; menu = menu->parent) {
		type = menu->prompt ? menu->prompt->type : 0;
		if (type == P_MENU)
			break;
	}
	return menu;
}
#line 2177 "cprojects/busybox/busybox-1.18.5/scripts/kconfig/zconf.tab.c" 2
