#line 1 "host/platform-redhat.h" 1
//Generated with:
//echo -|gcc -dM - -E -std=gnu99 







































































































































#line 1 "busybox/config.h" 1
#if definedEx(CONFIG_HAVE_DOT_CONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_HAVE_DOT_CONFIG)
   
   
   
#endif
#if definedEx(CONFIG_DESKTOP)
   
   
   
#endif
#if !definedEx(CONFIG_DESKTOP)
   
   
   
#endif
#if definedEx(CONFIG_EXTRA_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_EXTRA_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_INCLUDE_SUSv2)
   
   
   
#endif
#if !definedEx(CONFIG_INCLUDE_SUSv2)
   
   
   
#endif
#if definedEx(CONFIG_USE_PORTABLE_CODE)
   
   
   
#endif
#if !definedEx(CONFIG_USE_PORTABLE_CODE)
   
   
   
#endif
#if definedEx(CONFIG_PLATFORM_LINUX)
   
   
   
#endif
#if !definedEx(CONFIG_PLATFORM_LINUX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
   
   
   
#endif
#if definedEx(CONFIG_SHOW_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_SHOW_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VERBOSE_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VERBOSE_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSTALLER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)
   
   
   
#endif
#if definedEx(CONFIG_LOCALE_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_LOCALE_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_USING_LOCALE)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_USING_LOCALE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
   
   
   
#endif
#if definedEx(CONFIG_SUBST_WCHAR)
   
   
   
#endif
#if !definedEx(CONFIG_SUBST_WCHAR)
   
   
   
#endif
#if definedEx(CONFIG_LAST_SUPPORTED_WCHAR)
   
   
   
#endif
#if !definedEx(CONFIG_LAST_SUPPORTED_WCHAR)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_COMBINING_WCHARS)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_COMBINING_WCHARS)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_WIDE_WCHARS)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_WIDE_WCHARS)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_BIDI_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_BIDI_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_NEUTRAL_TABLE)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_NEUTRAL_TABLE)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_PRESERVE_BROKEN)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_PRESERVE_BROKEN)
   
   
   
#endif
#if definedEx(CONFIG_LONG_OPTS)
   
   
   
#endif
#if !definedEx(CONFIG_LONG_OPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEVPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEVPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CLEAN_UP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CLEAN_UP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UTMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UTMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WTMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WTMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID_CONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_SELINUX)
   
   
   
#endif
#if !definedEx(CONFIG_SELINUX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PREFER_APPLETS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PREFER_APPLETS)
   
   
   
#endif
#if definedEx(CONFIG_BUSYBOX_EXEC_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_BUSYBOX_EXEC_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HAVE_RPC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HAVE_RPC)
   
   
   
#endif
#if definedEx(CONFIG_STATIC)
   
   
   
#endif
#if !definedEx(CONFIG_STATIC)
   
   
   
#endif
#if definedEx(CONFIG_PIE)
   
   
   
#endif
#if !definedEx(CONFIG_PIE)
   
   
   
#endif
#if definedEx(CONFIG_NOMMU)
   
   
   
#endif
#if !definedEx(CONFIG_NOMMU)
   
   
   
#endif
#if definedEx(CONFIG_BUILD_LIBBUSYBOX)
   
   
   
#endif
#if !definedEx(CONFIG_BUILD_LIBBUSYBOX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
   
   
   
#endif
#if definedEx(CONFIG_LFS)
   
   
   
#endif
#if !definedEx(CONFIG_LFS)
   
   
   
#endif
#if definedEx(CONFIG_CROSS_COMPILER_PREFIX)
   
   
   
#endif
#if !definedEx(CONFIG_CROSS_COMPILER_PREFIX)
   
   
   
#endif
#if definedEx(CONFIG_EXTRA_CFLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_EXTRA_CFLAGS)
   
   
   
#endif
#if definedEx(CONFIG_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_DEBUG_PESSIMIZE)
   
   
   
#endif
#if !definedEx(CONFIG_DEBUG_PESSIMIZE)
   
   
   
#endif
#if definedEx(CONFIG_WERROR)
   
   
   
#endif
#if !definedEx(CONFIG_WERROR)
   
   
   
#endif
#if definedEx(CONFIG_NO_DEBUG_LIB)
   
   
   
#endif
#if !definedEx(CONFIG_NO_DEBUG_LIB)
   
   
   
#endif
#if definedEx(CONFIG_DMALLOC)
   
   
   
#endif
#if !definedEx(CONFIG_DMALLOC)
   
   
   
#endif
#if definedEx(CONFIG_EFENCE)
   
   
   
#endif
#if !definedEx(CONFIG_EFENCE)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_NO_USR)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_NO_USR)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_SYMLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_SYMLINKS)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_HARDLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_HARDLINKS)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_APPLET_DONT)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_APPLET_DONT)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_SYMLINK)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_SYMLINK)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_HARDLINK)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_HARDLINK)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
   
   
   
#endif
#if definedEx(CONFIG_PREFIX)
   
   
   
#endif
#if !definedEx(CONFIG_PREFIX)
   
   
   
#endif
#if definedEx(CONFIG_PASSWORD_MINLEN)
   
   
   
#endif
#if !definedEx(CONFIG_PASSWORD_MINLEN)
   
   
   
#endif
#if definedEx(CONFIG_MD5_SIZE_VS_SPEED)
   
   
   
#endif
#if !definedEx(CONFIG_MD5_SIZE_VS_SPEED)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FAST_TOP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FAST_TOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ETC_NETWORKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ETC_NETWORKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_MAX_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_MAX_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_VI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_VI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_HISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_HISTORY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAB_COMPLETION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAB_COMPLETION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NON_POSIX_CP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NON_POSIX_CP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COPYBUF_KB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COPYBUF_KB)
   
   
   
#endif
#if definedEx(CONFIG_MONOTONIC_SYSCALL)
   
   
   
#endif
#if !definedEx(CONFIG_MONOTONIC_SYSCALL)
   
   
   
#endif
#if definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
   
   
   
#endif
#if !definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWIB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWIB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_XZ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_XZ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_LZMA)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_LZMA)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_BZ2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_BZ2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_GZ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_GZ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_Z)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_Z)
   
   
   
#endif
#if definedEx(CONFIG_AR)
   
   
   
#endif
#if !definedEx(CONFIG_AR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AR_LONG_FILENAMES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AR_LONG_FILENAMES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AR_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AR_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_BUNZIP2)
   
   
   
#endif
#if !definedEx(CONFIG_BUNZIP2)
   
   
   
#endif
#if definedEx(CONFIG_BZIP2)
   
   
   
#endif
#if !definedEx(CONFIG_BZIP2)
   
   
   
#endif
#if definedEx(CONFIG_CPIO)
   
   
   
#endif
#if !definedEx(CONFIG_CPIO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CPIO_O)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CPIO_O)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CPIO_P)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CPIO_P)
   
   
   
#endif
#if definedEx(CONFIG_DPKG)
   
   
   
#endif
#if !definedEx(CONFIG_DPKG)
   
   
   
#endif
#if definedEx(CONFIG_DPKG_DEB)
   
   
   
#endif
#if !definedEx(CONFIG_DPKG_DEB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
   
   
   
#endif
#if definedEx(CONFIG_GUNZIP)
   
   
   
#endif
#if !definedEx(CONFIG_GUNZIP)
   
   
   
#endif
#if definedEx(CONFIG_GZIP)
   
   
   
#endif
#if !definedEx(CONFIG_GZIP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_LZOP)
   
   
   
#endif
#if !definedEx(CONFIG_LZOP)
   
   
   
#endif
#if definedEx(CONFIG_LZOP_COMPR_HIGH)
   
   
   
#endif
#if !definedEx(CONFIG_LZOP_COMPR_HIGH)
   
   
   
#endif
#if definedEx(CONFIG_RPM2CPIO)
   
   
   
#endif
#if !definedEx(CONFIG_RPM2CPIO)
   
   
   
#endif
#if definedEx(CONFIG_RPM)
   
   
   
#endif
#if !definedEx(CONFIG_RPM)
   
   
   
#endif
#if definedEx(CONFIG_TAR)
   
   
   
#endif
#if !definedEx(CONFIG_TAR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_AUTODETECT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_AUTODETECT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_FROM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_FROM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_SELINUX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_SELINUX)
   
   
   
#endif
#if definedEx(CONFIG_UNCOMPRESS)
   
   
   
#endif
#if !definedEx(CONFIG_UNCOMPRESS)
   
   
   
#endif
#if definedEx(CONFIG_UNLZMA)
   
   
   
#endif
#if !definedEx(CONFIG_UNLZMA)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LZMA_FAST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LZMA_FAST)
   
   
   
#endif
#if definedEx(CONFIG_LZMA)
   
   
   
#endif
#if !definedEx(CONFIG_LZMA)
   
   
   
#endif
#if definedEx(CONFIG_UNXZ)
   
   
   
#endif
#if !definedEx(CONFIG_UNXZ)
   
   
   
#endif
#if definedEx(CONFIG_XZ)
   
   
   
#endif
#if !definedEx(CONFIG_XZ)
   
   
   
#endif
#if definedEx(CONFIG_UNZIP)
   
   
   
#endif
#if !definedEx(CONFIG_UNZIP)
   
   
   
#endif
#if definedEx(CONFIG_BASENAME)
   
   
   
#endif
#if !definedEx(CONFIG_BASENAME)
   
   
   
#endif
#if definedEx(CONFIG_CAT)
   
   
   
#endif
#if !definedEx(CONFIG_CAT)
   
   
   
#endif
#if definedEx(CONFIG_DATE)
   
   
   
#endif
#if !definedEx(CONFIG_DATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_ISOFMT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_ISOFMT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_NANO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_NANO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_TEST)
   
   
   
#endif
#if !definedEx(CONFIG_TEST)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TEST_64)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TEST_64)
   
   
   
#endif
#if definedEx(CONFIG_TR)
   
   
   
#endif
#if !definedEx(CONFIG_TR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TR_CLASSES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TR_CLASSES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TR_EQUIV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TR_EQUIV)
   
   
   
#endif
#if definedEx(CONFIG_BASE64)
   
   
   
#endif
#if !definedEx(CONFIG_BASE64)
   
   
   
#endif
#if definedEx(CONFIG_CAL)
   
   
   
#endif
#if !definedEx(CONFIG_CAL)
   
   
   
#endif
#if definedEx(CONFIG_CATV)
   
   
   
#endif
#if !definedEx(CONFIG_CATV)
   
   
   
#endif
#if definedEx(CONFIG_CHGRP)
   
   
   
#endif
#if !definedEx(CONFIG_CHGRP)
   
   
   
#endif
#if definedEx(CONFIG_CHMOD)
   
   
   
#endif
#if !definedEx(CONFIG_CHMOD)
   
   
   
#endif
#if definedEx(CONFIG_CHOWN)
   
   
   
#endif
#if !definedEx(CONFIG_CHOWN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_CHROOT)
   
   
   
#endif
#if !definedEx(CONFIG_CHROOT)
   
   
   
#endif
#if definedEx(CONFIG_CKSUM)
   
   
   
#endif
#if !definedEx(CONFIG_CKSUM)
   
   
   
#endif
#if definedEx(CONFIG_COMM)
   
   
   
#endif
#if !definedEx(CONFIG_COMM)
   
   
   
#endif
#if definedEx(CONFIG_CP)
   
   
   
#endif
#if !definedEx(CONFIG_CP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_CUT)
   
   
   
#endif
#if !definedEx(CONFIG_CUT)
   
   
   
#endif
#if definedEx(CONFIG_DD)
   
   
   
#endif
#if !definedEx(CONFIG_DD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_IBS_OBS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_IBS_OBS)
   
   
   
#endif
#if definedEx(CONFIG_DF)
   
   
   
#endif
#if !definedEx(CONFIG_DF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DF_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DF_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_DIRNAME)
   
   
   
#endif
#if !definedEx(CONFIG_DIRNAME)
   
   
   
#endif
#if definedEx(CONFIG_DOS2UNIX)
   
   
   
#endif
#if !definedEx(CONFIG_DOS2UNIX)
   
   
   
#endif
#if definedEx(CONFIG_UNIX2DOS)
   
   
   
#endif
#if !definedEx(CONFIG_UNIX2DOS)
   
   
   
#endif
#if definedEx(CONFIG_DU)
   
   
   
#endif
#if !definedEx(CONFIG_DU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
   
   
   
#endif
#if definedEx(CONFIG_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_ENV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ENV_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ENV_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_EXPAND)
   
   
   
#endif
#if !definedEx(CONFIG_EXPAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_EXPR)
   
   
   
#endif
#if !definedEx(CONFIG_EXPR)
   
   
   
#endif
#if definedEx(CONFIG_EXPR_MATH_SUPPORT_64)
   
   
   
#endif
#if !definedEx(CONFIG_EXPR_MATH_SUPPORT_64)
   
   
   
#endif
#if definedEx(CONFIG_FALSE)
   
   
   
#endif
#if !definedEx(CONFIG_FALSE)
   
   
   
#endif
#if definedEx(CONFIG_FOLD)
   
   
   
#endif
#if !definedEx(CONFIG_FOLD)
   
   
   
#endif
#if definedEx(CONFIG_FSYNC)
   
   
   
#endif
#if !definedEx(CONFIG_FSYNC)
   
   
   
#endif
#if definedEx(CONFIG_HEAD)
   
   
   
#endif
#if !definedEx(CONFIG_HEAD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_HEAD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_HEAD)
   
   
   
#endif
#if definedEx(CONFIG_HOSTID)
   
   
   
#endif
#if !definedEx(CONFIG_HOSTID)
   
   
   
#endif
#if definedEx(CONFIG_ID)
   
   
   
#endif
#if !definedEx(CONFIG_ID)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_LENGTH)
   
   
   
#endif
#if !definedEx(CONFIG_LENGTH)
   
   
   
#endif
#if definedEx(CONFIG_LN)
   
   
   
#endif
#if !definedEx(CONFIG_LN)
   
   
   
#endif
#if definedEx(CONFIG_LOGNAME)
   
   
   
#endif
#if !definedEx(CONFIG_LOGNAME)
   
   
   
#endif
#if definedEx(CONFIG_LS)
   
   
   
#endif
#if !definedEx(CONFIG_LS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_FILETYPES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_FILETYPES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_FOLLOWLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_FOLLOWLINKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_RECURSIVE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_RECURSIVE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_SORTFILES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_SORTFILES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_TIMESTAMPS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_TIMESTAMPS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_USERNAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_USERNAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_COLOR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_COLOR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
   
   
   
#endif
#if definedEx(CONFIG_MD5SUM)
   
   
   
#endif
#if !definedEx(CONFIG_MD5SUM)
   
   
   
#endif
#if definedEx(CONFIG_MKDIR)
   
   
   
#endif
#if !definedEx(CONFIG_MKDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_MKFIFO)
   
   
   
#endif
#if !definedEx(CONFIG_MKFIFO)
   
   
   
#endif
#if definedEx(CONFIG_MKNOD)
   
   
   
#endif
#if !definedEx(CONFIG_MKNOD)
   
   
   
#endif
#if definedEx(CONFIG_MV)
   
   
   
#endif
#if !definedEx(CONFIG_MV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MV_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MV_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_NICE)
   
   
   
#endif
#if !definedEx(CONFIG_NICE)
   
   
   
#endif
#if definedEx(CONFIG_NOHUP)
   
   
   
#endif
#if !definedEx(CONFIG_NOHUP)
   
   
   
#endif
#if definedEx(CONFIG_OD)
   
   
   
#endif
#if !definedEx(CONFIG_OD)
   
   
   
#endif
#if definedEx(CONFIG_PRINTENV)
   
   
   
#endif
#if !definedEx(CONFIG_PRINTENV)
   
   
   
#endif
#if definedEx(CONFIG_PRINTF)
   
   
   
#endif
#if !definedEx(CONFIG_PRINTF)
   
   
   
#endif
#if definedEx(CONFIG_PWD)
   
   
   
#endif
#if !definedEx(CONFIG_PWD)
   
   
   
#endif
#if definedEx(CONFIG_READLINK)
   
   
   
#endif
#if !definedEx(CONFIG_READLINK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_READLINK_FOLLOW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_READLINK_FOLLOW)
   
   
   
#endif
#if definedEx(CONFIG_REALPATH)
   
   
   
#endif
#if !definedEx(CONFIG_REALPATH)
   
   
   
#endif
#if definedEx(CONFIG_RM)
   
   
   
#endif
#if !definedEx(CONFIG_RM)
   
   
   
#endif
#if definedEx(CONFIG_RMDIR)
   
   
   
#endif
#if !definedEx(CONFIG_RMDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SEQ)
   
   
   
#endif
#if !definedEx(CONFIG_SEQ)
   
   
   
#endif
#if definedEx(CONFIG_SHA1SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA1SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA256SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA256SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA512SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA512SUM)
   
   
   
#endif
#if definedEx(CONFIG_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FLOAT_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FLOAT_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_SORT)
   
   
   
#endif
#if !definedEx(CONFIG_SORT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SORT_BIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SORT_BIG)
   
   
   
#endif
#if definedEx(CONFIG_SPLIT)
   
   
   
#endif
#if !definedEx(CONFIG_SPLIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SPLIT_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SPLIT_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_STAT)
   
   
   
#endif
#if !definedEx(CONFIG_STAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_STAT_FORMAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_STAT_FORMAT)
   
   
   
#endif
#if definedEx(CONFIG_STTY)
   
   
   
#endif
#if !definedEx(CONFIG_STTY)
   
   
   
#endif
#if definedEx(CONFIG_SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SUM)
   
   
   
#endif
#if definedEx(CONFIG_SYNC)
   
   
   
#endif
#if !definedEx(CONFIG_SYNC)
   
   
   
#endif
#if definedEx(CONFIG_TAC)
   
   
   
#endif
#if !definedEx(CONFIG_TAC)
   
   
   
#endif
#if definedEx(CONFIG_TAIL)
   
   
   
#endif
#if !definedEx(CONFIG_TAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_TAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_TAIL)
   
   
   
#endif
#if definedEx(CONFIG_TEE)
   
   
   
#endif
#if !definedEx(CONFIG_TEE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
   
   
   
#endif
#if definedEx(CONFIG_TOUCH)
   
   
   
#endif
#if !definedEx(CONFIG_TOUCH)
   
   
   
#endif
#if definedEx(CONFIG_TRUE)
   
   
   
#endif
#if !definedEx(CONFIG_TRUE)
   
   
   
#endif
#if definedEx(CONFIG_TTY)
   
   
   
#endif
#if !definedEx(CONFIG_TTY)
   
   
   
#endif
#if definedEx(CONFIG_UNAME)
   
   
   
#endif
#if !definedEx(CONFIG_UNAME)
   
   
   
#endif
#if definedEx(CONFIG_UNEXPAND)
   
   
   
#endif
#if !definedEx(CONFIG_UNEXPAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_UNIQ)
   
   
   
#endif
#if !definedEx(CONFIG_UNIQ)
   
   
   
#endif
#if definedEx(CONFIG_USLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_USLEEP)
   
   
   
#endif
#if definedEx(CONFIG_UUDECODE)
   
   
   
#endif
#if !definedEx(CONFIG_UUDECODE)
   
   
   
#endif
#if definedEx(CONFIG_UUENCODE)
   
   
   
#endif
#if !definedEx(CONFIG_UUENCODE)
   
   
   
#endif
#if definedEx(CONFIG_WC)
   
   
   
#endif
#if !definedEx(CONFIG_WC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WC_LARGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WC_LARGE)
   
   
   
#endif
#if definedEx(CONFIG_WHO)
   
   
   
#endif
#if !definedEx(CONFIG_WHO)
   
   
   
#endif
#if definedEx(CONFIG_WHOAMI)
   
   
   
#endif
#if !definedEx(CONFIG_WHOAMI)
   
   
   
#endif
#if definedEx(CONFIG_YES)
   
   
   
#endif
#if !definedEx(CONFIG_YES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PRESERVE_HARDLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PRESERVE_HARDLINKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AUTOWIDTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AUTOWIDTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HUMAN_READABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HUMAN_READABLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
   
   
   
#endif
#if definedEx(CONFIG_CHVT)
   
   
   
#endif
#if !definedEx(CONFIG_CHVT)
   
   
   
#endif
#if definedEx(CONFIG_FGCONSOLE)
   
   
   
#endif
#if !definedEx(CONFIG_FGCONSOLE)
   
   
   
#endif
#if definedEx(CONFIG_CLEAR)
   
   
   
#endif
#if !definedEx(CONFIG_CLEAR)
   
   
   
#endif
#if definedEx(CONFIG_DEALLOCVT)
   
   
   
#endif
#if !definedEx(CONFIG_DEALLOCVT)
   
   
   
#endif
#if definedEx(CONFIG_DUMPKMAP)
   
   
   
#endif
#if !definedEx(CONFIG_DUMPKMAP)
   
   
   
#endif
#if definedEx(CONFIG_KBD_MODE)
   
   
   
#endif
#if !definedEx(CONFIG_KBD_MODE)
   
   
   
#endif
#if definedEx(CONFIG_LOADFONT)
   
   
   
#endif
#if !definedEx(CONFIG_LOADFONT)
   
   
   
#endif
#if definedEx(CONFIG_LOADKMAP)
   
   
   
#endif
#if !definedEx(CONFIG_LOADKMAP)
   
   
   
#endif
#if definedEx(CONFIG_OPENVT)
   
   
   
#endif
#if !definedEx(CONFIG_OPENVT)
   
   
   
#endif
#if definedEx(CONFIG_RESET)
   
   
   
#endif
#if !definedEx(CONFIG_RESET)
   
   
   
#endif
#if definedEx(CONFIG_RESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_RESIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RESIZE_PRINT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RESIZE_PRINT)
   
   
   
#endif
#if definedEx(CONFIG_SETCONSOLE)
   
   
   
#endif
#if !definedEx(CONFIG_SETCONSOLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SETFONT)
   
   
   
#endif
#if !definedEx(CONFIG_SETFONT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
   
   
   
#endif
#if definedEx(CONFIG_DEFAULT_SETFONT_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_DEFAULT_SETFONT_DIR)
   
   
   
#endif
#if definedEx(CONFIG_SETKEYCODES)
   
   
   
#endif
#if !definedEx(CONFIG_SETKEYCODES)
   
   
   
#endif
#if definedEx(CONFIG_SETLOGCONS)
   
   
   
#endif
#if !definedEx(CONFIG_SETLOGCONS)
   
   
   
#endif
#if definedEx(CONFIG_SHOWKEY)
   
   
   
#endif
#if !definedEx(CONFIG_SHOWKEY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOADFONT_PSF2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOADFONT_PSF2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOADFONT_RAW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOADFONT_RAW)
   
   
   
#endif
#if definedEx(CONFIG_MKTEMP)
   
   
   
#endif
#if !definedEx(CONFIG_MKTEMP)
   
   
   
#endif
#if definedEx(CONFIG_PIPE_PROGRESS)
   
   
   
#endif
#if !definedEx(CONFIG_PIPE_PROGRESS)
   
   
   
#endif
#if definedEx(CONFIG_RUN_PARTS)
   
   
   
#endif
#if !definedEx(CONFIG_RUN_PARTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUN_PARTS_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUN_PARTS_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_START_STOP_DAEMON)
   
   
   
#endif
#if !definedEx(CONFIG_START_STOP_DAEMON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_WHICH)
   
   
   
#endif
#if !definedEx(CONFIG_WHICH)
   
   
   
#endif
#if definedEx(CONFIG_AWK)
   
   
   
#endif
#if !definedEx(CONFIG_AWK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AWK_LIBM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AWK_LIBM)
   
   
   
#endif
#if definedEx(CONFIG_CMP)
   
   
   
#endif
#if !definedEx(CONFIG_CMP)
   
   
   
#endif
#if definedEx(CONFIG_DIFF)
   
   
   
#endif
#if !definedEx(CONFIG_DIFF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DIFF_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DIFF_DIR)
   
   
   
#endif
#if definedEx(CONFIG_ED)
   
   
   
#endif
#if !definedEx(CONFIG_ED)
   
   
   
#endif
#if definedEx(CONFIG_PATCH)
   
   
   
#endif
#if !definedEx(CONFIG_PATCH)
   
   
   
#endif
#if definedEx(CONFIG_SED)
   
   
   
#endif
#if !definedEx(CONFIG_SED)
   
   
   
#endif
#if definedEx(CONFIG_VI)
   
   
   
#endif
#if !definedEx(CONFIG_VI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_MAX_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_MAX_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_8BIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_8BIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_COLON)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_COLON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_YANKMARK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_YANKMARK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SEARCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SEARCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_USE_SIGNALS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_USE_SIGNALS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_DOT_CMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_DOT_CMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_READONLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_READONLY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SETOPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SETOPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_WIN_RESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_WIN_RESIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_OPTIMIZE_CURSOR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ALLOW_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ALLOW_EXEC)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_FIND_PRINT0)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PRINT0)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MTIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MMIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MMIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PERM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PERM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_TYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_TYPE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_XDEV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_XDEV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MAXDEPTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MAXDEPTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_NEWER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_NEWER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_INUM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_INUM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_EXEC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_USER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_USER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_NOT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_NOT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_DEPTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_DEPTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PAREN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PAREN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PRUNE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PRUNE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_DELETE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_DELETE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_REGEX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_REGEX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_CONTEXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_CONTEXT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_LINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_LINKS)
   
   
   
#endif
#if definedEx(CONFIG_GREP)
   
   
   
#endif
#if !definedEx(CONFIG_GREP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_CONTEXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_CONTEXT)
   
   
   
#endif
#if definedEx(CONFIG_XARGS)
   
   
   
#endif
#if !definedEx(CONFIG_XARGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
   
   
   
#endif
#if definedEx(CONFIG_BOOTCHARTD)
   
   
   
#endif
#if !definedEx(CONFIG_BOOTCHARTD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
   
   
   
#endif
#if definedEx(CONFIG_INIT)
   
   
   
#endif
#if !definedEx(CONFIG_INIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USE_INITTAB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USE_INITTAB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KILL_REMOVED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KILL_REMOVED)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KILL_DELAY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KILL_DELAY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_SCTTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_SCTTY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EXTRA_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EXTRA_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_COREDUMPS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_COREDUMPS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INITRD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INITRD)
   
   
   
#endif
#if definedEx(CONFIG_INIT_TERMINAL_TYPE)
   
   
   
#endif
#if !definedEx(CONFIG_INIT_TERMINAL_TYPE)
   
   
   
#endif
#if definedEx(CONFIG_HALT)
   
   
   
#endif
#if !definedEx(CONFIG_HALT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CALL_TELINIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CALL_TELINIT)
   
   
   
#endif
#if definedEx(CONFIG_TELINIT_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_TELINIT_PATH)
   
   
   
#endif
#if definedEx(CONFIG_MESG)
   
   
   
#endif
#if !definedEx(CONFIG_MESG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_PWD_GRP)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_PWD_GRP)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_SHADOW)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_SHADOW)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_CRYPT)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_CRYPT)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_CRYPT_SHA)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_CRYPT_SHA)
   
   
   
#endif
#if definedEx(CONFIG_ADDUSER)
   
   
   
#endif
#if !definedEx(CONFIG_ADDUSER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_NAMES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_NAMES)
   
   
   
#endif
#if definedEx(CONFIG_FIRST_SYSTEM_ID)
   
   
   
#endif
#if !definedEx(CONFIG_FIRST_SYSTEM_ID)
   
   
   
#endif
#if definedEx(CONFIG_LAST_SYSTEM_ID)
   
   
   
#endif
#if !definedEx(CONFIG_LAST_SYSTEM_ID)
   
   
   
#endif
#if definedEx(CONFIG_ADDGROUP)
   
   
   
#endif
#if !definedEx(CONFIG_ADDGROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_DELUSER)
   
   
   
#endif
#if !definedEx(CONFIG_DELUSER)
   
   
   
#endif
#if definedEx(CONFIG_DELGROUP)
   
   
   
#endif
#if !definedEx(CONFIG_DELGROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_GETTY)
   
   
   
#endif
#if !definedEx(CONFIG_GETTY)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN)
   
   
   
#endif
#if definedEx(CONFIG_PAM)
   
   
   
#endif
#if !definedEx(CONFIG_PAM)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN_SCRIPTS)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN_SCRIPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NOLOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NOLOGIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SECURETTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SECURETTY)
   
   
   
#endif
#if definedEx(CONFIG_PASSWD)
   
   
   
#endif
#if !definedEx(CONFIG_PASSWD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
   
   
   
#endif
#if definedEx(CONFIG_CRYPTPW)
   
   
   
#endif
#if !definedEx(CONFIG_CRYPTPW)
   
   
   
#endif
#if definedEx(CONFIG_CHPASSWD)
   
   
   
#endif
#if !definedEx(CONFIG_CHPASSWD)
   
   
   
#endif
#if definedEx(CONFIG_SU)
   
   
   
#endif
#if !definedEx(CONFIG_SU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SU_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SU_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SU_CHECKS_SHELLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SU_CHECKS_SHELLS)
   
   
   
#endif
#if definedEx(CONFIG_SULOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_SULOGIN)
   
   
   
#endif
#if definedEx(CONFIG_VLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_VLOCK)
   
   
   
#endif
#if definedEx(CONFIG_CHATTR)
   
   
   
#endif
#if !definedEx(CONFIG_CHATTR)
   
   
   
#endif
#if definedEx(CONFIG_FSCK)
   
   
   
#endif
#if !definedEx(CONFIG_FSCK)
   
   
   
#endif
#if definedEx(CONFIG_LSATTR)
   
   
   
#endif
#if !definedEx(CONFIG_LSATTR)
   
   
   
#endif
#if definedEx(CONFIG_TUNE2FS)
   
   
   
#endif
#if !definedEx(CONFIG_TUNE2FS)
   
   
   
#endif
#if definedEx(CONFIG_MODINFO)
   
   
   
#endif
#if !definedEx(CONFIG_MODINFO)
   
   
   
#endif
#if definedEx(CONFIG_MODPROBE_SMALL)
   
   
   
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
   
   
   
#endif
#if definedEx(CONFIG_INSMOD)
   
   
   
#endif
#if !definedEx(CONFIG_INSMOD)
   
   
   
#endif
#if definedEx(CONFIG_RMMOD)
   
   
   
#endif
#if !definedEx(CONFIG_RMMOD)
   
   
   
#endif
#if definedEx(CONFIG_LSMOD)
   
   
   
#endif
#if !definedEx(CONFIG_LSMOD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
   
   
   
#endif
#if definedEx(CONFIG_MODPROBE)
   
   
   
#endif
#if !definedEx(CONFIG_MODPROBE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_BLACKLIST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_BLACKLIST)
   
   
   
#endif
#if definedEx(CONFIG_DEPMOD)
   
   
   
#endif
#if !definedEx(CONFIG_DEPMOD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_2_4_MODULES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_2_4_MODULES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_TRY_MMAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_TRY_MMAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOADINKMEM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOADINKMEM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODUTILS_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODUTILS_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODUTILS_SYMBOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODUTILS_SYMBOLS)
   
   
   
#endif
#if definedEx(CONFIG_DEFAULT_MODULES_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_DEFAULT_MODULES_DIR)
   
   
   
#endif
#if definedEx(CONFIG_DEFAULT_DEPMOD_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_DEFAULT_DEPMOD_FILE)
   
   
   
#endif
#if definedEx(CONFIG_BLOCKDEV)
   
   
   
#endif
#if !definedEx(CONFIG_BLOCKDEV)
   
   
   
#endif
#if definedEx(CONFIG_REV)
   
   
   
#endif
#if !definedEx(CONFIG_REV)
   
   
   
#endif
#if definedEx(CONFIG_ACPID)
   
   
   
#endif
#if !definedEx(CONFIG_ACPID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ACPID_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ACPID_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_BLKID)
   
   
   
#endif
#if !definedEx(CONFIG_BLKID)
   
   
   
#endif
#if definedEx(CONFIG_DMESG)
   
   
   
#endif
#if !definedEx(CONFIG_DMESG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DMESG_PRETTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DMESG_PRETTY)
   
   
   
#endif
#if definedEx(CONFIG_FBSET)
   
   
   
#endif
#if !definedEx(CONFIG_FBSET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FBSET_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FBSET_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FBSET_READMODE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FBSET_READMODE)
   
   
   
#endif
#if definedEx(CONFIG_FDFLUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FDFLUSH)
   
   
   
#endif
#if definedEx(CONFIG_FDFORMAT)
   
   
   
#endif
#if !definedEx(CONFIG_FDFORMAT)
   
   
   
#endif
#if definedEx(CONFIG_FDISK)
   
   
   
#endif
#if !definedEx(CONFIG_FDISK)
   
   
   
#endif
#if definedEx(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
   
   
   
#endif
#if !definedEx(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FDISK_WRITABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FDISK_WRITABLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AIX_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AIX_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SGI_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SGI_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUN_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUN_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_OSF_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_OSF_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FDISK_ADVANCED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FDISK_ADVANCED)
   
   
   
#endif
#if definedEx(CONFIG_FINDFS)
   
   
   
#endif
#if !definedEx(CONFIG_FINDFS)
   
   
   
#endif
#if definedEx(CONFIG_FLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FREERAMDISK)
   
   
   
#endif
#if !definedEx(CONFIG_FREERAMDISK)
   
   
   
#endif
#if definedEx(CONFIG_FSCK_MINIX)
   
   
   
#endif
#if !definedEx(CONFIG_FSCK_MINIX)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_EXT2)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_EXT2)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_MINIX)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_MINIX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MINIX2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MINIX2)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_REISER)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_REISER)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_VFAT)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_VFAT)
   
   
   
#endif
#if definedEx(CONFIG_GETOPT)
   
   
   
#endif
#if !definedEx(CONFIG_GETOPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GETOPT_LONG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GETOPT_LONG)
   
   
   
#endif
#if definedEx(CONFIG_HEXDUMP)
   
   
   
#endif
#if !definedEx(CONFIG_HEXDUMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HEXDUMP_REVERSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HEXDUMP_REVERSE)
   
   
   
#endif
#if definedEx(CONFIG_HD)
   
   
   
#endif
#if !definedEx(CONFIG_HD)
   
   
   
#endif
#if definedEx(CONFIG_HWCLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_HWCLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
   
   
   
#endif
#if definedEx(CONFIG_IPCRM)
   
   
   
#endif
#if !definedEx(CONFIG_IPCRM)
   
   
   
#endif
#if definedEx(CONFIG_IPCS)
   
   
   
#endif
#if !definedEx(CONFIG_IPCS)
   
   
   
#endif
#if definedEx(CONFIG_LOSETUP)
   
   
   
#endif
#if !definedEx(CONFIG_LOSETUP)
   
   
   
#endif
#if definedEx(CONFIG_LSPCI)
   
   
   
#endif
#if !definedEx(CONFIG_LSPCI)
   
   
   
#endif
#if definedEx(CONFIG_LSUSB)
   
   
   
#endif
#if !definedEx(CONFIG_LSUSB)
   
   
   
#endif
#if definedEx(CONFIG_MDEV)
   
   
   
#endif
#if !definedEx(CONFIG_MDEV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_CONF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_CONF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_RENAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_RENAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_EXEC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
   
   
   
#endif
#if definedEx(CONFIG_MKSWAP)
   
   
   
#endif
#if !definedEx(CONFIG_MKSWAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MKSWAP_UUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MKSWAP_UUID)
   
   
   
#endif
#if definedEx(CONFIG_MORE)
   
   
   
#endif
#if !definedEx(CONFIG_MORE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USE_TERMIOS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USE_TERMIOS)
   
   
   
#endif
#if definedEx(CONFIG_MOUNT)
   
   
   
#endif
#if !definedEx(CONFIG_MOUNT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FAKE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FAKE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_HELPERS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_HELPERS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_NFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_NFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_CIFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_CIFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FLAGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FSTAB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FSTAB)
   
   
   
#endif
#if definedEx(CONFIG_PIVOT_ROOT)
   
   
   
#endif
#if !definedEx(CONFIG_PIVOT_ROOT)
   
   
   
#endif
#if definedEx(CONFIG_RDATE)
   
   
   
#endif
#if !definedEx(CONFIG_RDATE)
   
   
   
#endif
#if definedEx(CONFIG_RDEV)
   
   
   
#endif
#if !definedEx(CONFIG_RDEV)
   
   
   
#endif
#if definedEx(CONFIG_READPROFILE)
   
   
   
#endif
#if !definedEx(CONFIG_READPROFILE)
   
   
   
#endif
#if definedEx(CONFIG_RTCWAKE)
   
   
   
#endif
#if !definedEx(CONFIG_RTCWAKE)
   
   
   
#endif
#if definedEx(CONFIG_SCRIPT)
   
   
   
#endif
#if !definedEx(CONFIG_SCRIPT)
   
   
   
#endif
#if definedEx(CONFIG_SCRIPTREPLAY)
   
   
   
#endif
#if !definedEx(CONFIG_SCRIPTREPLAY)
   
   
   
#endif
#if definedEx(CONFIG_SETARCH)
   
   
   
#endif
#if !definedEx(CONFIG_SETARCH)
   
   
   
#endif
#if definedEx(CONFIG_SWAPONOFF)
   
   
   
#endif
#if !definedEx(CONFIG_SWAPONOFF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SWAPON_PRI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SWAPON_PRI)
   
   
   
#endif
#if definedEx(CONFIG_SWITCH_ROOT)
   
   
   
#endif
#if !definedEx(CONFIG_SWITCH_ROOT)
   
   
   
#endif
#if definedEx(CONFIG_UMOUNT)
   
   
   
#endif
#if !definedEx(CONFIG_UMOUNT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UMOUNT_ALL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UMOUNT_ALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LOOP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LOOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MTAB_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MTAB_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_VOLUMEID)
   
   
   
#endif
#if !definedEx(CONFIG_VOLUMEID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_EXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_EXT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_BTRFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_BTRFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_REISERFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_REISERFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_FAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_FAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_HFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_HFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_JFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_JFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_XFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_XFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_NTFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_NTFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_ISO9660)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_ISO9660)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_UDF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_UDF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LUKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LUKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_CRAMFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_CRAMFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_ROMFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_ROMFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_SYSV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_SYSV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_OCFS2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_OCFS2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
   
   
   
#endif
#if definedEx(CONFIG_CONSPY)
   
   
   
#endif
#if !definedEx(CONFIG_CONSPY)
   
   
   
#endif
#if definedEx(CONFIG_NANDWRITE)
   
   
   
#endif
#if !definedEx(CONFIG_NANDWRITE)
   
   
   
#endif
#if definedEx(CONFIG_UBIATTACH)
   
   
   
#endif
#if !definedEx(CONFIG_UBIATTACH)
   
   
   
#endif
#if definedEx(CONFIG_UBIDETACH)
   
   
   
#endif
#if !definedEx(CONFIG_UBIDETACH)
   
   
   
#endif
#if definedEx(CONFIG_ADJTIMEX)
   
   
   
#endif
#if !definedEx(CONFIG_ADJTIMEX)
   
   
   
#endif
#if definedEx(CONFIG_BBCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_BBCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_BBCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_BBCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_BEEP)
   
   
   
#endif
#if !definedEx(CONFIG_BEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BEEP_FREQ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BEEP_FREQ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BEEP_LENGTH_MS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BEEP_LENGTH_MS)
   
   
   
#endif
#if definedEx(CONFIG_CHAT)
   
   
   
#endif
#if !definedEx(CONFIG_CHAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_NOFAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_NOFAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_TTY_HIFI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_TTY_HIFI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_CLR_ABORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_CLR_ABORT)
   
   
   
#endif
#if definedEx(CONFIG_CHRT)
   
   
   
#endif
#if !definedEx(CONFIG_CHRT)
   
   
   
#endif
#if definedEx(CONFIG_CROND)
   
   
   
#endif
#if !definedEx(CONFIG_CROND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_D)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_D)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_DIR)
   
   
   
#endif
#if definedEx(CONFIG_CRONTAB)
   
   
   
#endif
#if !definedEx(CONFIG_CRONTAB)
   
   
   
#endif
#if definedEx(CONFIG_DC)
   
   
   
#endif
#if !definedEx(CONFIG_DC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DC_LIBM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DC_LIBM)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_MODLOAD)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_MODLOAD)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_FG_NP)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_FG_NP)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEVFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEVFS)
   
   
   
#endif
#if definedEx(CONFIG_DEVMEM)
   
   
   
#endif
#if !definedEx(CONFIG_DEVMEM)
   
   
   
#endif
#if definedEx(CONFIG_EJECT)
   
   
   
#endif
#if !definedEx(CONFIG_EJECT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EJECT_SCSI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EJECT_SCSI)
   
   
   
#endif
#if definedEx(CONFIG_FBSPLASH)
   
   
   
#endif
#if !definedEx(CONFIG_FBSPLASH)
   
   
   
#endif
#if definedEx(CONFIG_FLASHCP)
   
   
   
#endif
#if !definedEx(CONFIG_FLASHCP)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_LOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_LOCK)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_UNLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_UNLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_ERASEALL)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_ERASEALL)
   
   
   
#endif
#if definedEx(CONFIG_IONICE)
   
   
   
#endif
#if !definedEx(CONFIG_IONICE)
   
   
   
#endif
#if definedEx(CONFIG_INOTIFYD)
   
   
   
#endif
#if !definedEx(CONFIG_INOTIFYD)
   
   
   
#endif
#if definedEx(CONFIG_LAST)
   
   
   
#endif
#if !definedEx(CONFIG_LAST)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LAST_SMALL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LAST_SMALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LAST_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LAST_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_LESS)
   
   
   
#endif
#if !definedEx(CONFIG_LESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_MAXLINES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_MAXLINES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_BRACKETS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_BRACKETS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_FLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_FLAGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_MARKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_MARKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_REGEXP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_REGEXP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_WINCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_WINCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_DASHCMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_DASHCMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_LINENUMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_LINENUMS)
   
   
   
#endif
#if definedEx(CONFIG_HDPARM)
   
   
   
#endif
#if !definedEx(CONFIG_HDPARM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
   
   
   
#endif
#if definedEx(CONFIG_MAKEDEVS)
   
   
   
#endif
#if !definedEx(CONFIG_MAKEDEVS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MAKEDEVS_LEAF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MAKEDEVS_LEAF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MAKEDEVS_TABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MAKEDEVS_TABLE)
   
   
   
#endif
#if definedEx(CONFIG_MAN)
   
   
   
#endif
#if !definedEx(CONFIG_MAN)
   
   
   
#endif
#if definedEx(CONFIG_MICROCOM)
   
   
   
#endif
#if !definedEx(CONFIG_MICROCOM)
   
   
   
#endif
#if definedEx(CONFIG_MOUNTPOINT)
   
   
   
#endif
#if !definedEx(CONFIG_MOUNTPOINT)
   
   
   
#endif
#if definedEx(CONFIG_MT)
   
   
   
#endif
#if !definedEx(CONFIG_MT)
   
   
   
#endif
#if definedEx(CONFIG_RAIDAUTORUN)
   
   
   
#endif
#if !definedEx(CONFIG_RAIDAUTORUN)
   
   
   
#endif
#if definedEx(CONFIG_READAHEAD)
   
   
   
#endif
#if !definedEx(CONFIG_READAHEAD)
   
   
   
#endif
#if definedEx(CONFIG_RFKILL)
   
   
   
#endif
#if !definedEx(CONFIG_RFKILL)
   
   
   
#endif
#if definedEx(CONFIG_RUNLEVEL)
   
   
   
#endif
#if !definedEx(CONFIG_RUNLEVEL)
   
   
   
#endif
#if definedEx(CONFIG_RX)
   
   
   
#endif
#if !definedEx(CONFIG_RX)
   
   
   
#endif
#if definedEx(CONFIG_SETSID)
   
   
   
#endif
#if !definedEx(CONFIG_SETSID)
   
   
   
#endif
#if definedEx(CONFIG_STRINGS)
   
   
   
#endif
#if !definedEx(CONFIG_STRINGS)
   
   
   
#endif
#if definedEx(CONFIG_TASKSET)
   
   
   
#endif
#if !definedEx(CONFIG_TASKSET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TASKSET_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TASKSET_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_TIME)
   
   
   
#endif
#if definedEx(CONFIG_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_TTYSIZE)
   
   
   
#endif
#if !definedEx(CONFIG_TTYSIZE)
   
   
   
#endif
#if definedEx(CONFIG_VOLNAME)
   
   
   
#endif
#if !definedEx(CONFIG_VOLNAME)
   
   
   
#endif
#if definedEx(CONFIG_WALL)
   
   
   
#endif
#if !definedEx(CONFIG_WALL)
   
   
   
#endif
#if definedEx(CONFIG_WATCHDOG)
   
   
   
#endif
#if !definedEx(CONFIG_WATCHDOG)
   
   
   
#endif
#if definedEx(CONFIG_NBDCLIENT)
   
   
   
#endif
#if !definedEx(CONFIG_NBDCLIENT)
   
   
   
#endif
#if definedEx(CONFIG_NC)
   
   
   
#endif
#if !definedEx(CONFIG_NC)
   
   
   
#endif
#if definedEx(CONFIG_NC_SERVER)
   
   
   
#endif
#if !definedEx(CONFIG_NC_SERVER)
   
   
   
#endif
#if definedEx(CONFIG_NC_EXTRA)
   
   
   
#endif
#if !definedEx(CONFIG_NC_EXTRA)
   
   
   
#endif
#if definedEx(CONFIG_NC_110_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_NC_110_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPV6)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPV6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UNIX_LOCAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UNIX_LOCAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
   
   
   
#endif
#if definedEx(CONFIG_VERBOSE_RESOLUTION_ERRORS)
   
   
   
#endif
#if !definedEx(CONFIG_VERBOSE_RESOLUTION_ERRORS)
   
   
   
#endif
#if definedEx(CONFIG_ARP)
   
   
   
#endif
#if !definedEx(CONFIG_ARP)
   
   
   
#endif
#if definedEx(CONFIG_ARPING)
   
   
   
#endif
#if !definedEx(CONFIG_ARPING)
   
   
   
#endif
#if definedEx(CONFIG_BRCTL)
   
   
   
#endif
#if !definedEx(CONFIG_BRCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BRCTL_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BRCTL_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BRCTL_SHOW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BRCTL_SHOW)
   
   
   
#endif
#if definedEx(CONFIG_DNSD)
   
   
   
#endif
#if !definedEx(CONFIG_DNSD)
   
   
   
#endif
#if definedEx(CONFIG_ETHER_WAKE)
   
   
   
#endif
#if !definedEx(CONFIG_ETHER_WAKE)
   
   
   
#endif
#if definedEx(CONFIG_FAKEIDENTD)
   
   
   
#endif
#if !definedEx(CONFIG_FAKEIDENTD)
   
   
   
#endif
#if definedEx(CONFIG_FTPD)
   
   
   
#endif
#if !definedEx(CONFIG_FTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTP_WRITE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTP_WRITE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
   
   
   
#endif
#if definedEx(CONFIG_FTPGET)
   
   
   
#endif
#if !definedEx(CONFIG_FTPGET)
   
   
   
#endif
#if definedEx(CONFIG_FTPPUT)
   
   
   
#endif
#if !definedEx(CONFIG_FTPPUT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_HOSTNAME)
   
   
   
#endif
#if !definedEx(CONFIG_HOSTNAME)
   
   
   
#endif
#if definedEx(CONFIG_HTTPD)
   
   
   
#endif
#if !definedEx(CONFIG_HTTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_RANGES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_RANGES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_SETUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_SETUID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_AUTH_MD5)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_AUTH_MD5)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_CGI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_CGI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_PROXY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_PROXY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_GZIP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_GZIP)
   
   
   
#endif
#if definedEx(CONFIG_IFCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_IFCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_STATUS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_STATUS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_SLIP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_SLIP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_HW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_HW)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
   
   
   
#endif
#if definedEx(CONFIG_IFENSLAVE)
   
   
   
#endif
#if !definedEx(CONFIG_IFENSLAVE)
   
   
   
#endif
#if definedEx(CONFIG_IFPLUGD)
   
   
   
#endif
#if !definedEx(CONFIG_IFPLUGD)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN_IFSTATE_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN_IFSTATE_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IPV4)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IPV4)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IPV6)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IPV6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_MAPPING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_MAPPING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
   
   
   
#endif
#if definedEx(CONFIG_INETD)
   
   
   
#endif
#if !definedEx(CONFIG_INETD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_RPC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_RPC)
   
   
   
#endif
#if definedEx(CONFIG_IP)
   
   
   
#endif
#if !definedEx(CONFIG_IP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_ADDRESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_ADDRESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_LINK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_LINK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_TUNNEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_TUNNEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_RULE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_RULE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_SHORT_FORMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_SHORT_FORMS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
   
   
   
#endif
#if definedEx(CONFIG_IPADDR)
   
   
   
#endif
#if !definedEx(CONFIG_IPADDR)
   
   
   
#endif
#if definedEx(CONFIG_IPLINK)
   
   
   
#endif
#if !definedEx(CONFIG_IPLINK)
   
   
   
#endif
#if definedEx(CONFIG_IPROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_IPROUTE)
   
   
   
#endif
#if definedEx(CONFIG_IPTUNNEL)
   
   
   
#endif
#if !definedEx(CONFIG_IPTUNNEL)
   
   
   
#endif
#if definedEx(CONFIG_IPRULE)
   
   
   
#endif
#if !definedEx(CONFIG_IPRULE)
   
   
   
#endif
#if definedEx(CONFIG_IPCALC)
   
   
   
#endif
#if !definedEx(CONFIG_IPCALC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPCALC_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPCALC_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_NAMEIF)
   
   
   
#endif
#if !definedEx(CONFIG_NAMEIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NAMEIF_EXTENDED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NAMEIF_EXTENDED)
   
   
   
#endif
#if definedEx(CONFIG_NETSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_NETSTAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NETSTAT_WIDE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NETSTAT_WIDE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NETSTAT_PRG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NETSTAT_PRG)
   
   
   
#endif
#if definedEx(CONFIG_NSLOOKUP)
   
   
   
#endif
#if !definedEx(CONFIG_NSLOOKUP)
   
   
   
#endif
#if definedEx(CONFIG_NTPD)
   
   
   
#endif
#if !definedEx(CONFIG_NTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NTPD_SERVER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NTPD_SERVER)
   
   
   
#endif
#if definedEx(CONFIG_PING)
   
   
   
#endif
#if !definedEx(CONFIG_PING)
   
   
   
#endif
#if definedEx(CONFIG_PING6)
   
   
   
#endif
#if !definedEx(CONFIG_PING6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_PING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_PING)
   
   
   
#endif
#if definedEx(CONFIG_PSCAN)
   
   
   
#endif
#if !definedEx(CONFIG_PSCAN)
   
   
   
#endif
#if definedEx(CONFIG_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_SLATTACH)
   
   
   
#endif
#if !definedEx(CONFIG_SLATTACH)
   
   
   
#endif
#if definedEx(CONFIG_TCPSVD)
   
   
   
#endif
#if !definedEx(CONFIG_TCPSVD)
   
   
   
#endif
#if definedEx(CONFIG_TELNET)
   
   
   
#endif
#if !definedEx(CONFIG_TELNET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNET_TTYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNET_TTYPE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNET_AUTOLOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNET_AUTOLOGIN)
   
   
   
#endif
#if definedEx(CONFIG_TELNETD)
   
   
   
#endif
#if !definedEx(CONFIG_TELNETD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNETD_STANDALONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNETD_STANDALONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNETD_INETD_WAIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNETD_INETD_WAIT)
   
   
   
#endif
#if definedEx(CONFIG_TFTP)
   
   
   
#endif
#if !definedEx(CONFIG_TFTP)
   
   
   
#endif
#if definedEx(CONFIG_TFTPD)
   
   
   
#endif
#if !definedEx(CONFIG_TFTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_GET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_GET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_PUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_PUT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_BLOCKSIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_BLOCKSIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
   
   
   
#endif
#if definedEx(CONFIG_TFTP_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_TFTP_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_TRACEROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_TRACEROUTE)
   
   
   
#endif
#if definedEx(CONFIG_TRACEROUTE6)
   
   
   
#endif
#if !definedEx(CONFIG_TRACEROUTE6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
   
   
   
#endif
#if definedEx(CONFIG_TUNCTL)
   
   
   
#endif
#if !definedEx(CONFIG_TUNCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TUNCTL_UG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TUNCTL_UG)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPD)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPD)
   
   
   
#endif
#if definedEx(CONFIG_DHCPRELAY)
   
   
   
#endif
#if !definedEx(CONFIG_DHCPRELAY)
   
   
   
#endif
#if definedEx(CONFIG_DUMPLEASES)
   
   
   
#endif
#if !definedEx(CONFIG_DUMPLEASES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
   
   
   
#endif
#if definedEx(CONFIG_DHCPD_LEASES_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_DHCPD_LEASES_FILE)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPC_ARPING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPC_ARPING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_PORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_PORT)
   
   
   
#endif
#if definedEx(CONFIG_UDHCP_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCP_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_RFC3397)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_RFC3397)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC_DEFAULT_SCRIPT)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC_DEFAULT_SCRIPT)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC_SLACK_FOR_BUGGY_SERVERS)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_UDPSVD)
   
   
   
#endif
#if !definedEx(CONFIG_UDPSVD)
   
   
   
#endif
#if definedEx(CONFIG_VCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_VCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_WGET)
   
   
   
#endif
#if !definedEx(CONFIG_WGET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WGET_STATUSBAR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_STATUSBAR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WGET_AUTHENTICATION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_AUTHENTICATION)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_WGET_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_ZCIP)
   
   
   
#endif
#if !definedEx(CONFIG_ZCIP)
   
   
   
#endif
#if definedEx(CONFIG_LPD)
   
   
   
#endif
#if !definedEx(CONFIG_LPD)
   
   
   
#endif
#if definedEx(CONFIG_LPR)
   
   
   
#endif
#if !definedEx(CONFIG_LPR)
   
   
   
#endif
#if definedEx(CONFIG_LPQ)
   
   
   
#endif
#if !definedEx(CONFIG_LPQ)
   
   
   
#endif
#if definedEx(CONFIG_MAKEMIME)
   
   
   
#endif
#if !definedEx(CONFIG_MAKEMIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MIME_CHARSET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MIME_CHARSET)
   
   
   
#endif
#if definedEx(CONFIG_POPMAILDIR)
   
   
   
#endif
#if !definedEx(CONFIG_POPMAILDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
   
   
   
#endif
#if definedEx(CONFIG_REFORMIME)
   
   
   
#endif
#if !definedEx(CONFIG_REFORMIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REFORMIME_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REFORMIME_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_SENDMAIL)
   
   
   
#endif
#if !definedEx(CONFIG_SENDMAIL)
   
   
   
#endif
#if definedEx(CONFIG_IOSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_IOSTAT)
   
   
   
#endif
#if definedEx(CONFIG_MPSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_MPSTAT)
   
   
   
#endif
#if definedEx(CONFIG_PMAP)
   
   
   
#endif
#if !definedEx(CONFIG_PMAP)
   
   
   
#endif
#if definedEx(CONFIG_SMEMCAP)
   
   
   
#endif
#if !definedEx(CONFIG_SMEMCAP)
   
   
   
#endif
#if definedEx(CONFIG_FREE)
   
   
   
#endif
#if !definedEx(CONFIG_FREE)
   
   
   
#endif
#if definedEx(CONFIG_FUSER)
   
   
   
#endif
#if !definedEx(CONFIG_FUSER)
   
   
   
#endif
#if definedEx(CONFIG_KILL)
   
   
   
#endif
#if !definedEx(CONFIG_KILL)
   
   
   
#endif
#if definedEx(CONFIG_KILLALL)
   
   
   
#endif
#if !definedEx(CONFIG_KILLALL)
   
   
   
#endif
#if definedEx(CONFIG_KILLALL5)
   
   
   
#endif
#if !definedEx(CONFIG_KILLALL5)
   
   
   
#endif
#if definedEx(CONFIG_NMETER)
   
   
   
#endif
#if !definedEx(CONFIG_NMETER)
   
   
   
#endif
#if definedEx(CONFIG_PGREP)
   
   
   
#endif
#if !definedEx(CONFIG_PGREP)
   
   
   
#endif
#if definedEx(CONFIG_PIDOF)
   
   
   
#endif
#if !definedEx(CONFIG_PIDOF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDOF_SINGLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDOF_SINGLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDOF_OMIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDOF_OMIT)
   
   
   
#endif
#if definedEx(CONFIG_PKILL)
   
   
   
#endif
#if !definedEx(CONFIG_PKILL)
   
   
   
#endif
#if definedEx(CONFIG_PS)
   
   
   
#endif
#if !definedEx(CONFIG_PS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_WIDE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_WIDE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
   
   
   
#endif
#if definedEx(CONFIG_RENICE)
   
   
   
#endif
#if !definedEx(CONFIG_RENICE)
   
   
   
#endif
#if definedEx(CONFIG_BB_SYSCTL)
   
   
   
#endif
#if !definedEx(CONFIG_BB_SYSCTL)
   
   
   
#endif
#if definedEx(CONFIG_TOP)
   
   
   
#endif
#if !definedEx(CONFIG_TOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_SMP_CPU)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_CPU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_DECIMALS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_DECIMALS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOPMEM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOPMEM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHOW_THREADS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHOW_THREADS)
   
   
   
#endif
#if definedEx(CONFIG_UPTIME)
   
   
   
#endif
#if !definedEx(CONFIG_UPTIME)
   
   
   
#endif
#if definedEx(CONFIG_WATCH)
   
   
   
#endif
#if !definedEx(CONFIG_WATCH)
   
   
   
#endif
#if definedEx(CONFIG_RUNSV)
   
   
   
#endif
#if !definedEx(CONFIG_RUNSV)
   
   
   
#endif
#if definedEx(CONFIG_RUNSVDIR)
   
   
   
#endif
#if !definedEx(CONFIG_RUNSVDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUNSVDIR_LOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUNSVDIR_LOG)
   
   
   
#endif
#if definedEx(CONFIG_SV)
   
   
   
#endif
#if !definedEx(CONFIG_SV)
   
   
   
#endif
#if definedEx(CONFIG_SV_DEFAULT_SERVICE_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_SV_DEFAULT_SERVICE_DIR)
   
   
   
#endif
#if definedEx(CONFIG_SVLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_SVLOGD)
   
   
   
#endif
#if definedEx(CONFIG_CHPST)
   
   
   
#endif
#if !definedEx(CONFIG_CHPST)
   
   
   
#endif
#if definedEx(CONFIG_SETUIDGID)
   
   
   
#endif
#if !definedEx(CONFIG_SETUIDGID)
   
   
   
#endif
#if definedEx(CONFIG_ENVUIDGID)
   
   
   
#endif
#if !definedEx(CONFIG_ENVUIDGID)
   
   
   
#endif
#if definedEx(CONFIG_ENVDIR)
   
   
   
#endif
#if !definedEx(CONFIG_ENVDIR)
   
   
   
#endif
#if definedEx(CONFIG_SOFTLIMIT)
   
   
   
#endif
#if !definedEx(CONFIG_SOFTLIMIT)
   
   
   
#endif
#if definedEx(CONFIG_CHCON)
   
   
   
#endif
#if !definedEx(CONFIG_CHCON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_GETENFORCE)
   
   
   
#endif
#if !definedEx(CONFIG_GETENFORCE)
   
   
   
#endif
#if definedEx(CONFIG_GETSEBOOL)
   
   
   
#endif
#if !definedEx(CONFIG_GETSEBOOL)
   
   
   
#endif
#if definedEx(CONFIG_LOAD_POLICY)
   
   
   
#endif
#if !definedEx(CONFIG_LOAD_POLICY)
   
   
   
#endif
#if definedEx(CONFIG_MATCHPATHCON)
   
   
   
#endif
#if !definedEx(CONFIG_MATCHPATHCON)
   
   
   
#endif
#if definedEx(CONFIG_RESTORECON)
   
   
   
#endif
#if !definedEx(CONFIG_RESTORECON)
   
   
   
#endif
#if definedEx(CONFIG_RUNCON)
   
   
   
#endif
#if !definedEx(CONFIG_RUNCON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SELINUXENABLED)
   
   
   
#endif
#if !definedEx(CONFIG_SELINUXENABLED)
   
   
   
#endif
#if definedEx(CONFIG_SETENFORCE)
   
   
   
#endif
#if !definedEx(CONFIG_SETENFORCE)
   
   
   
#endif
#if definedEx(CONFIG_SETFILES)
   
   
   
#endif
#if !definedEx(CONFIG_SETFILES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
   
   
   
#endif
#if definedEx(CONFIG_SETSEBOOL)
   
   
   
#endif
#if !definedEx(CONFIG_SETSEBOOL)
   
   
   
#endif
#if definedEx(CONFIG_SESTATUS)
   
   
   
#endif
#if !definedEx(CONFIG_SESTATUS)
   
   
   
#endif
#if definedEx(CONFIG_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_ASH)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BASH_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BASH_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_JOB_CONTROL)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_JOB_CONTROL)
   
   
   
#endif
#if definedEx(CONFIG_ASH_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_ASH_GETOPTS)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_GETOPTS)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_PRINTF)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_PRINTF)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_TEST)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_TEST)
   
   
   
#endif
#if definedEx(CONFIG_ASH_CMDCMD)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_CMDCMD)
   
   
   
#endif
#if definedEx(CONFIG_ASH_MAIL)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_MAIL)
   
   
   
#endif
#if definedEx(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_ASH_RANDOM_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_RANDOM_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_EXPAND_PRMT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_EXPAND_PRMT)
   
   
   
#endif
#if definedEx(CONFIG_CTTYHACK)
   
   
   
#endif
#if !definedEx(CONFIG_CTTYHACK)
   
   
   
#endif
#if definedEx(CONFIG_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_BASH_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_BASH_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_HELP)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_HELP)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_INTERACTIVE)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_INTERACTIVE)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_SAVEHISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_SAVEHISTORY)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_JOB)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_JOB)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_TICK)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_TICK)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_IF)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_IF)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_LOOPS)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_LOOPS)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_CASE)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_CASE)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_FUNCTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_FUNCTIONS)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_LOCAL)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_LOCAL)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_RANDOM_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_RANDOM_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_EXPORT_N)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_EXPORT_N)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_MODE_X)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_MODE_X)
   
   
   
#endif
#if definedEx(CONFIG_MSH)
   
   
   
#endif
#if !definedEx(CONFIG_MSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_ASH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_NONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_NONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_ASH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_NONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_NONE)
   
   
   
#endif
#if definedEx(CONFIG_SH_MATH_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_SH_MATH_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_SH_MATH_SUPPORT_64)
   
   
   
#endif
#if !definedEx(CONFIG_SH_MATH_SUPPORT_64)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_EXTRA_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_EXTRA_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_STANDALONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_STANDALONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_NOFORK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_NOFORK)
   
   
   
#endif
#if definedEx(CONFIG_SYSLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_SYSLOGD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ROTATE_LOGFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ROTATE_LOGFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REMOTE_LOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REMOTE_LOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOGD_DUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOGD_DUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPC_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPC_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPC_SYSLOG_BUFFER_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_LOGREAD)
   
   
   
#endif
#if !definedEx(CONFIG_LOGREAD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
   
   
   
#endif
#if definedEx(CONFIG_KLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_KLOGD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KLOGD_KLOGCTL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KLOGD_KLOGCTL)
   
   
   
#endif
#if definedEx(CONFIG_LOGGER)
   
   
   
#endif
#if !definedEx(CONFIG_LOGGER)
   
   
   
#endif
#line 1 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_dec_stream.c" 1
/*
 * .xz Stream decoder
 *
 * Author: Lasse Collin <lasse.collin@tukaani.org>
 *
 * This file has been put into the public domain.
 * You can do whatever you want with this file.
 */

#line 1 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_private.h" 1
/*
 * Private includes and definitions
 *
 * Author: Lasse Collin <lasse.collin@tukaani.org>
 *
 * This file has been put into the public domain.
 * You can do whatever you want with this file.
 */





	










	





















 	/*
	 * For userspace builds, use a separate header to define the required
	 * macros and functions. This makes it easier to adapt the code into
	 * different environments and avoids clutter in the Linux kernel tree.
	 */
#line 1 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_config.h" 1
/*
 * Private includes and definitions for userspace use of XZ Embedded
 *
 * Author: Lasse Collin <lasse.collin@tukaani.org>
 *
 * This file has been put into the public domain.
 * You can do whatever you want with this file.
 */




/* Uncomment as needed to enable BCJ filter decoders. */
/* #define XZ_DEC_X86 */
/* #define XZ_DEC_POWERPC */
/* #define XZ_DEC_IA64 */
/* #define XZ_DEC_ARM */
/* #define XZ_DEC_ARMTHUMB */
/* #define XZ_DEC_SPARC */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdbool.h" 1
/* Copyright (C) 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.16  Boolean type and values  <stdbool.h>
 */









 






/* Signal that all the definitions are present.  */



#line 23 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_config.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* These are defined by the user (or the compiler)
   to specify the desired environment:

   __STRICT_ANSI__	ISO Standard C.
   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.
   _POSIX_SOURCE	IEEE Std 1003.1.
   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if >=2 add IEEE Std 1003.2;
			if >=199309L, add IEEE Std 1003.1b-1993;
			if >=199506L, add IEEE Std 1003.1c-1995;
			if >=200112L, all of IEEE 1003.1-2004
			if >=200809L, all of IEEE 1003.1-2008
   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if
			Single Unix conformance is wanted, to 600 for the
			sixth revision, to 700 for the seventh revision.
   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.
   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.
   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.
   _FILE_OFFSET_BITS=N	Select default filesystem interface.
   _BSD_SOURCE		ISO C, POSIX, and 4.3BSD things.
   _SVID_SOURCE		ISO C, POSIX, and SVID things.
   _ATFILE_SOURCE	Additional *at interfaces.
   _GNU_SOURCE		All of the above, plus GNU extensions.
   _REENTRANT		Select additionally reentrant object.
   _THREAD_SAFE		Same as _REENTRANT, often used by other systems.
   _FORTIFY_SOURCE	If set to numeric value > 0 additional security
			measures are defined, according to level.

   The `-ansi' switch to the GNU C compiler defines __STRICT_ANSI__.
   If none of these are defined, the default is to have _SVID_SOURCE,
   _BSD_SOURCE, and _POSIX_SOURCE set to one and _POSIX_C_SOURCE set to
   200112L.  If more than one of these are defined, they accumulate.
   For example __STRICT_ANSI__, _POSIX_SOURCE and _POSIX_C_SOURCE
   together give you ISO C, 1003.1, and 1003.2, but nothing else.

   These are defined by this file and are used by the
   header files to decide what to declare or define:

   __USE_ISOC99		Define ISO C99 things.
   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.
   __USE_POSIX		Define IEEE Std 1003.1 things.
   __USE_POSIX2		Define IEEE Std 1003.2 things.
   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.
   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.
   __USE_XOPEN		Define XPG things.
   __USE_XOPEN_EXTENDED	Define X/Open Unix things.
   __USE_UNIX98		Define Single Unix V2 things.
   __USE_XOPEN2K        Define XPG6 things.
   __USE_XOPEN2KXSI     Define XPG6 XSI things.
   __USE_XOPEN2K8XSI    Define XPG7 XSI things.
   __USE_LARGEFILE	Define correct standard I/O things.
   __USE_LARGEFILE64	Define LFS things with separate names.
   __USE_FILE_OFFSET64	Define 64bit interface as default.
   __USE_BSD		Define 4.3BSD things.
   __USE_SVID		Define SVID things.
   __USE_MISC		Define things common to BSD and System V Unix.
   __USE_ATFILE		Define *at interfaces and AT_* constants for them.
   __USE_GNU		Define GNU extensions.
   __USE_REENTRANT	Define reentrant/thread-safe *_r functions.
   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.
   __FAVOR_BSD		Favor 4.3BSD things in cases of conflict.

   The macros `__GNU_LIBRARY__', `__GLIBC__', and `__GLIBC_MINOR__' are
   defined by this file unconditionally.  `__GNU_LIBRARY__' is provided
   only for compatibility.  All new code should use the other symbols
   to test for features.

   All macros listed above as possibly being defined by this file are
   explicitly undefined if they are not explicitly defined.
   Feature-test macros that are not defined by the user or compiler
   but are implied by the other feature-test macros defined (or by the
   lack of any definitions) are defined by the file.  */


/* Undefine everything, so we get a clean slate.  */


























/* Suppress kernel-name space pollution unless user expressedly asks
   for it.  */



/* Always use ISO C things.  */


/* Convenience macros to test the versions of glibc and gcc.
   Use them like this:
   #if __GNUC_PREREQ (2,8)
   ... code requiring gcc 2.8 or later ...
   #endif
   Note - they won't work for gcc1 or glibc1, since the _MINOR macros
   were not defined then.  */



 

/* If _BSD_SOURCE was defined by the user, favor BSD over POSIX.  */



/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */






















/* If nothing (other than _GNU_SOURCE) is defined,
   define _BSD_SOURCE and _SVID_SOURCE.  */




/* This is to enable the ISO C99 extension.  Also recognize the old macro
   which was used prior to the standard acceptance.  This macro will
   eventually go away and the features enabled by default once the ISO C99
   standard is widely adopted.  */



/* This is to enable the ISO C90 Amendment 1:1995 extension.  */



/* If none of the ANSI/POSIX macros are defined, use POSIX.1 and POSIX.2
   (and IEEE Std 1003.1b-1993 unless _XOPEN_SOURCE is defined).  */




 
 
 














































 





































 
 

 

/* We do support the IEC 559 math functionality, real and complex.  */



/* wchar_t uses ISO 10646-1 (2nd ed., published 2000-09-15) / Unicode 3.1.  */


/* This macro indicates that the installed library is the GNU C Library.
   For historic reasons the value now is 6 and this will stay from now
   on.  The use of this variable is deprecated.  Use __GLIBC__ and
   __GLIBC_MINOR__ now (see below) when you want to test for a specific
   GNU C library version and use the values in <gnu/lib-names.h> to get
   the sonames of the shared libraries.  */



/* Major and minor version number of the GNU C library package.  Use
   these macros to test for features in specific releases.  */






/* Decide whether a compiler supports the long long datatypes.  */



/* This is here only because every header file already includes this one.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/cdefs.h" 1
/* Copyright (C) 1992-2001, 2002, 2004, 2005, 2006, 2007, 2009
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* We are almost always included from features.h. */



/* The GNU libc does not support any K&R compilers or the traditional mode
   of ISO C compilers anymore.  Check for some of the combinations not
   anymore supported.  */



/* Some user header file might have defined this before.  */




/* GCC can always grok prototypes.  For C++ programs we add throw()
   to help it optimize the function calls.  But this works only with
   gcc 2.8.x and egcs.  For gcc 3.2 and up we even mark C functions
   as non-throwing using a function attribute since programs can use
   the -fexceptions options for C code as well.  */



 


 



 









/* These two macros are not used in glibc anymore.  They are kept here
   only because some other projects expect the macros to be defined.  */



/* For these things, GCC behaves the ANSI way normally,
   and the non-ANSI way under -traditional.  */




/* This is not a typedef so `const __ptr_t' does the right thing.  */




/* C++ needs to know that types and declarations are C, not C++.  */



 


/* The standard library needs the functions from the ISO C90 standard
   in the std namespace.  At the same time we want to be safe for
   future changes and we include the ISO C99 code in the non-standard
   namespace __c99.  The C++ wrapper header take case of adding the
   definitions to the global namespace.  */







 /* For compatibility we do not add the declarations into any
   namespace.  They will end up in the global namespace which is what
   old code expects.  */







/* Support for bounded pointers.  */





/* Fortify support.  */









 



/* Support for flexible arrays.  */

/* GCC 2.97 supports C99 flexible array members.  */

 

 

 




/* __asm__ ("xyz") is used throughout the headers to rename functions
   at the assembly language level.  This is wrapped by the __REDIRECT
   macro, in order to support compilers that can do this some other
   way.  When compilers don't support asm-names at all, we have to do
   preprocessor tricks instead (which don't have exactly the right
   semantics, but it's the best we can do).

   Example:
   int __REDIRECT(setpgrp, (__pid_t pid, __pid_t pgrp), setpgid); */






 





/*
#elif __SOME_OTHER_COMPILER__

# define __REDIRECT(name, proto, alias) name proto; 	_Pragma("let " #name " = " #alias)

*/

/* GCC has various useful declarations that can be made with the
   `__attribute__' syntax.  All of the ways we use this do fine if
   they are omitted for compilers that don't understand it. */



/* At some point during the gcc 2.96 development the `malloc' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */


 

/* At some point during the gcc 2.96 development the `pure' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */


 

/* At some point during the gcc 3.1 development the `used' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */



 


/* gcc allows marking deprecated functions.  */


 

/* At some point during the gcc 2.8 development the `format_arg' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.
   If several `format_arg' attributes are given for the same function, in
   gcc-3.0 and older, all but the last one are ignored.  In newer gccs,
   all designated arguments are considered.  */


 

/* At some point during the gcc 2.97 development the `strfmon' format
   attribute for functions was introduced.  We don't want to use it
   unconditionally (although this would be possible) since it
   generates warnings.  */



 

/* The nonull function attribute allows to mark pointer parameters which
   must not be NULL.  */


 

/* If fortification mode, we warn about unused results of certain
   function calls which can lead to problems.  */






 




/* Forces a function to be always inlined.  */


 

/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  */






 


 



 



/* GCC 4.3 and above allow passing all anonymous arguments of an
   __extern_always_inline function to some other vararg function.  */




/* It is possible to compile containing GCC extensions even if GCC is
   run in pedantic mode if the uses are carefully marked using the
   `__extension__' keyword.  But this is not generally available before
   version 2.8.  */



/* __restrict is known in EGCS 1.2 and above. */



/* ISO C99 also allows to declare arrays as non-overlapping.  The syntax is
     array_name[restrict]
   GCC 3.1 supports this.  */


 

 

 




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 367 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/cdefs.h" 2

































#line 363 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 2

/* If we don't have __REDIRECT, prototypes will be missing if
   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */





/* Decide whether we can define 'extern inline' functions in headers.  */



/* This is here only because every header file already includes this one.
   Get the definitions of all the appropriate `__stub_FUNCTION' symbols.
   <gnu/stubs.h> contains `#define __stub_FUNCTION' when FUNCTION is a stub
   that will always return failure (and set errno to ENOSYS).  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs.h" 1
/* This file selects the right generated file of `__stub_FUNCTION' macros
   based on the architecture being compiled for.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 6 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs.h" 2



 #line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs-64.h" 1
/* This file is automatically generated.
   It defines a symbol `__stub_FUNCTION' for each function
   in the C library which is a stub, meaning it will fail
   every time called, usually setting errno to ENOSYS.  */


 















#line 11 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/gnu/stubs.h" 2
 

#line 387 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 2



#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2

/* Get size_t, wchar_t and NULL from <stddef.h>.  */





#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





typedef long unsigned int size_t;























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */


































/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, "Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type." */

















/* FreeBSD 5 can't be handled well using "traditional" logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */














typedef int wchar_t;































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 35 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2







/* XPG requires a few symbols from <sys/wait.h> being defined.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/waitflags.h" 1
/* Definitions of flag bits for `waitpid' et al.
   Copyright (C) 1992,1996,1997,2000,2004,2005 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Bits in the third argument to `waitpid'.  */



/* Bits in the fourth argument to `waitid'.  */








#line 44 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/waitstatus.h" 1
/* Definitions of status bits for `wait' et al.
   Copyright (C) 1992,1994,1996,1997,2000,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Everything extant so far uses these same bits.  */


/* If WIFEXITED(STATUS), the low-order 8 bits of the status.  */


/* If WIFSIGNALED(STATUS), the terminating signal.  */


/* If WIFSTOPPED(STATUS), the signal that stopped the child.  */


/* Nonzero if STATUS indicates normal termination.  */


/* Nonzero if STATUS indicates termination by a signal.  */



/* Nonzero if STATUS indicates the child is stopped.  */


/* Nonzero if STATUS indicates the child continued after a stop.  We only
   define this if <bits/waitflags.h> provides the WCONTINUED flag bit.  */



/* Nonzero if STATUS indicates the child dumped core.  */


/* Macros for constructing status values.  */







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 2

/* Definitions for byte order, according to significance of bytes,
   from low addresses to high addresses.  The value is what you get by
   putting '4' in the most significant byte, '3' in the second most
   significant byte, '2' in the second least significant byte, and '1'
   in the least significant byte, and then writing down one digit for
   each byte, starting with the byte at the lowest address at the left,
   and proceeding to the byte with the highest address at the right.  */





/* This file defines `__BYTE_ORDER' for the particular machine.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/endian.h" 1
/* x86_64 is little-endian.  */





#line 39 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 2

/* Some machines may need to use a different endianness for floating point
   values.  */











 


/* Conversion interfaces.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/byteswap.h" 1
/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997, 1998, 2000, 2002, 2003, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/byteswap.h" 2

/* Swap bytes in 16 bit value.  */















 




/* Swap bytes in 32 bit value.  */






/* To swap the bytes in a word the i486 processors and up provide the
   `bswap' opcode.  On i386 we have to use three instructions.  */








 













 




/* Swap bytes in 64 bit value.  */



















 















#line 63 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 2
















 
















#line 67 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/waitstatus.h" 2

union wait
  {
    int w_status;
    struct
      {

	unsigned int __w_termsig:7; /* Terminating signal.  */
	unsigned int __w_coredump:1; /* Set if dumped core.  */
	unsigned int __w_retcode:8; /* Return code if exited normally.  */
	unsigned int:16;


	
	
	
	

      } __wait_terminated;
    struct
      {

	unsigned int __w_stopval:8; /* W_STOPPED if stopped.  */
	unsigned int __w_stopsig:8; /* Stopping signal.  */
	unsigned int:16;


	
	
	

      } __wait_stopped;
  };








#line 45 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2


/* Lots of hair to allow traditional BSD use of `union wait'
   as well as POSIX.1 use of `int' for the status word.  */





 

/* This is the type of the argument to `wait'.  The funky union
   causes redeclarations with either `int *' or `union wait *' to be
   allowed without complaint.  __WAIT_STATUS_DEFN is the type used in
   the actual function definitions.  */




 /* This works in GCC 2.6.1 and later.  */
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));


 




/* Define the macros <sys/wait.h> also would define this way.  */











/* Returned by `div'.  */
typedef struct
  {
    int quot;			/* Quotient.  */
    int rem;			/* Remainder.  */
  } div_t;

/* Returned by `ldiv'.  */

typedef struct
  {
    long int quot;		/* Quotient.  */
    long int rem;		/* Remainder.  */
  } ldiv_t;






/* Returned by `lldiv'.  */
__extension__ typedef struct
  {
    long long int quot;		/* Quotient.  */
    long long int rem;		/* Remainder.  */
  } lldiv_t;



/* The largest number rand will return (same as INT_MAX).  */



/* We define these the same for all machines.
   Changes from this to the outside world should be done in `_exit'.  */




/* Maximum length of a multibyte character in the current locale.  */

extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;



/* Convert a string to a floating-point number.  */
extern double atof (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an integer.  */
extern int atoi (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to a long integer.  */
extern long int atol (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




/* Convert a string to a long long integer.  */
__extension__ extern long long int atoll (__const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a floating-point number.  */
extern double strtod (__const char *__restrict __nptr,
		      char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




/* Likewise for `float' and `long double' sizes of floating-point numbers.  */
extern float strtof (__const char *__restrict __nptr,
		     char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern long double strtold (__const char *__restrict __nptr,
			    char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a long integer.  */
extern long int strtol (__const char *__restrict __nptr,
			char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned long integer.  */
extern unsigned long int strtoul (__const char *__restrict __nptr,
				  char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a quadword integer.  */
__extension__
extern long long int strtoq (__const char *__restrict __nptr,
			     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned quadword integer.  */
__extension__
extern unsigned long long int strtouq (__const char *__restrict __nptr,
				       char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a quadword integer.  */
__extension__
extern long long int strtoll (__const char *__restrict __nptr,
			      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned quadword integer.  */
__extension__
extern unsigned long long int strtoull (__const char *__restrict __nptr,
					char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;





















			  
			  


				    
				    
     



				
				
     



					  
					  
     


			
     


		       
     


			      
			      
     






  




  




  








  





/* Convert N to base 64 using the digits "./0-9A-Za-z", least-significant
   digit first.  Returns a pointer to static storage overwritten by the
   next call.  */
extern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;

/* Read a number from a string S in base 64 as above.  */
extern long int a64l (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2



#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 2

/* Convenience types.  */
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;

/* Fixed-size types, underlying types depend on word size and compiler.  */
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;
 


/* quad_t is also 64 bits.  */

typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
 

 

  



  


/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE
   macros for each of the OS types we define below.  The definitions
   of those macros must use the following macros for underlying types.
   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned
   variants of each of the following integer types on this machine.

	16		-- "natural" 16-bit type (always short)
	32		-- "natural" 32-bit type (always int)
	64		-- "natural" 64-bit type (long or long long)
	LONG32		-- 32-bit type, traditionally long
	QUAD		-- 64-bit type, always long long
	WORD		-- natural type of __WORDSIZE bits (int or long)
	LONGWORD	-- type of __WORDSIZE bits, traditionally long

   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the
   conventional uses of `long' or `long long' type modifiers match the
   types we define, even when a less-adorned type would be the same size.
   This matters for (somewhat) portably writing printf/scanf formats for
   these types, where using the appropriate l or ll format modifiers can
   make the typedefs and the formats match up across all GNU platforms.  If
   we used `long' when it's 64 bits where `long long' is expected, then the
   compiler would warn about the formats not matching the argument types,
   and the programmer changing them to shut up the compiler would break the
   program's portability.

   Here we assume what is presently the case in all the GCC configurations
   we support: long long is always 64 bits, long is always word/address size,
   and int is always 32 bits.  */



















 







/* No need to mark the typedef with __extension__.   */

 

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/typesizes.h" 1
/* bits/typesizes.h -- underlying types for *_t.  Generic version.
   Copyright (C) 2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







/* See <bits/types.h> for the meaning of these macros.  This file exists so
   that <bits/types.h> need not vary across different GNU platforms.  */

































/* Number of descriptors that can fit in an `fd_set'.  */




#line 133 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 2


typedef unsigned long int __dev_t;	/* Type of device numbers.  */
typedef unsigned int __uid_t;	/* Type of user identifications.  */
typedef unsigned int __gid_t;	/* Type of group identifications.  */
typedef unsigned long int __ino_t;	/* Type of file serial numbers.  */
typedef unsigned long int __ino64_t;	/* Type of file serial numbers (LFS).*/
typedef unsigned int __mode_t;	/* Type of file attribute bitmasks.  */
typedef unsigned long int __nlink_t;	/* Type of file link counts.  */
typedef long int __off_t;	/* Type of file sizes and offsets.  */
typedef long int __off64_t;	/* Type of file sizes and offsets (LFS).  */
typedef int __pid_t;	/* Type of process identifications.  */
typedef struct { int __val[2]; } __fsid_t;	/* Type of file system IDs.  */
typedef long int __clock_t;	/* Type of CPU usage counts.  */
typedef unsigned long int __rlim_t;	/* Type for resource measurement.  */
typedef unsigned long int __rlim64_t;	/* Type for resource measurement (LFS).  */
typedef unsigned int __id_t;		/* General type for IDs.  */
typedef long int __time_t;	/* Seconds since the Epoch.  */
typedef unsigned int __useconds_t; /* Count of microseconds.  */
typedef long int __suseconds_t; /* Signed count of microseconds.  */

typedef int __daddr_t;	/* The type of a disk address.  */
typedef long int __swblk_t;	/* Type of a swap block maybe?  */
typedef int __key_t;	/* Type of an IPC key.  */

/* Clock ID used in clock and timer functions.  */
typedef int __clockid_t;

/* Timer ID returned by `timer_create'.  */
typedef void * __timer_t;

/* Type to represent block size.  */
typedef long int __blksize_t;

/* Types from the Large File Support interface.  */

/* Type to count number of disk blocks.  */
typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;

/* Type to count file system blocks.  */
typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;

/* Type to count file system nodes.  */
typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;

typedef long int __ssize_t; /* Type of a byte count, or error.  */

/* These few don't really vary by system, they always correspond
   to one of the other defined types.  */
typedef __off64_t __loff_t;	/* Type of file sizes and offsets (LFS).  */
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;

/* Duplicates info from stdint.h but this is used in unistd.h.  */
typedef long int __intptr_t;

/* Duplicate info from sys/socket.h.  */
typedef unsigned int __socklen_t;





#line 32 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;



typedef __loff_t loff_t;



typedef __ino_t ino_t;
 








typedef __dev_t dev_t;



typedef __gid_t gid_t;



typedef __mode_t mode_t;



typedef __nlink_t nlink_t;



typedef __uid_t uid_t;




typedef __off_t off_t;
 








typedef __pid_t pid_t;



typedef __id_t id_t;



typedef __ssize_t ssize_t;




typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;




typedef __key_t key_t;








#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */





























#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 58 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2


/* Returned by `clock'.  */
typedef __clock_t clock_t;










#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 74 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2


/* Returned by `time'.  */
typedef __time_t time_t;










#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 91 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* Clock ID used in clock and timer functions.  */
typedef __clockid_t clockid_t;







#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 103 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* Timer ID returned by `timer_create'.  */
typedef __timer_t timer_t;













  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 135 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2












#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 149 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2


/* Old compatibility names for C types.  */
typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;

/* These size-specific names are used by some of the inet code.  */










 








 



 /* For GCC 2.7 and later, we can use specific type-size attributes.  */







typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));

typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));


/* Some code from BIND tests this macro to see if the types above are
   defined.  */





/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 219 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2

/* It also defines `fd_set' and the FD_* macros for `select'.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 1
/* `fd_set' type and related macros, and `select'/`pselect' declarations.
   Copyright (C) 1996-2003, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*	POSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

/* Get definition of needed basic types.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

/* Get __FD_* definitions.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/select.h" 1
/* Copyright (C) 1997,1998,1999,2001,2008,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/select.h" 2





 












 














#line 33 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

/* Get __sigset_t.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




typedef int __sig_atomic_t;

/* A `sigset_t' has a bit for each signal.  */


typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */

















































































#line 36 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2



typedef __sigset_t sigset_t;

/* Get definition of timer specification structures.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */


















































































#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 118 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/time.h" 2

/* POSIX.1b structure for a time value.  This is like a `struct timeval' but
   has nanoseconds instead of microseconds.  */
struct timespec
  {
    __time_t tv_sec;		/* Seconds.  */
    long int tv_nsec;		/* Nanoseconds.  */
  };










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 46 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */













































#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 73 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/time.h" 2

/* A time value that is accurate to the nearest
   microsecond but also has a range of years.  */
struct timeval
  {
    __time_t tv_sec;		/* Seconds.  */
    __suseconds_t tv_usec;	/* Microseconds.  */
  };


#line 48 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/select.h" 2


typedef __suseconds_t suseconds_t;


/* The fd_set member is required to be an array of longs.  */
typedef long int __fd_mask;

/* Some versions of <linux/posix_types.h> define these macros.  */



/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */




/* fd_set for select and pselect.  */
typedef struct
  {
    /* XPG4.2 requires this member name.  Otherwise avoid the name
       from the global namespace.  */

    

     __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;

/* Maximum number of file descriptors in `fd_set'.  */



/* Sometimes the fd_set member is assumed to have this type.  */
typedef __fd_mask fd_mask;

/* Number of bits per word of `fd_set' (some code assumes this is 32).  */


/* Access macros for `fd_set'.  */








/* Check the first NFDS descriptors each in READFDS (if not NULL) for read
   readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS
   (if not NULL) for exceptional conditions.  If TIMEOUT is not NULL, time out
   after waiting the interval specified therein.  Returns the number of ready
   descriptors, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int select (int __nfds, fd_set *__restrict __readfds,
		   fd_set *__restrict __writefds,
		   fd_set *__restrict __exceptfds,
		   struct timeval *__restrict __timeout);


/* Same as above only that the TIMEOUT value is given with higher
   resolution and a sigmask which is been set temporarily.  This version
   should be used.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int pselect (int __nfds, fd_set *__restrict __readfds,
		    fd_set *__restrict __writefds,
		    fd_set *__restrict __exceptfds,
		    const struct timespec *__restrict __timeout,
		    const __sigset_t *__restrict __sigmask);




#line 222 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2

/* BSD defines these symbols, so we follow.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/sysmacros.h" 1
/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996, 1997, 1999, 2003, 2004, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/sysmacros.h" 2

/* If the compiler does not know long long it is out of luck.  We are
   not going to hack weird hacks to support the dev_t representation
   they need.  */

__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
					       unsigned int __minor)
     __attribute__ ((__nothrow__));





  





  





  
	  
	  


/* Access the functions with their traditional names.  */





#line 225 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2


typedef __blksize_t blksize_t;


/* Types from the Large File Support interface.  */


typedef __blkcnt_t blkcnt_t;	 /* Type to count number of disk blocks.  */



typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */



typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */


 

















/* Now add the thread types.  */

#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/pthreadtypes.h" 1
/* Copyright (C) 2002,2003,2004,2005,2006,2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@redhat.com>, 2002.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/pthreadtypes.h" 2











 









/* Thread identifiers.  The structure of the attribute type is not
   exposed on purpose.  */
typedef unsigned long int pthread_t;


typedef union
{
  char __size[56];
  long int __align;
} pthread_attr_t;



typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
 

  


/* Data structures for mutex handling.  The structure of the attribute
   type is not exposed on purpose.  */
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;

    /* KIND must stay at this position in the structure to maintain
       binary compatibility.  */
    int __kind;

    int __spins;
    __pthread_list_t __list;

     
    
    
      
      
    

  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;


/* Data structure for conditional variable handling.  The structure of
   the attribute type is not exposed on purpose.  */
typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;


/* Keys for thread-specific data */
typedef unsigned int pthread_key_t;


/* Once-only execution */
typedef int pthread_once_t;



/* Data structure for read-write lock variable handling.  The
   structure of the attribute type is not exposed on purpose.  */
typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    unsigned long int __pad1;
    unsigned long int __pad2;
    /* FLAGS must stay at this position in the structure to maintain
       binary compatibility.  */
    unsigned int __flags;
  } __data;
   
  
    
    
    
    
    
    
    

    
    
    
    
    
  

  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;


/* POSIX spinlock data type.  */
typedef volatile int pthread_spinlock_t;


/* POSIX barriers data type.  The structure of the type is
   deliberately not exposed.  */
typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;






#line 273 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/sys/types.h" 2




#line 322 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2

/* These are the functions that actually do things.  The `random', `srandom',
   `initstate' and `setstate' functions are those from BSD Unices.
   The `rand' and `srand' functions are required by the ANSI standard.
   We provide both interfaces to the same random number generator.  */
/* Return a random long integer between 0 and RAND_MAX inclusive.  */
extern long int random (void) __attribute__ ((__nothrow__));

/* Seed the random number generator with the given number.  */
extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));

/* Initialize the random number generator to use state buffer STATEBUF,
   of length STATELEN, and seed it with SEED.  Optimal lengths are 8, 16,
   32, 64, 128 and 256, the bigger the better; values less than 8 will
   cause an error and values greater than 256 will be rounded down.  */
extern char *initstate (unsigned int __seed, char *__statebuf,
			size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Switch the random number generator to state buffer STATEBUF,
   which should have been previously initialized by `initstate'.  */
extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



/* Reentrant versions of the `random' family of functions.
   These functions all use the following data structure to contain
   state, rather than global state variables.  */

struct random_data
  {
    int32_t *fptr;		/* Front pointer.  */
    int32_t *rptr;		/* Rear pointer.  */
    int32_t *state;		/* Array of state values.  */
    int rand_type;		/* Type of random number generator.  */
    int rand_deg;		/* Degree of random number generator.  */
    int rand_sep;		/* Distance between front and rear.  */
    int32_t *end_ptr;		/* Pointer behind state table.  */
  };

extern int random_r (struct random_data *__restrict __buf,
		     int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
			size_t __statelen,
			struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
		       struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



/* Return a random integer between 0 and RAND_MAX inclusive.  */
extern int rand (void) __attribute__ ((__nothrow__));
/* Seed the random number generator with the given number.  */
extern void srand (unsigned int __seed) __attribute__ ((__nothrow__));



/* Reentrant interface according to POSIX.1.  */
extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));


/* System V style 48-bit random number generator functions.  */

/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */
extern double drand48 (void) __attribute__ ((__nothrow__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return non-negative, long integer in [0,2^31).  */
extern long int lrand48 (void) __attribute__ ((__nothrow__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return signed, long integers in [-2^31,2^31).  */
extern long int mrand48 (void) __attribute__ ((__nothrow__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Seed random number generator.  */
extern void srand48 (long int __seedval) __attribute__ ((__nothrow__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Data structure for communication with thread safe versions.  This
   type is to be regarded as opaque.  It's only exported because users
   have to allocate objects of this type.  */
struct drand48_data
  {
    unsigned short int __x[3];	/* Current state.  */
    unsigned short int __old_x[3]; /* Old state.  */
    unsigned short int __c;	/* Additive const. in congruential formula.  */
    unsigned short int __init;	/* Flag for initializing.  */
    unsigned long long int __a;	/* Factor in congruential formula.  */
  };

/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */
extern int drand48_r (struct drand48_data *__restrict __buffer,
		      double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return non-negative, long integer in [0,2^31).  */
extern int lrand48_r (struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return signed, long integers in [-2^31,2^31).  */
extern int mrand48_r (struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Seed random number generator.  */
extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
		     struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
		      struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






/* Allocate SIZE bytes of memory.  */
extern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;
/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;




/* Re-allocate the previously allocated block
   in PTR, making the new block SIZE bytes long.  */
/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */
extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__warn_unused_result__));
/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
extern void free (void *__ptr) __attribute__ ((__nothrow__));



/* Free a block.  An alias for `free'.	(Sun Unices).  */
extern void cfree (void *__ptr) __attribute__ ((__nothrow__));


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/alloca.h" 1
/* Copyright (C) 1992, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/alloca.h" 2


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 27 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/alloca.h" 2



/* Remove any previous definitions.  */


/* Allocate a block that will be freed when the calling function exits.  */
extern void *alloca (size_t __size) __attribute__ ((__nothrow__));







#line 499 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdlib.h" 2


/* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */
extern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;


/* Allocate memory of SIZE bytes with an alignment of ALIGNMENT.  */
extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Abort execution and generate a core-dump.  */
extern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


/* Register a function to be called when `exit' is called.  */
extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));







     
 





/* Register a function to be called with the status
   given to `exit' and the given argument.  */
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Call all functions registered with `atexit' and `on_exit',
   in the reverse of the order in which they were registered,
   perform stdio cleanup, and terminate program execution with STATUS.  */
extern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));













/* Terminate the program with STATUS without calling any of the
   functions registered with `atexit' or `on_exit'.  */
extern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



/* Return the value of envariable NAME, or NULL if it doesn't exist.  */
extern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* This function is similar to the above but returns NULL if the
   programs is running with SUID or SGID enabled.  */
extern char *__secure_getenv (__const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* The SVID says this is in <stdio.h>, but this seems a better place.	*/
/* Put STRING, which is of the form "NAME=VALUE", in the environment.
   If there is no `=', remove NAME from the environment.  */
extern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set NAME to VALUE in the environment.
   If REPLACE is nonzero, overwrite an existing value.  */
extern int setenv (__const char *__name, __const char *__value, int __replace)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Remove the variable NAME from the environment.  */
extern int unsetenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* The `clearenv' was planned to be added to POSIX.1 but probably
   never made it.  Nevertheless the POSIX.9 standard (POSIX bindings
   for Fortran 77) requires this function.  */
extern int clearenv (void) __attribute__ ((__nothrow__));


/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the file name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique file name.  */
extern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the filename unique.
   Returns a file descriptor open on the file for reading and writing,
   or -1 if it cannot create a uniquely-named file.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
 

     
 







/* Similar to mkstemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
 

		       
 




     



/* Create a unique temporary directory from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the directory name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique name.
   The directory is created mode 700.  */
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;










 

     
 













     
 

				   
     
 




     



/* Execute the given line as a shell command.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int system (__const char *__command) ;







     


/* Return the canonical absolute name of file NAME.  If RESOLVED is
   null, the result is malloc'd; otherwise, if the canonical name is
   PATH_MAX chars or more, returns null with `errno' set to
   ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  */
extern char *realpath (__const char *__restrict __name,
		       char *__restrict __resolved) __attribute__ ((__nothrow__)) ;

/* Shorthand for type of comparison functions.  */


typedef int (*__compar_fn_t) (__const void *, __const void *);









/* Do a binary search for KEY in BASE, which consists of NMEMB elements
   of SIZE bytes each, using COMPAR to perform the comparisons.  */
extern void *bsearch (__const void *__key, __const void *__base,
		      size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;

/* Sort NMEMB elements of BASE, of SIZE bytes each,
   using COMPAR to perform the comparisons.  */
extern void qsort (void *__base, size_t __nmemb, size_t __size,
		   __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));


		     
  

/* Return the absolute value of X.  */
extern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;


/* Return the `div_t', `ldiv_t' or `lldiv_t' representation
   of the value of NUMER over DENOM. */
/* GCC may have built-ins for these someday.  */
extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
				    long long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



/* Convert floating point numbers to strings.  The returned values are
   valid only until another call to the same function.  */

/* Convert VALUE to a string with NDIGIT digits and return a pointer to
   this.  Set *DECPT with the position of the decimal character and *SIGN
   with the sign of the number.  */
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;

/* Convert VALUE to a string rounded to NDIGIT decimal digits.  Set *DECPT
   with the position of the decimal character and *SIGN with the sign of
   the number.  */
extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;

/* If possible convert VALUE to a string with NDIGIT significant digits.
   Otherwise use exponential representation.  The resulting string will
   be written to BUF.  */
extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;



/* Long double versions of above functions.  */
extern char *qecvt (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;


/* Reentrant version of the functions above which provide their own
   buffers.  */
extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign, char *__restrict __buf,
		   size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign, char *__restrict __buf,
		   size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign,
		    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign,
		    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));



/* Return the length of the multibyte character
   in S, which is no longer than N.  */
extern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;
/* Return the length of the given multibyte character,
   putting its `wchar_t' representation in *PWC.  */
extern int mbtowc (wchar_t *__restrict __pwc,
		   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;
/* Put the multibyte character represented
   by WCHAR in S, returning its length.  */
extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;


/* Convert a multibyte string to a wide char string.  */
extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
			__const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));
/* Convert a wide char string to multibyte string.  */
extern size_t wcstombs (char *__restrict __s,
			__const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__));




/* Determine whether the string value of RESPONSE matches the affirmation
   or negative response expression as specified by the LC_MESSAGES category
   in the program's current locale.  Returns 1 if affirmative, 0 if
   negative, and -1 if not matching.  */
extern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Parse comma separated suboption from *OPTIONP and match against
   strings in TOKENS.  If found return index and set *VALUEP to
   optional value introduced by an equal sign.  If the suboption is
   not part of TOKENS return in *VALUEP beginning of unknown
   suboption.  On exit *OPTIONP is set to the beginning of the next
   token or at the terminating NUL character.  */
extern int getsubopt (char **__restrict __optionp,
		      char *__const *__restrict __tokens,
		      char **__restrict __valuep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;





/* X/Open pseudo terminal handling.  */


























     





/* Put the 1 minute, 5 minute and 15 minute load averages into the first
   NELEM elements of LOADAVG.  Return the number written (never more than
   three, but may be less than NELEM), or -1 if an error occurred.  */
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Define some macros helping to catch buffer overflows.  */












#line 24 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_config.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 2



/* Get size_t and NULL from <stddef.h>.  */


#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 36 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 2

/* Tell the caller that we provide correct C++ prototypes.  */




/* Copy N bytes of SRC to DEST.  */
extern void *memcpy (void *__restrict __dest,
		     __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Copy N bytes of SRC to DEST, guaranteeing
   correct behavior for overlapping strings.  */
extern void *memmove (void *__dest, __const void *__src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Copy no more than N bytes of SRC to DEST, stopping when C is found.
   Return the position in DEST one byte past where C was copied,
   or NULL if C was not found in the first N bytes of SRC.  */

extern void *memccpy (void *__restrict __dest, __const void *__restrict __src,
		      int __c, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Set N bytes of S to C.  */
extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Compare N bytes of S1 and S2.  */
extern int memcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Search N bytes of S for C.  */




      

      





  





  



 extern void *memchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));








     

     
 
     




      

      
 
      



/* Copy SRC to DEST.  */
extern char *strcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Copy no more than N characters of SRC to DEST.  */
extern char *strncpy (char *__restrict __dest,
		      __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Append SRC onto DEST.  */
extern char *strcat (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Append no more than N characters from SRC onto DEST.  */
extern char *strncat (char *__restrict __dest, __const char *__restrict __src,
		      size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare S1 and S2.  */
extern int strcmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Compare N characters of S1 and S2.  */
extern int strncmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare the collated forms of S1 and S2.  */
extern int strcoll (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Put a transformation of SRC into no more than N bytes of DEST.  */
extern size_t strxfrm (char *__restrict __dest,
		       __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



/* The following functions are equivalent to the both above but they
   take the locale they use for the collation as an extra argument.
   This is not standardsized but something like will come.  */
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  The file and
   this data structure is not standardized.  Don't rely on it.  It can
   go away without warning.  */
typedef struct __locale_struct
{
  /* Note: LC_ALL is not a valid index into this array.  */
  struct __locale_data *__locales[13]; /* 13 = __LC_LAST. */

  /* To increase the speed of this solution we add some special members.  */
  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;

  /* Note: LC_ALL is not a valid index into this array.  */
  const char *__names[13];
} *__locale_t;

/* POSIX 2008 makes locale_t official.  */
typedef __locale_t locale_t;


#line 164 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/string.h" 2

/* Compare the collated forms of S1 and S2 using rules from L.  */
extern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));
/* Put a transformation of SRC into no more than N bytes of DEST.  */
extern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,
			 __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));


/* Duplicate S, returning an identical malloc'd string.  */
extern char *strdup (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));

/* Return a malloc'd copy of at most N bytes of STRING.  The
   resultant string is terminated even if no null terminator
   appears before STRING[N].  */

extern char *strndup (__const char *__string, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
























/* Find the first occurrence of C in S.  */




     

     





  





  



 extern char *strchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Find the last occurrence of C in S.  */




     

     





  





  



 extern char *strrchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));








     

     
 
     



/* Return the length of the initial segment of S which
   consists entirely of characters not in REJECT.  */
extern size_t strcspn (__const char *__s, __const char *__reject)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Return the length of the initial segment of S which
   consists entirely of characters in ACCEPT.  */
extern size_t strspn (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Find the first occurrence in S of any character in ACCEPT.  */




     

     





  





  



 extern char *strpbrk (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Find the first occurrence of NEEDLE in HAYSTACK.  */




     

			     
     





  





  



 extern char *strstr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Divide S into tokens separated by characters in DELIM.  */
extern char *strtok (char *__restrict __s, __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Divide S into tokens separated by characters in DELIM.  Information
   passed between calls are stored in SAVE_PTR.  */
extern char *__strtok_r (char *__restrict __s,
			 __const char *__restrict __delim,
			 char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,
		       char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));





     

				       
     
 
     







		     
     




			
     

		      
     


/* Return the length of S.  */
extern size_t strlen (__const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



/* Find the length of STRING, but scan at most MAXLEN characters.
   If no '\0' terminator is found in that many characters, return MAXLEN.  */
extern size_t strnlen (__const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


/* Return a string describing the meaning of the `errno' code in ERRNUM.  */
extern char *strerror (int __errnum) __attribute__ ((__nothrow__));


/* Reentrant version of `strerror'.
   There are 2 flavors of `strerror_r', GNU which returns the string
   and may or may not use the supplied temporary buffer and POSIX one
   which fills the string into the buffer.
   To use the POSIX version, -D_XOPEN_SOURCE=600 or -D_POSIX_C_SOURCE=200112L
   without -D_GNU_SOURCE is needed, otherwise the GNU version is
   preferred.  */

/* Fill BUF with a string describing the meaning of the `errno' code in
   ERRNUM.  */

extern int strerror_r 
(int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
 
     


 


     



/* Translate error number to string according to the locale L.  */
extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__));

/* We define this function always since `bzero' is sometimes needed when
   the namespace rules does not allow this.  */
extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Copy N bytes of SRC to DEST (like memmove, but args reversed).  */
extern void bcopy (__const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Set N bytes of S to 0.  */
extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Compare N bytes of S1 and S2 (same as memcmp).  */
extern int bcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Find the first occurrence of C in S (same as strchr).  */




     

     





  





  



 extern char *index (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Find the last occurrence of C in S (same as strrchr).  */




     

     





  





  



 extern char *rindex (__const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Return the position of the first bit set in I, or 0 if none are set.
   The least-significant bit is position 1, the most-significant 32.  */
extern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* The following two functions are non-standard but necessary for non-32 bit
   platforms.  */




     


/* Compare S1 and S2, ignoring case.  */
extern int strcasecmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare no more than N chars of S1 and S2, ignoring case.  */
extern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





			 
     


			  
     


/* Return the next DELIM-delimited token from *STRINGP,
   terminating it with a '\0', and update *STRINGP to point past it.  */
extern char *strsep (char **__restrict __stringp,
		     __const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Return a string describing the meaning of the signal number in SIG.  */
extern char *strsignal (int __sig) __attribute__ ((__nothrow__));

/* Copy SRC to DEST, returning the address of the terminating '\0' in DEST.  */
extern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Copy no more than N characters of SRC to DEST, returning the address of
   the last character written into DEST.  */
extern char *__stpncpy (char *__restrict __dest,
			__const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
		      __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));




     














     

     
 





































#line 25 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_config.h" 2

#line 1 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz.h" 1
/*
 * XZ decompressor
 *
 * Authors: Lasse Collin <lasse.collin@tukaani.org>
 *          Igor Pavlov <http://7-zip.org/>
 *
 * This file has been put into the public domain.
 * You can do whatever you want with this file.
 */







 #line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */



/* snaroff@next.com says the NeXT needs this.  */

/* Irix 5.1 needs this.  */



/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




















typedef long int ptrdiff_t;








/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 20 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wchar.h" 1
/* wchar_t type related definitions.
   Copyright (C) 2000 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */








#line 29 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 2
#line 1 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "/app/home/pgiarrusso/TypeChef/systems/redhat/usr/include/stdint.h" 2

/* Exact integral types.  */

/* Signed.  */

/* There is some amount of overlap with <sys/types.h> as known by inet code */







 



/* Unsigned.  */
typedef unsigned char		uint8_t;
typedef unsigned short int	uint16_t;

typedef unsigned int		uint32_t;



typedef unsigned long int	uint64_t;
 


/* Small types.  */

/* Signed.  */
typedef signed char		int_least8_t;
typedef short int		int_least16_t;
typedef int			int_least32_t;

typedef long int		int_least64_t;
 


/* Unsigned.  */
typedef unsigned char		uint_least8_t;
typedef unsigned short int	uint_least16_t;
typedef unsigned int		uint_least32_t;

typedef unsigned long int	uint_least64_t;
 


/* Fast types.  */

/* Signed.  */
typedef signed char		int_fast8_t;

typedef long int		int_fast16_t;
typedef long int		int_fast32_t;
typedef long int		int_fast64_t;
 




/* Unsigned.  */
typedef unsigned char		uint_fast8_t;

typedef unsigned long int	uint_fast16_t;
typedef unsigned long int	uint_fast32_t;
typedef unsigned long int	uint_fast64_t;
 




/* Types for `void *' pointers.  */


typedef long int		intptr_t;


typedef unsigned long int	uintptr_t;
 





/* Largest integral types.  */

typedef long int		intmax_t;
typedef unsigned long int	uintmax_t;
 




/* The ISO C99 standard specifies that in C++ implementations these
   macros should only be defined if explicitly requested.  */




 


/* Limits of integral types.  */

/* Minimum of signed integral types.  */




/* Maximum of signed integral types.  */





/* Maximum of unsigned integral types.  */






/* Minimum of signed integral types having a minimum size.  */




/* Maximum of signed integral types having a minimum size.  */





/* Maximum of unsigned integral types having a minimum size.  */






/* Minimum of fast signed integral types having a minimum size.  */




 



/* Maximum of fast signed integral types having a minimum size.  */




 




/* Maximum of fast unsigned integral types having a minimum size.  */




 





/* Values to test for integral types holding `void *' pointer.  */




 



/* Minimum for largest signed integral type.  */

/* Maximum for largest signed integral type.  */


/* Maximum for largest unsigned integral type.  */



/* Limits of other integer types.  */

/* Limits of `ptrdiff_t' type.  */



 


/* Limits of `sig_atomic_t'.  */



/* Limit of `size_t' type.  */


 

/* Limits of `wchar_t'.  */

/* These constants might also be defined in <wchar.h>.  */



/* Limits of `wint_t'.  */




/* The ISO C99 standard specifies that in C++ implementations these
   should only be defined if explicitly requested.  */

/* Signed.  */





 

/* Unsigned.  */





 

/* Maximal type.  */



 




#line 21 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz.h" 2

/* In Linux, this is used to make extern functions static when needed. */



/* In Linux, this is used to mark the functions with __init when needed. */



/**
 * enum xz_mode - Operation mode
 *
 * @XZ_SINGLE:              Single-call mode. This uses less RAM than
 *                          than multi-call modes, because the LZMA2
 *                          dictionary doesn't need to be allocated as
 *                          part of the decoder state. All required data
 *                          structures are allocated at initialization,
 *                          so xz_dec_run() cannot return XZ_MEM_ERROR.
 * @XZ_PREALLOC:            Multi-call mode with preallocated LZMA2
 *                          dictionary buffer. All data structures are
 *                          allocated at initialization, so xz_dec_run()
 *                          cannot return XZ_MEM_ERROR.
 * @XZ_DYNALLOC:            Multi-call mode. The LZMA2 dictionary is
 *                          allocated once the required size has been
 *                          parsed from the stream headers. If the
 *                          allocation fails, xz_dec_run() will return
 *                          XZ_MEM_ERROR.
 *
 * It is possible to enable support only for a subset of the above
 * modes at compile time by defining XZ_DEC_SINGLE, XZ_DEC_PREALLOC,
 * or XZ_DEC_DYNALLOC. The xz_dec kernel module is always compiled
 * with support for all operation modes, but the preboot code may
 * be built with fewer features to minimize code size.
 */
enum xz_mode {
	XZ_SINGLE,
	XZ_PREALLOC,
	XZ_DYNALLOC
};

/**
 * enum xz_ret - Return codes
 * @XZ_OK:                  Everything is OK so far. More input or more
 *                          output space is required to continue. This
 *                          return code is possible only in multi-call mode
 *                          (XZ_PREALLOC or XZ_DYNALLOC).
 * @XZ_STREAM_END:          Operation finished successfully.
 * @XZ_UNSUPPORTED_CHECK:   Integrity check type is not supported. Decoding
 *                          is still possible in multi-call mode by simply
 *                          calling xz_dec_run() again.
 *                          NOTE: This return value is used only if
 *                          XZ_DEC_ANY_CHECK was defined at build time,
 *                          which is not used in the kernel. Unsupported
 *                          check types return XZ_OPTIONS_ERROR if
 *                          XZ_DEC_ANY_CHECK was not defined at build time.
 * @XZ_MEM_ERROR:           Allocating memory failed. This return code is
 *                          possible only if the decoder was initialized
 *                          with XZ_DYNALLOC. The amount of memory that was
 *                          tried to be allocated was no more than the
 *                          dict_max argument given to xz_dec_init().
 * @XZ_MEMLIMIT_ERROR:      A bigger LZMA2 dictionary would be needed than
 *                          allowed by the dict_max argument given to
 *                          xz_dec_init(). This return value is possible
 *                          only in multi-call mode (XZ_PREALLOC or
 *                          XZ_DYNALLOC); the single-call mode (XZ_SINGLE)
 *                          ignores the dict_max argument.
 * @XZ_FORMAT_ERROR:        File format was not recognized (wrong magic
 *                          bytes).
 * @XZ_OPTIONS_ERROR:       This implementation doesn't support the requested
 *                          compression options. In the decoder this means
 *                          that the header CRC32 matches, but the header
 *                          itself specifies something that we don't support.
 * @XZ_DATA_ERROR:          Compressed data is corrupt.
 * @XZ_BUF_ERROR:           Cannot make any progress. Details are slightly
 *                          different between multi-call and single-call
 *                          mode; more information below.
 *
 * In multi-call mode, XZ_BUF_ERROR is returned when two consecutive calls
 * to XZ code cannot consume any input and cannot produce any new output.
 * This happens when there is no new input available, or the output buffer
 * is full while at least one output byte is still pending. Assuming your
 * code is not buggy, you can get this error only when decoding a compressed
 * stream that is truncated or otherwise corrupt.
 *
 * In single-call mode, XZ_BUF_ERROR is returned only when the output buffer
 * is too small, or the compressed input is corrupt in a way that makes the
 * decoder produce more output than the caller expected. When it is
 * (relatively) clear that the compressed input is truncated, XZ_DATA_ERROR
 * is used instead of XZ_BUF_ERROR.
 */
enum xz_ret {
	XZ_OK,
	XZ_STREAM_END,
	XZ_UNSUPPORTED_CHECK,
	XZ_MEM_ERROR,
	XZ_MEMLIMIT_ERROR,
	XZ_FORMAT_ERROR,
	XZ_OPTIONS_ERROR,
	XZ_DATA_ERROR,
	XZ_BUF_ERROR
};

/**
 * struct xz_buf - Passing input and output buffers to XZ code
 * @in:         Beginning of the input buffer. This may be NULL if and only
 *              if in_pos is equal to in_size.
 * @in_pos:     Current position in the input buffer. This must not exceed
 *              in_size.
 * @in_size:    Size of the input buffer
 * @out:        Beginning of the output buffer. This may be NULL if and only
 *              if out_pos is equal to out_size.
 * @out_pos:    Current position in the output buffer. This must not exceed
 *              out_size.
 * @out_size:   Size of the output buffer
 *
 * Only the contents of the output buffer from out[out_pos] onward, and
 * the variables in_pos and out_pos are modified by the XZ code.
 */
struct xz_buf {
	const uint8_t *in;
	size_t in_pos;
	size_t in_size;

	uint8_t *out;
	size_t out_pos;
	size_t out_size;
};

/**
 * struct xz_dec - Opaque type to hold the XZ decoder state
 */
struct xz_dec;

/**
 * xz_dec_init() - Allocate and initialize a XZ decoder state
 * @mode:       Operation mode
 * @dict_max:   Maximum size of the LZMA2 dictionary (history buffer) for
 *              multi-call decoding. This is ignored in single-call mode
 *              (mode == XZ_SINGLE). LZMA2 dictionary is always 2^n bytes
 *              or 2^n + 2^(n-1) bytes (the latter sizes are less common
 *              in practice), so other values for dict_max don't make sense.
 *              In the kernel, dictionary sizes of 64 KiB, 128 KiB, 256 KiB,
 *              512 KiB, and 1 MiB are probably the only reasonable values,
 *              except for kernel and initramfs images where a bigger
 *              dictionary can be fine and useful.
 *
 * Single-call mode (XZ_SINGLE): xz_dec_run() decodes the whole stream at
 * once. The caller must provide enough output space or the decoding will
 * fail. The output space is used as the dictionary buffer, which is why
 * there is no need to allocate the dictionary as part of the decoder's
 * internal state.
 *
 * Because the output buffer is used as the workspace, streams encoded using
 * a big dictionary are not a problem in single-call mode. It is enough that
 * the output buffer is big enough to hold the actual uncompressed data; it
 * can be smaller than the dictionary size stored in the stream headers.
 *
 * Multi-call mode with preallocated dictionary (XZ_PREALLOC): dict_max bytes
 * of memory is preallocated for the LZMA2 dictionary. This way there is no
 * risk that xz_dec_run() could run out of memory, since xz_dec_run() will
 * never allocate any memory. Instead, if the preallocated dictionary is too
 * small for decoding the given input stream, xz_dec_run() will return
 * XZ_MEMLIMIT_ERROR. Thus, it is important to know what kind of data will be
 * decoded to avoid allocating excessive amount of memory for the dictionary.
 *
 * Multi-call mode with dynamically allocated dictionary (XZ_DYNALLOC):
 * dict_max specifies the maximum allowed dictionary size that xz_dec_run()
 * may allocate once it has parsed the dictionary size from the stream
 * headers. This way excessive allocations can be avoided while still
 * limiting the maximum memory usage to a sane value to prevent running the
 * system out of memory when decompressing streams from untrusted sources.
 *
 * On success, xz_dec_init() returns a pointer to struct xz_dec, which is
 * ready to be used with xz_dec_run(). If memory allocation fails,
 * xz_dec_init() returns NULL.
 */
extern struct xz_dec *  xz_dec_init(
		enum xz_mode mode, uint32_t dict_max);

/**
 * xz_dec_run() - Run the XZ decoder
 * @s:          Decoder state allocated using xz_dec_init()
 * @b:          Input and output buffers
 *
 * The possible return values depend on build options and operation mode.
 * See enum xz_ret for details.
 *
 * NOTE: If an error occurs in single-call mode (return value is not
 * XZ_STREAM_END), b->in_pos and b->out_pos are not modified, and the
 * contents of the output buffer from b->out[b->out_pos] onward are
 * undefined. This is true even after XZ_BUF_ERROR, because with some filter
 * chains, there may be a second pass over the output buffer, and this pass
 * cannot be properly done if the output buffer is truncated. Thus, you
 * cannot give the single-call decoder a too small buffer and then expect to
 * get that amount valid data from the beginning of the stream. You must use
 * the multi-call decoder if you don't want to uncompress the whole stream.
 */
extern enum xz_ret  xz_dec_run(struct xz_dec *s, struct xz_buf *b);

/**
 * xz_dec_reset() - Reset an already allocated decoder state
 * @s:          Decoder state allocated using xz_dec_init()
 *
 * This function can be used to reset the multi-call decoder state without
 * freeing and reallocating memory with xz_dec_end() and xz_dec_init().
 *
 * In single-call mode, xz_dec_reset() is always called in the beginning of
 * xz_dec_run(). Thus, explicit call to xz_dec_reset() is useful only in
 * multi-call mode.
 */
extern void  xz_dec_reset(struct xz_dec *s);

/**
 * xz_dec_end() - Free the memory allocated for the decoder state
 * @s:          Decoder state allocated using xz_dec_init(). If s is NULL,
 *              this function does nothing.
 */
extern void  xz_dec_end(struct xz_dec *s);

/*
 * Standalone build (userspace build or in-kernel build for boot time use)
 * needs a CRC32 implementation. For normal in-kernel use, kernel's own
 * CRC32 module is used instead, and users of this module don't need to
 * care about the functions below.
 */



 



/*
 * This must be called before any other xz_* function to initialize
 * the CRC32 lookup table.
 */
extern void  xz_crc32_init(void);

/*
 * Update CRC32 value using the polynomial from IEEE-802.3. To start a new
 * calculation, the third argument must be zero. To continue the calculation,
 * the previously returned value is passed as the third argument.
 */
extern uint32_t  xz_crc32(
		const uint8_t *buf, size_t size, uint32_t crc);


#line 27 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_config.h" 2














/*
 * Some functions have been marked with __always_inline to keep the
 * performance reasonable even when the compiler is optimizing for
 * small code size. You may be able to save a few bytes by #defining
 * __always_inline to plain inline, but don't complain if the code
 * becomes slow.
 *
 * NOTE: System headers on GNU/Linux may #define this macro already,
 * so if you want to change it, you need to #undef it first.
 */




 


/*
 * Some functions are marked to never be inlined to reduce stack usage.
 * If you don't care about stack usage, you may want to modify this so
 * that noinline_for_stack is #defined to be empty even when using GCC.
 * Doing so may save a few bytes in binary size.
 */



 


/* Inline functions to access unaligned unsigned 32-bit integers */

static inline uint32_t  get_unaligned_le32(const uint8_t *buf)
{
	return (uint32_t)buf[0]
			| ((uint32_t)buf[1] << 8)
			| ((uint32_t)buf[2] << 16)
			| ((uint32_t)buf[3] << 24);
}


static inline uint32_t  get_unaligned_be32(const uint8_t *buf)
{
	return (uint32_t)(buf[0] << 24)
			| ((uint32_t)buf[1] << 16)
			| ((uint32_t)buf[2] << 8)
			| (uint32_t)buf[3];
}


static inline void  put_unaligned_le32(uint32_t val, uint8_t *buf)
{
	buf[0] = (uint8_t)val;
	buf[1] = (uint8_t)(val >> 8);
	buf[2] = (uint8_t)(val >> 16);
	buf[3] = (uint8_t)(val >> 24);
}


static inline void  put_unaligned_be32(uint32_t val, uint8_t *buf)
{
	buf[0] = (uint8_t)(val >> 24);
	buf[1] = (uint8_t)(val >> 16);
	buf[2] = (uint8_t)(val >> 8);
	buf[3] = (uint8_t)val;
}

/*
 * Use get_unaligned_le32() also for aligned access for simplicity. On
 * little endian systems, #define get_le32(ptr) (*(const uint32_t *)(ptr))
 * could save a few bytes in code size.
 */




#line 55 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_private.h" 2

/* If no specific decoding mode is requested, enable support for all modes. */





/*
 * The DEC_IS_foo(mode) macros are used in "if" statements. If only some
 * of the supported modes are enabled, these macros will evaluate to true or
 * false at compile time and thus allow the compiler to omit unneeded code.
 */


 



 



 



 
 

/*
 * If any of the BCJ filter decoders are wanted, define XZ_DEC_BCJ.
 * XZ_DEC_BCJ is used to enable generic support for BCJ decoders.
 */





/*
 * Allocate memory for LZMA2 decoder. xz_dec_lzma2_reset() must be used
 * before calling xz_dec_lzma2_run().
 */
extern struct xz_dec_lzma2 *  xz_dec_lzma2_create(
		enum xz_mode mode, uint32_t dict_max);

/*
 * Decode the LZMA2 properties (one byte) and reset the decoder. Return
 * XZ_OK on success, XZ_MEMLIMIT_ERROR if the preallocated dictionary is not
 * big enough, and XZ_OPTIONS_ERROR if props indicates something that this
 * decoder doesn't support.
 */
extern enum xz_ret  xz_dec_lzma2_reset(
		struct xz_dec_lzma2 *s, uint8_t props);

/* Decode raw LZMA2 stream from b->in to b->out. */
extern enum xz_ret  xz_dec_lzma2_run(
		struct xz_dec_lzma2 *s, struct xz_buf *b);

/* Free the memory allocated for the LZMA2 decoder. */
extern void  xz_dec_lzma2_end(struct xz_dec_lzma2 *s);















		







		





#line 12 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_dec_stream.c" 2
#line 1 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_stream.h" 1
/*
 * Definitions for handling the .xz file format
 *
 * Author: Lasse Collin <lasse.collin@tukaani.org>
 *
 * This file has been put into the public domain.
 * You can do whatever you want with this file.
 */










/*
 * See the .xz file format specification at
 * http://tukaani.org/xz/xz-file-format.txt
 * to understand the container format.
 */









/*
 * Variable-length integer can hold a 63-bit unsigned integer, or a special
 * value to indicate that the value is unknown.
 */
typedef uint64_t vli_type;




/* Maximum encoded size of a VLI */


/* Integrity Check types */
enum xz_check {
	XZ_CHECK_NONE = 0,
	XZ_CHECK_CRC32 = 1,
	XZ_CHECK_CRC64 = 4,
	XZ_CHECK_SHA256 = 10
};

/* Maximum possible Check ID */



#line 13 "cprojects/busybox/busybox-1.18.5/archival/libarchive/unxz/xz_dec_stream.c" 2

/* Hash used to validate the Index field */
struct xz_dec_hash {
	vli_type unpadded;
	vli_type uncompressed;
	uint32_t crc32;
};

struct xz_dec {
	/* Position in dec_main() */
	enum {
		SEQ_STREAM_HEADER,
		SEQ_BLOCK_START,
		SEQ_BLOCK_HEADER,
		SEQ_BLOCK_UNCOMPRESS,
		SEQ_BLOCK_PADDING,
		SEQ_BLOCK_CHECK,
		SEQ_INDEX,
		SEQ_INDEX_PADDING,
		SEQ_INDEX_CRC32,
		SEQ_STREAM_FOOTER
	} sequence;

	/* Position in variable-length integers and Check fields */
	uint32_t pos;

	/* Variable-length integer decoded by dec_vli() */
	vli_type vli;

	/* Saved in_pos and out_pos */
	size_t in_start;
	size_t out_start;

	/* CRC32 value in Block or Index */
	uint32_t crc32;

	/* Type of the integrity check calculated from uncompressed data */
	enum xz_check check_type;

	/* Operation mode */
	enum xz_mode mode;

	/*
	 * True if the next call to xz_dec_run() is allowed to return
	 * XZ_BUF_ERROR.
	 */
	_Bool allow_buf_error;

	/* Information stored in Block Header */
	struct {
		/*
		 * Value stored in the Compressed Size field, or
		 * VLI_UNKNOWN if Compressed Size is not present.
		 */
		vli_type compressed;

		/*
		 * Value stored in the Uncompressed Size field, or
		 * VLI_UNKNOWN if Uncompressed Size is not present.
		 */
		vli_type uncompressed;

		/* Size of the Block Header field */
		uint32_t size;
	} block_header;

	/* Information collected when decoding Blocks */
	struct {
		/* Observed compressed size of the current Block */
		vli_type compressed;

		/* Observed uncompressed size of the current Block */
		vli_type uncompressed;

		/* Number of Blocks decoded so far */
		vli_type count;

		/*
		 * Hash calculated from the Block sizes. This is used to
		 * validate the Index field.
		 */
		struct xz_dec_hash hash;
	} block;

	/* Variables needed when verifying the Index field */
	struct {
		/* Position in dec_index() */
		enum {
			SEQ_INDEX_COUNT,
			SEQ_INDEX_UNPADDED,
			SEQ_INDEX_UNCOMPRESSED
		} sequence;

		/* Size of the Index in bytes */
		vli_type size;

		/* Number of Records (matches block.count in valid files) */
		vli_type count;

		/*
		 * Hash calculated from the Records (matches block.hash in
		 * valid files).
		 */
		struct xz_dec_hash hash;
	} index;

	/*
	 * Temporary buffer needed to hold Stream Header, Block Header,
	 * and Stream Footer. The Block Header is the biggest (1 KiB)
	 * so we reserve space according to that. buf[] has to be aligned
	 * to a multiple of four bytes; the size_t variables before it
	 * should guarantee this.
	 */
	struct {
		size_t pos;
		size_t size;
		uint8_t buf[1024];
	} temp;

	struct xz_dec_lzma2 *lzma2;


	
	

};




	
	
	
	
	
	


/*
 * Fill s->temp by copying data starting from b->in[b->in_pos]. Caller
 * must have set s->temp.pos to indicate how much data we are supposed
 * to copy into s->temp.buf. Return true once s->temp.pos has reached
 * s->temp.size.
 */
static _Bool  fill_temp(struct xz_dec *s, struct xz_buf *b)
{
	size_t copy_size = ((
 b->in_size - b->in_pos) < (s->temp.size - s->temp.pos) ? (
 b->in_size - b->in_pos) : (s->temp.size - s->temp.pos));

	memcpy(s->temp.buf + s->temp.pos, b->in + b->in_pos, copy_size);
	b->in_pos += copy_size;
	s->temp.pos += copy_size;

	if (s->temp.pos == s->temp.size) {
		s->temp.pos = 0;
		return 1;
	}

	return 0;
}

/* Decode a variable-length integer (little-endian base-128 encoding) */
static enum xz_ret  dec_vli(struct xz_dec *s,
		const uint8_t *in, size_t *in_pos, size_t in_size)
{
	uint8_t byte;

	if (s->pos == 0)
		s->vli = 0;

	while (*in_pos < in_size) {
		byte = in[*in_pos];
		++*in_pos;

		s->vli |= (vli_type)(byte & 0x7F) << s->pos;

		if ((byte & 0x80) == 0) {
			/* Don't allow non-minimal encodings. */
			if (byte == 0 && s->pos != 0)
				return XZ_DATA_ERROR;

			s->pos = 0;
			return XZ_STREAM_END;
		}

		s->pos += 7;
		if (s->pos == 7 * (sizeof(vli_type) * 8 / 7))
			return XZ_DATA_ERROR;
	}

	return XZ_OK;
}

/*
 * Decode the Compressed Data field from a Block. Update and validate
 * the observed compressed and uncompressed sizes of the Block so that
 * they don't exceed the values possibly stored in the Block Header
 * (validation assumes that no integer overflow occurs, since vli_type
 * is normally uint64_t). Update the CRC32 if presence of the CRC32
 * field was indicated in Stream Header.
 *
 * Once the decoding is finished, validate that the observed sizes match
 * the sizes possibly stored in the Block Header. Update the hash and
 * Block count, which are later used to validate the Index field.
 */
static enum xz_ret  dec_block(struct xz_dec *s, struct xz_buf *b)
{
	enum xz_ret ret;

	s->in_start = b->in_pos;
	s->out_start = b->out_pos;


	
		
	

		ret = xz_dec_lzma2_run(s->lzma2, b);

	s->block.compressed += b->in_pos - s->in_start;
	s->block.uncompressed += b->out_pos - s->out_start;

	/*
	 * There is no need to separately check for VLI_UNKNOWN, since
	 * the observed sizes are always smaller than VLI_UNKNOWN.
	 */
	if (s->block.compressed > s->block_header.compressed
			|| s->block.uncompressed
				> s->block_header.uncompressed)
		return XZ_DATA_ERROR;

	if (s->check_type == XZ_CHECK_CRC32)
		s->crc32 = xz_crc32(b->out + s->out_start,
				b->out_pos - s->out_start, s->crc32);

	if (ret == XZ_STREAM_END) {
		if (s->block_header.compressed != ((vli_type)-1)
				&& s->block_header.compressed
					!= s->block.compressed)
			return XZ_DATA_ERROR;

		if (s->block_header.uncompressed != ((vli_type)-1)
				&& s->block_header.uncompressed
					!= s->block.uncompressed)
			return XZ_DATA_ERROR;

		s->block.hash.unpadded += s->block_header.size
				+ s->block.compressed;


		
 		if (s->check_type == XZ_CHECK_CRC32)
			s->block.hash.unpadded += 4;

		s->block.hash.uncompressed += s->block.uncompressed;
		s->block.hash.crc32 = xz_crc32(
				(const uint8_t *)&s->block.hash,
				sizeof(s->block.hash), s->block.hash.crc32);

		++s->block.count;
	}

	return ret;
}

/* Update the Index size and the CRC32 value. */
static void  index_update(struct xz_dec *s, const struct xz_buf *b)
{
	size_t in_used = b->in_pos - s->in_start;
	s->index.size += in_used;
	s->crc32 = xz_crc32(b->in + s->in_start, in_used, s->crc32);
}

/*
 * Decode the Number of Records, Unpadded Size, and Uncompressed Size
 * fields from the Index field. That is, Index Padding and CRC32 are not
 * decoded by this function.
 *
 * This can return XZ_OK (more input needed), XZ_STREAM_END (everything
 * successfully decoded), or XZ_DATA_ERROR (input is corrupt).
 */
static enum xz_ret  dec_index(struct xz_dec *s, struct xz_buf *b)
{
	enum xz_ret ret;

	do {
		ret = dec_vli(s, b->in, &b->in_pos, b->in_size);
		if (ret != XZ_STREAM_END) {
			index_update(s, b);
			return ret;
		}

		switch (s->index.sequence) {
		case SEQ_INDEX_COUNT:
			s->index.count = s->vli;

			/*
			 * Validate that the Number of Records field
			 * indicates the same number of Records as
			 * there were Blocks in the Stream.
			 */
			if (s->index.count != s->block.count)
				return XZ_DATA_ERROR;

			s->index.sequence = SEQ_INDEX_UNPADDED;
			break;

		case SEQ_INDEX_UNPADDED:
			s->index.hash.unpadded += s->vli;
			s->index.sequence = SEQ_INDEX_UNCOMPRESSED;
			break;

		case SEQ_INDEX_UNCOMPRESSED:
			s->index.hash.uncompressed += s->vli;
			s->index.hash.crc32 = xz_crc32(
					(const uint8_t *)&s->index.hash,
					sizeof(s->index.hash),
					s->index.hash.crc32);
			--s->index.count;
			s->index.sequence = SEQ_INDEX_UNPADDED;
			break;
		}
	} while (s->index.count > 0);

	return XZ_STREAM_END;
}

/*
 * Validate that the next four input bytes match the value of s->crc32.
 * s->pos must be zero when starting to validate the first byte.
 */
static enum xz_ret  crc32_validate(struct xz_dec *s, struct xz_buf *b)
{
	do {
		if (b->in_pos == b->in_size)
			return XZ_OK;

		if (((s->crc32 >> s->pos) & 0xFF) != b->in[b->in_pos++])
			return XZ_DATA_ERROR;

		s->pos += 8;

	} while (s->pos < 32);

	s->crc32 = 0;
	s->pos = 0;

	return XZ_STREAM_END;
}








	
		
			

		
		
	

	

	


/* Decode the Stream Header field (the first 12 bytes of the .xz Stream). */
static enum xz_ret  dec_stream_header(struct xz_dec *s)
{
	if (!(memcmp(s->temp.buf, "\3757zXZ\0", 6) == 0))
		return XZ_FORMAT_ERROR;

	if (xz_crc32(s->temp.buf + 6, 2, 0)
			!= get_unaligned_le32(s->temp.buf + 6 + 2))
		return XZ_DATA_ERROR;

	if (s->temp.buf[6] != 0)
		return XZ_OPTIONS_ERROR;

	/*
	 * Of integrity checks, we support only none (Check ID = 0) and
	 * CRC32 (Check ID = 1). However, if XZ_DEC_ANY_CHECK is defined,
	 * we will accept other check types too, but then the check won't
	 * be verified and a warning (XZ_UNSUPPORTED_CHECK) will be given.
	 */
	s->check_type = s->temp.buf[6 + 1];


	
		

	
		
 	if (s->check_type > XZ_CHECK_CRC32)
		return XZ_OPTIONS_ERROR;

	return XZ_OK;
}

/* Decode the Stream Footer field (the last 12 bytes of the .xz Stream) */
static enum xz_ret  dec_stream_footer(struct xz_dec *s)
{
	if (!(memcmp(s->temp.buf + 10, "YZ", 2) == 0))
		return XZ_DATA_ERROR;

	if (xz_crc32(s->temp.buf + 4, 6, 0) != get_unaligned_le32(s->temp.buf))
		return XZ_DATA_ERROR;

	/*
	 * Validate Backward Size. Note that we never added the size of the
	 * Index CRC32 field to s->index.size, thus we use s->index.size / 4
	 * instead of s->index.size / 4 - 1.
	 */
	if ((s->index.size >> 2) != get_unaligned_le32(s->temp.buf + 4))
		return XZ_DATA_ERROR;

	if (s->temp.buf[8] != 0 || s->temp.buf[9] != s->check_type)
		return XZ_DATA_ERROR;

	/*
	 * Use XZ_STREAM_END instead of XZ_OK to be more convenient
	 * for the caller.
	 */
	return XZ_STREAM_END;
}

/* Decode the Block Header and initialize the filter chain. */
static enum xz_ret  dec_block_header(struct xz_dec *s)
{
	enum xz_ret ret;

	/*
	 * Validate the CRC32. We know that the temp buffer is at least
	 * eight bytes so this is safe.
	 */
	s->temp.size -= 4;
	if (xz_crc32(s->temp.buf, s->temp.size, 0)
			!= get_unaligned_le32(s->temp.buf + s->temp.size))
		return XZ_DATA_ERROR;

	s->temp.pos = 2;

	/*
	 * Catch unsupported Block Flags. We support only one or two filters
	 * in the chain, so we catch that with the same test.
	 */

	
 	if (s->temp.buf[1] & 0x3F)

		return XZ_OPTIONS_ERROR;

	/* Compressed Size */
	if (s->temp.buf[1] & 0x40) {
		if (dec_vli(s, s->temp.buf, &s->temp.pos, s->temp.size)
					!= XZ_STREAM_END)
			return XZ_DATA_ERROR;

		s->block_header.compressed = s->vli;
	} else {
		s->block_header.compressed = ((vli_type)-1);
	}

	/* Uncompressed Size */
	if (s->temp.buf[1] & 0x80) {
		if (dec_vli(s, s->temp.buf, &s->temp.pos, s->temp.size)
				!= XZ_STREAM_END)
			return XZ_DATA_ERROR;

		s->block_header.uncompressed = s->vli;
	} else {
		s->block_header.uncompressed = ((vli_type)-1);
	}


	
	
	
		
			

		
		
			

		



		
			
	

	/* Valid Filter Flags always take at least two bytes. */
	if (s->temp.size - s->temp.pos < 2)
		return XZ_DATA_ERROR;

	/* Filter ID = LZMA2 */
	if (s->temp.buf[s->temp.pos++] != 0x21)
		return XZ_OPTIONS_ERROR;

	/* Size of Properties = 1-byte Filter Properties */
	if (s->temp.buf[s->temp.pos++] != 0x01)
		return XZ_OPTIONS_ERROR;

	/* Filter Properties contains LZMA2 dictionary size. */
	if (s->temp.size - s->temp.pos < 1)
		return XZ_DATA_ERROR;

	ret = xz_dec_lzma2_reset(s->lzma2, s->temp.buf[s->temp.pos++]);
	if (ret != XZ_OK)
		return ret;

	/* The rest must be Header Padding. */
	while (s->temp.pos < s->temp.size)
		if (s->temp.buf[s->temp.pos++] != 0x00)
			return XZ_OPTIONS_ERROR;

	s->temp.pos = 0;
	s->block.compressed = 0;
	s->block.uncompressed = 0;

	return XZ_OK;
}

static enum xz_ret  dec_main(struct xz_dec *s, struct xz_buf *b)
{
	enum xz_ret ret;

	/*
	 * Store the start position for the case when we are in the middle
	 * of the Index field.
	 */
	s->in_start = b->in_pos;

	while (1) {
		switch (s->sequence) {
		case SEQ_STREAM_HEADER:
			/*
			 * Stream Header is copied to s->temp, and then
			 * decoded from there. This way if the caller
			 * gives us only little input at a time, we can
			 * still keep the Stream Header decoding code
			 * simple. Similar approach is used in many places
			 * in this file.
			 */
			if (!fill_temp(s, b))
				return XZ_OK;

			/*
			 * If dec_stream_header() returns
			 * XZ_UNSUPPORTED_CHECK, it is still possible
			 * to continue decoding if working in multi-call
			 * mode. Thus, update s->sequence before calling
			 * dec_stream_header().
			 */
			s->sequence = SEQ_BLOCK_START;

			ret = dec_stream_header(s);
			if (ret != XZ_OK)
				return ret;

		case SEQ_BLOCK_START:
			/* We need one byte of input to continue. */
			if (b->in_pos == b->in_size)
				return XZ_OK;

			/* See if this is the beginning of the Index field. */
			if (b->in[b->in_pos] == 0) {
				s->in_start = b->in_pos++;
				s->sequence = SEQ_INDEX;
				break;
			}

			/*
			 * Calculate the size of the Block Header and
			 * prepare to decode it.
			 */
			s->block_header.size
				= ((uint32_t)b->in[b->in_pos] + 1) * 4;

			s->temp.size = s->block_header.size;
			s->temp.pos = 0;
			s->sequence = SEQ_BLOCK_HEADER;

		case SEQ_BLOCK_HEADER:
			if (!fill_temp(s, b))
				return XZ_OK;

			ret = dec_block_header(s);
			if (ret != XZ_OK)
				return ret;

			s->sequence = SEQ_BLOCK_UNCOMPRESS;

		case SEQ_BLOCK_UNCOMPRESS:
			ret = dec_block(s, b);
			if (ret != XZ_STREAM_END)
				return ret;

			s->sequence = SEQ_BLOCK_PADDING;

		case SEQ_BLOCK_PADDING:
			/*
			 * Size of Compressed Data + Block Padding
			 * must be a multiple of four. We don't need
			 * s->block.compressed for anything else
			 * anymore, so we use it here to test the size
			 * of the Block Padding field.
			 */
			while (s->block.compressed & 3) {
				if (b->in_pos == b->in_size)
					return XZ_OK;

				if (b->in[b->in_pos++] != 0)
					return XZ_DATA_ERROR;

				++s->block.compressed;
			}

			s->sequence = SEQ_BLOCK_CHECK;

		case SEQ_BLOCK_CHECK:
			if (s->check_type == XZ_CHECK_CRC32) {
				ret = crc32_validate(s, b);
				if (ret != XZ_STREAM_END)
					return ret;
			}

			
				
			

			s->sequence = SEQ_BLOCK_START;
			break;

		case SEQ_INDEX:
			ret = dec_index(s, b);
			if (ret != XZ_STREAM_END)
				return ret;

			s->sequence = SEQ_INDEX_PADDING;

		case SEQ_INDEX_PADDING:
			while ((s->index.size + (b->in_pos - s->in_start))
					& 3) {
				if (b->in_pos == b->in_size) {
					index_update(s, b);
					return XZ_OK;
				}

				if (b->in[b->in_pos++] != 0)
					return XZ_DATA_ERROR;
			}

			/* Finish the CRC32 value and Index size. */
			index_update(s, b);

			/* Compare the hashes to validate the Index field. */
			if (!(memcmp(&s->block.hash, &s->index.hash, 
 sizeof(s->block.hash)) == 0))
				return XZ_DATA_ERROR;

			s->sequence = SEQ_INDEX_CRC32;

		case SEQ_INDEX_CRC32:
			ret = crc32_validate(s, b);
			if (ret != XZ_STREAM_END)
				return ret;

			s->temp.size = 12;
			s->sequence = SEQ_STREAM_FOOTER;

		case SEQ_STREAM_FOOTER:
			if (!fill_temp(s, b))
				return XZ_OK;

			return dec_stream_footer(s);
		}
	}

	/* Never reached */
}

/*
 * xz_dec_run() is a wrapper for dec_main() to handle some special cases in
 * multi-call and single-call decoding.
 *
 * In multi-call mode, we must return XZ_BUF_ERROR when it seems clear that we
 * are not going to make any progress anymore. This is to prevent the caller
 * from calling us infinitely when the input file is truncated or otherwise
 * corrupt. Since zlib-style API allows that the caller fills the input buffer
 * only when the decoder doesn't produce any new output, we have to be careful
 * to avoid returning XZ_BUF_ERROR too easily: XZ_BUF_ERROR is returned only
 * after the second consecutive call to xz_dec_run() that makes no progress.
 *
 * In single-call mode, if we couldn't decode everything and no error
 * occurred, either the input is truncated or the output buffer is too small.
 * Since we know that the last input byte never produces any output, we know
 * that if all the input was consumed and decoding wasn't finished, the file
 * must be corrupt. Otherwise the output buffer has to be too small or the
 * file is corrupt in a way that decoding it produces too big output.
 *
 * If single-call decoding fails, we reset b->in_pos and b->out_pos back to
 * their original values. This is because with some filter chains there won't
 * be any valid uncompressed data in the output buffer unless the decoding
 * actually succeeds (that's the price to pay of using the output buffer as
 * the workspace).
 */
extern enum xz_ret  xz_dec_run(struct xz_dec *s, struct xz_buf *b)
{
	size_t in_start;
	size_t out_start;
	enum xz_ret ret;

	if (((s->mode) == XZ_SINGLE))
		xz_dec_reset(s);

	in_start = b->in_pos;
	out_start = b->out_pos;
	ret = dec_main(s, b);

	if (((s->mode) == XZ_SINGLE)) {
		if (ret == XZ_OK)
			ret = b->in_pos == b->in_size
					? XZ_DATA_ERROR : XZ_BUF_ERROR;

		if (ret != XZ_STREAM_END) {
			b->in_pos = in_start;
			b->out_pos = out_start;
		}

	} else if (ret == XZ_OK && in_start == b->in_pos
			&& out_start == b->out_pos) {
		if (s->allow_buf_error)
			ret = XZ_BUF_ERROR;

		s->allow_buf_error = 1;
	} else {
		s->allow_buf_error = 0;
	}

	return ret;
}

extern struct xz_dec *  xz_dec_init(
		enum xz_mode mode, uint32_t dict_max)
{
	struct xz_dec *s = malloc(sizeof(*s));
	if (s == ((void *)0))
		return ((void *)0);

	s->mode = mode;


	
	
		

	s->lzma2 = xz_dec_lzma2_create(mode, dict_max);
	if (s->lzma2 == ((void *)0))
		goto error_lzma2;

	xz_dec_reset(s);
	return s;

error_lzma2:

	


	free(s);
	return ((void *)0);
}

extern void  xz_dec_reset(struct xz_dec *s)
{
	s->sequence = SEQ_STREAM_HEADER;
	s->allow_buf_error = 0;
	s->pos = 0;
	s->crc32 = 0;
	memset(&s->block, 0, sizeof(s->block));
	memset(&s->index, 0, sizeof(s->index));
	s->temp.pos = 0;
	s->temp.size = 12;
}

extern void  xz_dec_end(struct xz_dec *s)
{
	if (s != ((void *)0)) {
		xz_dec_lzma2_end(s->lzma2);

		

		free(s);
	}
}
